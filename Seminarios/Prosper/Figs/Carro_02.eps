%!PS-Adobe-3.0 EPSF-3.0
%%Title: Carro_02.fig
%%Creator: fig2dev Version 3.2 Patchlevel 5d
%%CreationDate: Thu May  9 22:34:52 2013
%%BoundingBox: 0 0 442 176
%Magnification: 1.0000
%%EndComments
%%BeginProlog
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.612 0.000 0.000 srgb} bind def
/col33 {0.549 0.549 0.549 srgb} bind def
/col34 {0.549 0.549 0.549 srgb} bind def
/col35 {0.259 0.259 0.259 srgb} bind def
/col36 {0.549 0.549 0.549 srgb} bind def
/col37 {0.259 0.259 0.259 srgb} bind def
/col38 {0.549 0.549 0.549 srgb} bind def
/col39 {0.259 0.259 0.259 srgb} bind def
/col40 {0.549 0.549 0.549 srgb} bind def
/col41 {0.259 0.259 0.259 srgb} bind def
/col42 {0.549 0.549 0.549 srgb} bind def
/col43 {0.259 0.259 0.259 srgb} bind def
/col44 {0.761 0.761 0.761 srgb} bind def
/col45 {0.431 0.431 0.431 srgb} bind def
/col46 {0.267 0.267 0.267 srgb} bind def
/col47 {0.557 0.561 0.557 srgb} bind def
/col48 {0.443 0.443 0.443 srgb} bind def
/col49 {0.682 0.682 0.682 srgb} bind def
/col50 {0.200 0.200 0.200 srgb} bind def
/col51 {0.580 0.576 0.584 srgb} bind def
/col52 {0.455 0.439 0.459 srgb} bind def
/col53 {0.333 0.333 0.333 srgb} bind def
/col54 {0.702 0.702 0.702 srgb} bind def
/col55 {0.765 0.765 0.765 srgb} bind def
/col56 {0.427 0.427 0.427 srgb} bind def
/col57 {0.271 0.271 0.271 srgb} bind def
/col58 {0.557 0.557 0.557 srgb} bind def
/col59 {0.776 0.718 0.592 srgb} bind def
/col60 {0.937 0.973 1.000 srgb} bind def
/col61 {0.863 0.796 0.651 srgb} bind def
/col62 {0.251 0.251 0.251 srgb} bind def
/col63 {0.502 0.502 0.502 srgb} bind def
/col64 {0.753 0.753 0.753 srgb} bind def
/col65 {0.878 0.878 0.878 srgb} bind def
/col66 {0.667 0.667 0.667 srgb} bind def
/col67 {0.843 0.843 0.843 srgb} bind def
/col68 {0.745 0.745 0.745 srgb} bind def
/col69 {0.318 0.318 0.318 srgb} bind def
/col70 {0.906 0.890 0.906 srgb} bind def
/col71 {0.000 0.000 0.286 srgb} bind def
/col72 {0.475 0.475 0.475 srgb} bind def
/col73 {0.188 0.204 0.188 srgb} bind def
/col74 {0.255 0.255 0.255 srgb} bind def
/col75 {0.780 0.714 0.588 srgb} bind def
/col76 {0.255 0.271 0.255 srgb} bind def
/col77 {0.906 0.906 0.906 srgb} bind def
/col78 {0.443 0.459 0.443 srgb} bind def
/col79 {0.867 0.616 0.576 srgb} bind def
/col80 {0.945 0.925 0.878 srgb} bind def
/col81 {0.886 0.784 0.659 srgb} bind def
/col82 {0.882 0.882 0.882 srgb} bind def
/col83 {0.824 0.824 0.824 srgb} bind def
/col84 {0.929 0.929 0.929 srgb} bind def
/col85 {0.855 0.478 0.102 srgb} bind def
/col86 {0.945 0.894 0.102 srgb} bind def
/col87 {0.533 0.490 0.761 srgb} bind def
/col88 {0.839 0.839 0.839 srgb} bind def
/col89 {0.549 0.549 0.647 srgb} bind def
/col90 {0.290 0.290 0.290 srgb} bind def
/col91 {0.549 0.420 0.420 srgb} bind def
/col92 {0.353 0.353 0.353 srgb} bind def
/col93 {0.388 0.388 0.388 srgb} bind def
/col94 {0.718 0.608 0.451 srgb} bind def
/col95 {0.255 0.576 1.000 srgb} bind def
/col96 {0.749 0.439 0.231 srgb} bind def
/col97 {0.859 0.467 0.000 srgb} bind def
/col98 {0.855 0.722 0.000 srgb} bind def
/col99 {0.000 0.392 0.000 srgb} bind def
/col100 {0.353 0.420 0.231 srgb} bind def
/col101 {0.827 0.827 0.827 srgb} bind def
/col102 {0.557 0.557 0.643 srgb} bind def
/col103 {0.953 0.725 0.365 srgb} bind def
/col104 {0.537 0.600 0.420 srgb} bind def
/col105 {0.392 0.392 0.392 srgb} bind def
/col106 {0.718 0.902 1.000 srgb} bind def
/col107 {0.525 0.753 0.925 srgb} bind def
/col108 {0.741 0.741 0.741 srgb} bind def
/col109 {0.827 0.584 0.322 srgb} bind def
/col110 {0.596 0.824 0.996 srgb} bind def
/col111 {0.549 0.612 0.420 srgb} bind def
/col112 {0.969 0.420 0.000 srgb} bind def
/col113 {0.353 0.420 0.224 srgb} bind def
/col114 {0.549 0.612 0.420 srgb} bind def
/col115 {0.549 0.612 0.482 srgb} bind def
/col116 {0.094 0.290 0.094 srgb} bind def
/col117 {0.678 0.678 0.678 srgb} bind def
/col118 {0.969 0.741 0.353 srgb} bind def
/col119 {0.388 0.420 0.612 srgb} bind def
/col120 {0.969 0.969 0.969 srgb} bind def
/col121 {0.871 0.000 0.000 srgb} bind def
/col122 {0.678 0.678 0.678 srgb} bind def
/col123 {0.969 0.741 0.353 srgb} bind def
/col124 {0.678 0.678 0.678 srgb} bind def
/col125 {0.969 0.741 0.353 srgb} bind def
/col126 {0.388 0.420 0.612 srgb} bind def
/col127 {0.322 0.420 0.161 srgb} bind def
/col128 {0.580 0.580 0.580 srgb} bind def
/col129 {0.000 0.388 0.000 srgb} bind def
/col130 {0.000 0.388 0.290 srgb} bind def
/col131 {0.482 0.518 0.290 srgb} bind def
/col132 {0.906 0.741 0.482 srgb} bind def
/col133 {0.647 0.710 0.776 srgb} bind def
/col134 {0.420 0.420 0.580 srgb} bind def
/col135 {0.518 0.420 0.420 srgb} bind def
/col136 {0.322 0.612 0.290 srgb} bind def
/col137 {0.839 0.906 0.906 srgb} bind def
/col138 {0.322 0.388 0.388 srgb} bind def
/col139 {0.094 0.420 0.290 srgb} bind def
/col140 {0.612 0.647 0.710 srgb} bind def
/col141 {1.000 0.580 0.000 srgb} bind def
/col142 {1.000 0.580 0.000 srgb} bind def
/col143 {0.000 0.388 0.290 srgb} bind def
/col144 {0.482 0.518 0.290 srgb} bind def
/col145 {0.388 0.451 0.482 srgb} bind def
/col146 {0.906 0.741 0.482 srgb} bind def
/col147 {0.094 0.290 0.094 srgb} bind def
/col148 {0.969 0.741 0.353 srgb} bind def
/col149 {0.871 0.871 0.871 srgb} bind def
/col150 {0.953 0.933 0.827 srgb} bind def
/col151 {0.961 0.682 0.365 srgb} bind def
/col152 {0.584 0.808 0.600 srgb} bind def
/col153 {0.710 0.082 0.490 srgb} bind def
/col154 {0.933 0.933 0.933 srgb} bind def
/col155 {0.518 0.518 0.518 srgb} bind def
/col156 {0.482 0.482 0.482 srgb} bind def
/col157 {0.000 0.353 0.000 srgb} bind def
/col158 {0.906 0.451 0.451 srgb} bind def
/col159 {1.000 0.796 0.192 srgb} bind def
/col160 {0.161 0.475 0.290 srgb} bind def
/col161 {0.871 0.157 0.129 srgb} bind def
/col162 {0.129 0.349 0.776 srgb} bind def
/col163 {0.973 0.973 0.973 srgb} bind def
/col164 {0.902 0.902 0.902 srgb} bind def
/col165 {0.129 0.518 0.353 srgb} bind def

end

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% left-shingles
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 48 48 true [ 48 0 0 -48 0 48 ]
	{<000000000001000000000001000000000002000000000002
	000000000004000000000004000000000008000000000008
	000000000010000000000010000000000020000000000020
	000000000040000000000040000000000080ffffffffffff
	000000010000000000010000000000020000000000020000
	000000040000000000040000000000080000000000080000
	000000100000000000100000000000200000000000200000
	000000400000000000400000000000800000ffffffffffff
	000100000000000100000000000200000000000200000000
	000400000000000400000000000800000000000800000000
	001000000000001000000000002000000000002000000000
	004000000000004000000000008000000000ffffffffffff>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P12 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

/pageheader {
save
newpath 0 176 moveto 0 0 lineto 442 0 lineto 442 176 lineto closepath clip newpath
-35.3 380.8 translate
1 -1 scale
$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
} bind def
/pagefooter {
$F2psEnd
restore
} bind def
%%EndProlog
pageheader
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Arc
7.500 slw
0 slc
n 2112.3 4672.4 243.4 149.7633 38.8150 arcn
gs col0 s gr

% Ellipse
15.000 slw
n 1893 4200 144 144 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 2781 4200 144 144 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 2325 3711 36 36 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Ellipse
n 1889 4201 36 36 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Ellipse
n 2775 4201 36 36 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Ellipse
7.500 slw
n 7151 4103 372 372 0 360 DrawEllipse gs col0 s gr

% Polyline
0 slj
n 600 4350 m 6450 4350 l 6450 4650 l 600 4650 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P12 [24 0 0 -24 40.00 290.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
15.000 slw
n 1650 3450 m 3000 3450 l 3000 4050 l 1650 4050 l
 cp gs col0 s gr 
% Polyline
n 2329 3697 m
 1509 5710 l gs col0 s gr 
% Polyline
7.500 slw
 [60] 0 sd
n 2335 3717 m
 2335 5730 l gs col0 s gr  [] 0 sd
% Polyline
n 3012 3745 m
 7242 3745 l gs col0 s gr 
% Polyline
30.000 slw
n 6002 4335 m 7132 4105 l
 6442 4645 l gs col0 s gr 
% Polyline
15.000 slw
n 7162 5865 m 7922 5865 l 7922 6325 l 7162 6325 l
 cp gs col0 s gr 
% Polyline
n 7522 4105 m
 7522 5875 l gs col0 s gr 
% Polyline
n 1122 5715 m 1882 5715 l 1882 6155 l 1122 6155 l
 cp gs col0 s gr 
/NewCenturySchlbk-Italic ff 390.00 scf sf
2432 3760 m
gs 1 -1 sc (m) col0 sh gr
/NewCenturySchlbk-Italic ff 240.00 scf sf
2812 3820 m
gs 1 -1 sc (1) col0 sh gr
/NewCenturySchlbk-Italic ff 240.00 scf sf
1612 6065 m
gs 1 -1 sc (2) col0 sh gr
/NewCenturySchlbk-Italic ff 390.00 scf sf
1222 6015 m
gs 1 -1 sc (m) col0 sh gr
/NewCenturySchlbk-Italic ff 360.00 scf sf
7352 6245 m
gs 1 -1 sc (M) col0 sh gr
/Symbol ff 360.00 scf sf
1962 5265 m
gs 1 -1 sc (q) col0 sh gr
% here ends figure;
pagefooter
showpage
%%Trailer
end
%EOF
