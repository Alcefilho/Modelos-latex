%!PS-Adobe-2.0
%%Creator: dvips(k) 5.995 Copyright 2015 Radical Eye Software
%%Title: teste_prosper.dvi
%%CreationDate: Tue Sep 20 14:12:23 2016
%%Pages: 7
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: NimbusSanL-Regu NimbusSanL-Bold MSAM10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /usr/bin/dvips -o teste_prosper.ps teste_prosper.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2016.09.20:1412
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/07/31
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-ovl.pro 0 0
% $Id: pst-ovl.pro 859 2013-12-21 16:51:58Z herbert $
%
%% PostScript prologue for pst-ovl.tex.
%% Version 0.04, 2014/05/12
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/tx@ovlDict 10 dict def 
tx@ovlDict begin
%
/BeginOL { 
  dup -1 eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%
% END pst-ovl.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: MSAM10
%!PS-AdobeFont-1.0: MSAM10 003.002
%%Title: MSAM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSAM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSAM10 known{/MSAM10 findfont dup/UniqueID known{dup
/UniqueID get 5031981 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSAM10 def
/FontBBox {8 -463 1331 1003 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSAM10.) readonly def
/FullName (MSAM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 4 /squaresolid put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE2340939CE40EE9186A0DCC3D3
D661293EC5BB40766B73935EB54125526067D631E1E3D1D6569AB3546CB257C3
4C12CA4AE98C3F99898F1448AC0B416B8E5C3EEF3D74B5FD6A1BE3C23B160E78
79A9E0AC4FC82364F946003C1B2E0EF3CEA944727E7502B65BA1331D36C159E2
1D107580F28A32E04CB876822CEF478BF4464CE4F7AE824FC786E099A1BE2A3C
7D2BFE2A748AB092AEBC2021DBFD5C40E912BC5856F3EF8615147350E75D2BF9
E428D7948E2128053FDB1F90CA9C7D6581E25A6645879F50577FE7F0B32B873F
13F97C524E19F1CFE3883C0DE1DF80FB61111978B0C2D028A99A712D3DC27D8F
C83C4EC335F0DB9912DD2AF009FAA56C5BD5855BA92851629EF6C47E6AC303A6
1A231558746ED8A78C76E476ED71246A2E15C51F465AB21A22ACACB03014B06F
201876D3C6F49E2D38D8C4FE8011F7BB148FC3227E0BFA51C0F9AAD64F0C6095
77B3D875476B666F9FB9A46763C49272FC504CC0E817A1533409D293D6D62CC8
DFDA666BC9DC70C4510BFB0DD2BC94B33D457EACFD754761B696163DB4C547B5
FF8994977A7C9910AF486487CE0320FA1E705BAF4B14FB937229D80F58D01E6E
9D9716EA3EDA84840B5D6BDE216A25814ABC4DE4C6818266C33CD4C3DA4F23BF
DAE6ABDC6D64E7EC7DE918DDB0B05D8413D32D99D15FE112C1D393D21806E0C9
7CE0F0977AA36617B8DD50937C5B0B5698947B0A71A167072FE1B3AD6F274D97
484926DF52CE7D9D2A4928A188E1F867C298E6DB475C0CBE09F0523D8BC6FE24
E1CED78178EE1E9D66A906B72505339E62499C0E4B6B5A2D596C4F8F4312F582
9413DC88D6EDFEAAE0C86BEE44CBDDD79BC02C844B80324B1FE3512E73C213BF
ECD22E7E13F98AB56E4D693B1D6045045E2F01DCC2AA1F70A4699B7D718A743F
D749133029EAD1870DF0B00EDEEDFD33642A88EB10DDF4CBBF8A7D8F7781179F
A91CF398747D52769A054CDACAEDC330FB79ECC96CF43C29515F5895D3A8C1E6
828F776844C88090405F868A872EF54467B72825B001B46F6496817A9B928BEC
ED212D4368368778F2D1B66D005F2D6E3DF4AB9B9791AF2CECCA3AE524781A41
5052FD21CB81D934F0F12CF8C8FFC656BAFBE897C5E86A21D3F42A38F7916693
ADD1DBF48F534DA16099FFCF3E3DBCB254BF49D8F72FAC2F9548477F9AFA414E
65A29F24FA16A9E0955A9A6CCC47198E6332ECD1A791F2E36E6656852179A94C
E3CF4477A9A6CF507B8184ECA5C0304FA15ABD8B0C379EAC19B9D16A630D96DB
A6DA819C2E481AE4870BCAB5963C0F9D837C97E207F7ED58B776799586B9F755
B705AC31C09C3F74AFBCDACF092B05F9E2B072C1B17EE6347523D3D5E1D404AC
636C33DD94121C3711C3D05F48E12DF8489F894E4913263176E81927BF5E3A94
99D124F64D00BCC288F03FD14F89E6352083333EC6C2044E2F81C477DD4CA9A9
55135915C27654B09BC9099FA966AD440417945879399B39C7BF20385456878F
9AAE7343912927476C2C88A445C03E3B77381F3F9A82FEECADCCF8C307144775
144279EB14E0F0443F8200C0FABD54A075EDCB83EAB07A7CAF6EAB17C6CDB239
077DC62173A54E93BE2911F4A45F72B80DD9C41B301B292EFA78D361AD74BD7D
2E94D44A2D79BB7B89708E094A21CCB28D80E0FCA707D742CC02BB81FE4B0E06
4A5E93DF0414BAC27ADDB044A0D444692973994CD028E1C62F1FFA4776554914
2D55B0F81C06A2633A4AE42AD00422A619E339F2E6F0C6FC74F70552974509A0
812F1007FD7055E9ABB8CB39F799F847993DB9593A76C388F9BC883D4A0DE2CD
BFD0F7F2A5F1C50791EB4363104B49088E6EA2C5E61EF256A9FF232357D62D78
0C876D200E4136F7B0570A3B0988F3E23443081591DDB861745B4F6F0FF7D854
8F558F995A283B346E266DB6FFB54E0761046152A864F710113B6BF12967D022
2947517E1CE2079849CF8EB01BB2B96EEC2575AAAD1AA1E019D7E72BCFDF2979
8E2A6EE0C1525389C16411E5DBD416467B9900F07223117A77E0B4C3B0D49A96
C2E3A61AF9C9B1CEB80AC6357FC0CA446FF87BA0CCCD81924F6209198BD6E1A6
9EECEF233B17CC4E9F0654024F7E857EAB409F4B9B9ADE4090F2B715443A80EA
130369A193A32A4DA3730F13E3C9E717CCC9E74611D787277B73EFCE14FCC3B8
6B11AD88F42705F65E9C747B472F379ECDCB7F8F9C3FEA64402972623EA0998F
255892C43CEFD7ED08957C495AAACDA59E9398B43788DF27F7433F72377C8F88
F54F5E3A5564244827EBF92227B94F4FE896FEC6519769AAD567E618DFF61B7D
B93EE0FFA2EA58BE1FDAA0025259789FDB31A1019661C18080567EB5C6306596
F97F039E3C9ABF9E40B4725A96F8170B49B73B68E308786FE99B0C005DE01894
7CC93C196E1F830570D51F0AD29BF27CCE45AD7D3B4332C9D50F1E9C2D04E033
1E197DB9BE1D44566F738CD26A13B8EBC8FD49E999D35F042E8A24F025414F14
D9D11ED702250F1295722F68A022196A0E38B9ADDDBA997283ABAA62898EF32B
C765387E238CA3475ED5C6EF2803CE32B5A90A8287C70386F46B84C332E8C00F
85A8CC2DE78D433A325B7862AD4D93B3EE2CABC4B688833BF263E26879AF213C
934FAFEBE8D804E2BC8433B81ED5DA99F08C2C11B93019D3D9C1C952F20C68A7
E141DEA2CB983DAC5A2B9426A98262FEB13C420EAA315C890F0B907BEA099C1A
10B0AB255AF99694C722166DCDA72FD58CFBA3328FC5EF83A52A750C5E613E74
A8572CB8B78ABDAC27B798E727E3E5AF9451416493FE3F4E95157B4ABDF3A910
64369E34A2B40176A5E0E30F472E33A41B8C7BA4CB1BFB9173783909161370AA
EA40C83C60AAE242358688CE13193C9DDC3544A959A1E6A16FCC4BFAA65A63C7
5AEF208FC201F88DD047B5E6EFBD4BB256F973269BA1B06CCFC186D48BCCB4F6
A0F512B1D6541417BB6045045CBE72B72AA2549C345B1BB466335226A0E76A10
9645C25A0FB4CD8455C7C10C0F4E7E9914D2010BA1C95C6BAE4E62C8B6A8BDB4
92281B366208ABD9C010B3660C5E150D63D6927255CF9081C0898E9B206FAB57
B306669AB87AF405C537CA7D3411DBC41C53EEFD8071C094486158E97BAFE90E
BA29BEB83BA60776D33BF9CAF9C7FEB66D4B93DA27E499B006D243FF59CB33F6
AFC65D10B74CC522BF4AD45E3451B395AD5029B148A1C9B710D5CF02B65F9189
0822C0A33C4D07F2DEFDD5B4F6E063891F0456F1BCA4540F9DCD3B0F9F39696A
52336AFCF0A33A029AEEB448CE120B9D939487EC8274AD4E1D5F5AF4C14EC910
680C5E312735DFA3A5B1835370A76DFA63A05379021A64EE55E25AD5218398A3
6DD66D1B474A2E7C6E236E0E4A9BD0E4F7AD1807C6478225C58327BFE1822000
26713D01CAD6951F456504D79867D523605ECD78F2D5DA05994BA4812BF65E7E
34ACB732150ECB3D212D03387C71677F617D76A9A42C708C89D61614F280A5FB
0BFA84A17CF9DF333C9E13DEE82A5ADC9D2E588338D247889ECFB090CC63CF9B
8D92B1CB784B65BE80E3B57998F9ABEE702E07BC127D272C67B0A97734E405C1
FAA87E6B9DDB8ECAD2B9DCD56D687DFF71BDF29BBDA0A0812695F81C5EBB83F8
0A810D6560F28D7CA1F89A11F253E1B3B4EBAF511454E4BF2C46A333BC186558
8D73374455A32DE993526063AE70EAA647454ECC62BFC5A53357F2955E4A8A02
E20AA64AB6511CEFC5A32874C8F2BC2424C6B85BAE80191216A22D93BF2813EA
18A1A961543D7C58C4F4B263D76AD6C61270F2A77468B3E59BA9D861E5AA6CE1
B7A9C4C2A13E80C4052283DF3529210B3F6E90C2EFF205866865E7E96F34513B
05A45939728619E02FF1410C0D220F6D615718893E7370A0B91675BCF681B2D9
56112D9D37ECB819017472DCD38FE4724834869F82985A69E33BF862DB420DEB
AA1CDF83099114501C037873E86E0D33FC954E12D40038FBDC78E7159B738516
A078AA386D9424B8D4913B7848D8439D2ACAFB7C81C9AB192D77F316D299D11B
24F67141B1E0FDB564B70FE68070BE6BC00F22C11A1291BA6401C722487BFE19
D7869DA874C9059677DBEF958B7AA06EB924A17B3EFE9014493EA1FA8C4C67B2
B5DC483ACFAAE88F2DFF9FAAA7825854671ECFD522540C9F6C3817C11D3B63CA
8ECF710EAC4F27506B67B972633D0821BD15F4511F305A5677F2919DEBF7DE88
4F60E36360A7856B6B6A8A866832534279AF45B4232877F45C92ABDFE0910F7C
F86825A1B6012FF93479BDC9639C01CF2C783356B33127AEC7039D40529EE54A
756D8B7524E069DA60A38AFE592B8B228ABE22B7BC9CD9B23277FBB567B1377C
77E21AE6F55ADF4F8864F4260562F0384165444385D5A8C5966EBF191900B898
85240634EBE8A5DA382E0EE3583B1B5D102B6EBFAD60AB9C335919EFBAA55A6E
36CE4887299E395EB5766080FC0B6F93B1247F28842FB817084C9C090616AA72
25F4ED6996D36CD9675009C615BA26BD4904F3130991023E4116A7E6BCB26C10
7106241DE039BA7F26E137040BAF587AE03A476526F025C70F16EF23474C0EEB
6E27D8562C7C733CF470EA198494A505A8F871E8EBA31D4F0D9F0AEB9D0EF63B
738B582F7BD73DEFD5D83707BBC7854B6FC7FA6E2636F0B68C4858B247F70C4D
F602764B9465975E9AF28C2046EAD743CC350E747D6524B9CD7F325946B9287B
F7D46E4342A71B0409B2BF5FA4D340DD549F6A5B05D2784EC5A248560F4E214B
C5304217B3AF8451C190FE1C312527746E45DE39D8D43CBEED9A19FFE143CA61
3B65344C26E189D790A0211556C609F107C78F55CA120F3449A697D1305DAD2C
D3EAB88E2CBDC022A4E036E232237C1C16ECFA62D6CF8EA3B6610B58C75EEEE9
676201206E4A8B8C7CF5EF409F2C0544DAAC926497B1FBCDEA07DF042ED870D3
9D74709FDB8CD2CAC4726655371EDDAE78A5D9E0811ED4DCE8C23DAE1ED44D06
F4DF09BD9A00C1DE178E766E05CD3CA64301C592BC01EA4F6D1973586547B170
A3338C60FA1148DC5F3F7B7DB5EAC870239BD137CC85AD54380379F5C30B0754
D0A0FD8DDDC7CE725B58F37DE7DF077916C912F2808D0E4CA32808D0439A148E
3B1E18B9C88C8B4DF23FF5C53B2881D7C23D1C239F08137BBD8FEA326E7CD1BC
C80027A40463BD58758F4402D3DCDFED46C2E3C405E1B1E8DD0062E1272AB5C8
91953946FBB4B9EB0A74D0F7F4FAAD798571EEDBF0CD4C92A6916909297F27B7
5135990685B849E8244D2EE73D5C7BEF1D3042CA8353210EB4293A2B2F1BCCEA
7FF2AA91F52D343BFBF5E91F2381AE5B6803C46605D471B7BD122153E87D872D
EBF37727370BB683A194C4C4DE13F54AECB116BEB3E0750E10AF272E0C015641
0F9264A21BA79821B29D8CB78746C314E6893765AB9BB7BB1730D758F687E615
D2AEED695331E99591AFA000AA540ABD36ACA911E91E20912AB819A80D5183A4
CB88E08E0E9911612639C05043942AC8EA0072E9CB7154C415C0FB37DFE3F01E
638D5052C87A8359DD979C44B730F06019191C5BED15E6E79FAF312ED8EB0B02
3E712A0F6C89A6F7C122A561F133FB4D2A98EE09B11ADEA53702C92C210334E6
8D5F3E1BCC0E81CE178ED749B00FF4089C1AC412DC5F6696C9D8B9D2EB24B35C
3C1F8F63EA348A95622AF76CDD5C4DFE06A8C7534A55FAF937777E864C98062C
CEAA3ECB5E518C75FEAA240910646EF782303BF34FBF8162C8650D5A6F0EADB4
FAD9AED7994003F74E09A3CFD8900A33160CD1D49AA1C7BB5E42A2B0AB5A9D20
A5AEE02435D84A2622ED87454A2867E112A9AC72653A7865E2DDB9C236384228
94DE4A396FA798ED1F370AE5247E0E703D4D4225ACC1EF410631555D7DBC814F
F84353CD407284FBEA1D371CA578165B888D771ABEF7C3ADE33DF899E55FB0C6
A99A97A474739D07FF17DDBA267EC6C0A6154094D6E7354FEEF9723F23CA6E86
D8467D66FC5DEA43D700C9712BCDBCB15EDB628F4B840A76D761CC213376A0CF
3F137F399AF2F349C1D7FC9EE28CE88F416F1069D6907C3E917AECDD245A1BBF
4375A03755C145042232F87BD3F097746E41A70FAE7761AB26D1FDBABBFB56FE
D8C80879557D3849CBFC7D25D84D137ADBB5FD4F6FEF8CC9D54824EC85DDF553
FC992F823952FC7591D08F035BDAFC9317F144C94E828F09E29A02F0D6639DF5
08D32902957CF0BE88694AA031FA8BCA9E73D48A60FBEF090FEFF955FEF964DA
F53A9B58D2732F986DD20814A1C11963E4FF24011CB93D616CF4A6DEA6ACC5B5
354626A142D85BFC4F03DBC32F26253B97414C9CFDF3C3EBDD68FE0B7908AF88
1961CDBB6A94155524361C0B95E42AF0DC1542752B2129938BCD020CA19D64E1
0EB5DE254B638D700EF4BA620D924D65E95A329AC2657D2CCA597A4FEF7F1347
05419CFB59A93578682671B9A2910BBAF099C877288C19A4EBEBCB3C64415248
C00D0295332B6388384F27779F0B0A2D05A9F3BBCB3C1F587EAE05AE4D2C5319
478E8D848ED75B368FF45ED8B2D572AAE502493D2A3660F8400E1AAF9B27AB35
99FA7E39E250E91A67101F20FAE8BFC13A07FD2F7FD3A45002C02AD891458739
10D221602C35139358B1F23E0DDEADDF0AC07B1689EE95DB17A3B6888D9BEB65
C7A9BA2CD903B2F8348489A57F5A7191D1627A2C76A856C9E178B17A40293F98
E9CACD819DBAFBD0FFEC6EF5BAA6D8AFF764786470A5B02860DA35A5B3A2BBE7
45E6E4882CCF3A980B0C35F6C170D7269F7263FBBBF4051A51437A218711AA18
A408F16E7C9FD7D61AC4E859A91CA4B18D5BC3B0F6EF0287298B75C11FBD9FA4
1BF203A988C21BC2C550839E432350ECB4471F8553F7B4E42128DCA6B1239DAF
6C9D4A8B8AB7FA8AB013EC3060F02D6DB609F59E0BDE4D05891811A41F7E47EE
7166D88DDCFF5BFE1AB84D873C38009A857DB436100CACD8DEB98548A2FD3770
B44D6194717757468A9C84238E5B83AD19921E31485ACC168C25DA73D95767E2
27EDA7FBEC3FA6C8C58DED3649994CC965F81327D8547181CE06A73A6D696552
6A6EB8009B1C40A46791E8DD0AD66E125F61CA6810BB4B74E266703F9DE0E322
41D93C72DF010EE7DF3B7AF46CAAA9463E68D5C8B792D3197C4EED52CD16D5E4
493C1F8944901537C4E6AC73E5D6621CBD177B50CFD7F86E786D6E6EC176F6C1
3D7E9346C2859A185793A764E960F236A1798FF5E3A740ADDEF422FDA93FE058
53A9989A0A7252337DDCE50B6A040E49421069081644A51C80D37BF73CB30254
BC1D8A551F71FFE93F068070448334307A87526A86A3A7D53AEABC3506E78DD1
849BFF403701D6059D6CC2CCFCBAC8BEBF440B8D3152C63908C6882E56EAAF71
2984E440F40B5F355DAC74EB02738BCB094E40A55A48A26BA9970D09EF48EDB9
C0C6BA95EC2A5E98325594AC418DFF541515964C77B8D2C8E953703063F17F36
D042EFFB97936DA27FC3601DDD601709B71382EC67BB58C8D07254A6BBF7FFF4
EADB3B735D143E4654A5F06ECF67F0305606CD0619022A5DE90E2E58DD79C8E6
05F0CC17918DF52A858BC442594669827B3F6435993DDAF84BAB036E6146853B
EE469B081200810521522008CC7E3A396A8EE1FB14C976112B9DE60C281DC528
69148DBAC1EA4812B8F9C8854B7FC03D43F47C6F522C225B67573891636ABDE2
3319EA7DCFD8E88682C130E0EF728A401986C50D3DEF377CAEF216A5A0DEB8ED
C0BB83249CF414967A020E5B8B0F4C985C1D242C1D066E165BF330F4D3A0A807
DA8C72ECC5BE7BD4241CB4AF9E7DBE74C7DAB52EF2E3DC5AC531F8B5061C0CBC
620D7CCAA0E331EB7AB0AF62C71B8B7879B21FDC78BAB3C944BCDCD6A65B67F3
692DAEF4DEF28B5FC78F9B26E111583C71D31F7D8FF558416B79718F7C53E34C
5057880AB32CF15942D364A4E16C5BF382CC68A690BF42586C7D5DF306BD03A5
AB4E8AC7F70BCD0AEE3C4CCE6E1793589423B942DBBCFF3CD0CCA2ECFB00F9F0
98AE65B317C6D0B0C4604B614685B523515EC158884E26A6EE6CFA5EEA25F6D5
47FD647E044206E1567BD589C6D37033A588A77C2963BBB0094D7548BD0A4FEB
6C2A94DCC5EDA5EE5281207597AEC31B363640D8A3D1AF3BF4DF95EA544F4F78
48B1397CF782683EE76A15AE0A5B86A60C9E5C077DA4594E9CD62CB3BB1AE0D0
ADC2B18C7B8C10FEBCB0901B7344D343AC5B13DDDF62E0D2C62329A19C700457
4F1D3AEF396AC0DE08E400F3DBA346E0D9D8A235F8278E0B7CA284D2D531A139
484D8E124CE3A67BFB77BFB9FDCE085732E3ABD6AF50450AA98A1CD755B1B15F
D6898D56A1A04CBA8CA9F6EFF55C304AE62A71EA684359261D379C99518D766E
D931DC2594192696E87FE03408E9B2D9063FBD8466562C6DEA47CB3C10123321
DA0CC671D35D8B57758689C8B9176D49054F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB3374807A
AB31CB754C42A62F679C3A002DEF7A7A8C8FC17562A61C3E5F64DAD3704F7536
B06C3ACD6759B3DDBACBD0B90236CFB65DB16ACB17B779F751F5C5938A4FA7BA
0BACA8505A0B8F2513248875981C90C59083246DBAD0A2BF9A151AF2BBDFA015
02C94409BD23CCFEF5275B9387723E2DBB6E2FF87E363922E843CACD45738643
1FFCBB092ACA49DD20204163C2CB2499F2B677D98E025393118B91A352BE0828
E2C9375CDE80642BCE84D2C73C8376BA18203DF04333BEF421A0AE453EC1567B
6C78392AA062A73FDF13534861328A5E4673A4B180A8AE1BEA97194791F39345
7B9149586345BC1C0C9BCB39ABEED7EF630329667BDB2B79A6C97B54B8BFE82A
1E6D7F3FEEB281B3C938D07FC7C596429076AF0E8834E0A9D16AEA705C943C20
44B3AA808DA9C3115E1BCFB69DC68063888F7A22BF7AF3BC490D204458341CC6
0A9895D18419D579DC40C066C049A74A33F6FD569C054C95B27305BDD9A2FCEA
FCB4B635CC9D88D8EF06C084C8DEA328E98992A8F69F5768A39B5ACBE7D7F967
63D892478DC1F3F3A4EC26ED6581AFA8B6D5AD4F28DD5B022349FD4F1BDC8533
94CF665F741994F2FD6C49F144628D0C4129F8BA7E405259E681AF12CAE9CE16
79120CC4D64947CA87A2536500DAFBE0CA7772A589F8D9CDE09098A01CE2FA78
B291B952FC8CE980E75A230B890A3652FBD2A97B4D2CB1B019FC4EA512311094
E29D5FBC48E25E60F3417D14A18A91DC383D9D3E0906282AD085F5BC840BD375
490CA2CDFF6574BC8048C20D22AD6D07642B7476A51801E6FF30A74ABAD69050
D64014F2661CAD7FB28E26422A10F9A0DA6D0D8B7C67AB1BEF62A7035DDEB3B4
4B82DB8BF21AF882B124BC0BFB929BD27D3BA57A05C87BCF3509EEA80AB39DF6
B3FA4A0D9FD555ED49CBC66CBED5C40B669F0DCA0412081D641EDE7B17B28FEB
20B276F3557A545D03DB6F86A3813D1EA7F3CDA0E6E0851A59590D846460C701
12BB1878040BD0BE0542CF866EC7E20D27F5356846C0ED4F38F3BB6E09768DA3
A1DAB01A28BFF110B7B6C23ECC1CEFFAB673C90881D12F69227E9DF9B81EB3B2
C7642AFBBA9D98ED6FF3F53DCE33F5774AACA6B9C116EC42D8AD5C951C30A0CB
6B927F3F77333AFA6D592B41BE27F6F85B05F59C34C61D1686C79D1C18849D05
C9F6CDC6EB59E601348499E3FB8440F436563039A70B901C841B7D6C7F38A744
EBE03C98669844F21556893373F0CD59E600067CDDEEC9406AE8CB4E943ACCCD
6B2CA8051A9900AE14A22C9ECEB12904D9EAE9B90595D13543B5D2AA3F46E30A
45B80855D8744CD7D3451438636D57530DA41C2A6804730986EBF007FE7B8A18
652510A8CD136315F39851F43029A39D9FDD85AEFAAE39BD1C4C8D275202ADE9
03E6375B83E19D63D70CF515EF7B3663F1081C7C20BBB90B79A821F521B0A622
A28F6657553407B58A8A1DACF177A713CA69231015B772EF49264453597E2FC2
67A1B412502AA76AC1FBE852B7993E98FE31DC936E0608DF242157F4D3DB0519
EA9095EE0320B1B6AF55392961160C191D76693FBC62A5184C4BF062EC5F4D12
6D0106543A53CC16344BD81A194FEBD786139370B01CCBE65334A00D9B0A1E1F
39726A99C3F1DE84BCF15DC1166927CFBA23AC769B3C4B13F7C69B5883ACAB4B
5982B409F49232A61A6549D974FBFA88369D0EBD3003CFC42B01FB3B663F3C47
8A583A1A7D9BE69C5BB635C14CE937E8E6D9D3545AB3DDA93F1701EF6A61C1D4
98110DDF814AD6BBE3C4364BD1C64F9C1F14A520C17BD9B7A268F55CD5423525
A001FB54EDD9570F8F120A45FDE2CCCD226811D375A23B26115CFA8A5E81FBA2
97938A3C986ED15B14730C7BE5794100207FD5A4A1693F287397AF3300D4B1E4
CB37D718E34834F90AF8C65F21F3E925BAEAF3142ADA7893AC78D7D97E4BBE80
618AE6B86D9812B7DCD557FB92419B6BFD941BF214B5B5AC3E4D781DE2C5A1D7
99C37EB49300ED2B999CB46D339DDD22319BC0732326C35A3B1F9D7D9E02960F
7C0D013CCE063154E006EC3DBFD913F258FABD99D3015F6D8CCCF97174ABCF4E
BF022836560EA460E36E1FCC24D0148C458B745876A5FE591FF5C5FF841305A8
927C1BDC558808B1AADE9680499F774526871B2C50F5B279CAF980DDCB7B8A63
E3BF702012B04580233972D92119549CBE53B0896667EC7C62F5AC62C7103B9D
B2E308508A82530DB3914B4BCC1742688054ED5805F3788325FAB9397B4F5580
05B6F1161F8F98CC3027FB5FDF901190949B4B6A3297CB62D33DEA3BE90FD366
CCA9F67943DF89183F2CBCD00763D57C1CAA5CFD9004575AA9F1AB91191B962D
608772B8B21AB1FC26A6D947548C4F2C98932B9F66FE6A7C42874EB6BACF114C
972B9490CCAF4CA8A7F431F4354D2543083B82A86CB11FFE116CC66FEB9C7F7A
E880B4C93C463A4D7E48F5DAAA4F97931494D07E51588331F31E58AF3A560C46
F0F9A0A0E9FA210EE25B33E964DF6C072EF4701514195A43A81826D8B89CC03B
580D97CC9E7A0AD30AA62480636B595CCD064AABBEA26C2EBC0178A2DC6A2435
0823AAB33A391820E8C22D84A0DB18152D56A72ECE236FD3A391457430990D58
7EE5AE0B439EFC837C99B422FCEF96B5C7F91F63F7B741344010B345394F2219
9DE571B5E71F57D87389A44A0757EFFC671FCFE41CDF60A34B00B0F3D6C10518
B7AF4FC2F56904C2849F7F05BD9E5029B6C29EEF2B97C4F4753E251B3988D020
3AB0DA46893201086246849EDF70EF99B1C95A296106DE15CF1B4D7B9B908BF3
B1FA3743AB1774489E6AC37064B5113F9ED7C9BB5B332AD8F83F6F3A654567D3
03E37C6624ECC7EF005C040A9C6FDBFBE1B6577633973D5A0917424163CF5265
7BA98D9BF25570941DFF59017BAA532D239CF89E21D90031FE25393AB1B98DB4
A82690B24F35EA070715BD16109CB5475E71116C6F8F14223D3E18984649AC86
1E5E2E5A4393A85993140EB0856B2851FD336AD9DD8D4431C651D2EA6F38B4EC
A4BAF717F5BA5F386C1E50A1EA646AE2E299D4133DA16665776436D7EF2241DB
5EA4EB08021D71B8A2428692A137DE48AA5E093D92C234815382F14D9789D0D5
2DD917C3766FEDDBB7B9D8B008C7931DE1DF4FD775F8C05C21AB7714D75733A6
EAF15E747FD34DEFFA9159A7BF84E97C549209E41CD626166A818A7FA5A2E9CD
1EC82F504BD3C911CD41D2C70822071F26D95226AA174632F0F85D98FDC4C060
1F3B79CC1226A21425BCB29E9A23A530D07DB0CF2957012A7EAF35E695B91E4A
77E2F7F2C6B152EB4FCD4F741572AAF89F6ECE43DD0EE31B00CCF165FC457373
381973793F0F839FF993DF40964FED4853AF7BE4DC803A64FA917089C4DA3C6D
CDC9AEB8751A5FF930DCFC5539B5B89C6DE3A8617DE36B00821A90353E93F7F8
547563ACB1EBB7DBC01B156AFB6B23E6219C8F6BF922BC69A2593686BD46CEA4
7C451B16AC1DB07E9BA126D3D18ED9F32F11D1978424F8C3D3083E4CACD1B7A8
009329E9E9EAFE6F98212C4B1C72D86FD37E82C87F35636F2B83D78B5B12E4CC
7AA86E3A40085F7B51B2F75B7543ADFDF6E33BC672DE09A35F62D3122C9123E0
C0BF967AFD6FB7E8B824735C9E66768054013BA36AFAC9D08D0E3C33B3F41316
B358FD945C381392AC5CEDD39DECDD7EA17ED976C6973D9CF81A09CF6BCF839E
692DC2352832FC0218BF0D10A8AD03D2A22F6C382CF81E7B01AFC3231861916A
58142C95E156BD4F8C13B250A022E8F98ECAD5492F20E27763E1ADB5D04811DD
A28BC1A3C9B93537AB872353CC938F93C56C963273AD263AC300493EA32B2F33
976C988D08BED9EB38E3A6D68E9F4ABED8BB66FA253CB9FC5EDC405820E8D4D7
B4323763A7288069855EA4227A0FDD61951C30F484BE064FD6BCF3DE48538093
BB09C75D1C6C4BD66CBF41A3D2E4D046A003CF1EA726C92B7D9E1E770504F1C6
5DAB24C7FA9C02FC1A34BBFCC41C7BE87FBEEC7046ED8C91C2D3350FDEF34879
A0DDD9FAC54AE0A7258B650BAE18A97E4567A1684931F815E7C04D2640EC23AC
FDA58E35D187C916F6C32C5FDDCF382299176926F360C687CA1F73D20C4DD6B7
7DCF178091CCA9370A3DCE8ECA5B0CC5CAF6E59038D2C6CE63BE2F274FFE6EA7
062BF080B1B2746BA417A53D78976998FD3A621229E4DC6CC03D1D0A9E1B95E5
2458E39649D10B1177BEFE99D59803CFE589B0B2D3361F0830BA34BE2302A69B
406D04BF8A0B06532271C0914462B5FF460D76AFAF38145538F43962B33AF7B4
72EE5F5179B4956D0DCDE23F2C29B2A70F72D661CEA77B8D1C28242A9F5940AC
E69FD993770C2E37F62BB85B35A3549D982D8D49F2F9FC50742E165725D5632A
0B4B295BE36C5BE33C8F83BE62E6ECEA3BD5AE9DF3900B7661E2D416A981C0CC
056ECE01810AEF0394E1D0F2A46FC5B75883CEFEFF9E9AC242D23ACBC089D717
0F71BCB03DD2676FD908DCF6B92F6B135F03202617651D2A8A2D5F593C36558B
B9FF9FD57CC30661D6B21037EC1043CA2DAE0BD6A1925CCD3F8C030C30559C7E
B5A0BB0AD877C3113A767A1734784053640E2EB856A056C18187086522AAB1CF
3611CE2F5D40BED976B86EA3AE26D749A14DF761B75356ECCDAC6BF8F52CDF92
0881419C25876A88F9C09FD045C5FEF18595BF0110DCC70BC464FFC76030C3BD
11E2E18ECF367A70E91540DE844726480147BFD55EBAE5C90A8DD8D183BD720B
639628FCBC56A04B1F8E89A3EF2D1D786A26542EC69336C5051FC0D12DB53480
FF3FCF50490CB6BD42478EB94527EACD71CBB15E139D7A74893516FEA260E275
63894DDCE2BFE456C0132596F3B7D25E068A08945FD5A82D1A6C7E1E769CB789
0C4C3827500778CE81CEE9CBC4A1135C2231BAB2ADC05BE9E222FA83C4890CF5
92B4301B542832F301E199502B2DD9009CEF32FE3B4CFA08A23583076AD67FC2
1D9B88B2C3391E8069152BC27C408901DFE5F506B71DC8ECE105D98F1DB103A8
0FAC76788899736A56DE74BA467FAA8235910DE8C217AD1468181B5AE1F1D964
E21C7E5ABFA91CF54F7FEE85BEB148F615F9D7D7B6445EE74AE2A1186781ECED
F21E9BBEA0495F08DE4DD729DB9022BB2975364996C7967DC2D7B14CD24F5DEC
422BD5947FA4A6620E6FBA7B8B099E9C576FF0B99844C4678E161586DFE60597
7AA5953A9052A01E2A50D6C64088C13B064E5B3B2B88461ED76FF625DF468AEA
02B923578C959E30C3245B74B1959458B702D877034FFBC0CF6D9C66ED103CFE
2B94F7AC008E96D8DDE794E9749A50FECF071F8991AB22BAEDA3D058BFD2574F
12AD06F57A45487AF340D4B6B28FDE2B35CBB1C4928E8F42AAD6B59FE1D12D41
BC52FF171A177404204FC1C77F931C6D378192BBFC39E3659AFC863939249B02
0ACC5F304332A055212FCE2F3320929FFD962A3A8192D5176EDDD0664E14EF97
CBBF6E8ABD6488B6901224866B642862217D883BB370C95A593808F2F2CF2578
342FAE1B74AB248BF8B9813B9C2DBCC822C5AB5F0ED914E40F7F63B707EB1185
088606FD64C334D106472F1C02DCCA0220996D6179279FBB97653ABD53A2364D
BBDBF179ABBA1B07E5A491A4C3F32C66BECDFCDAB8F85022B36B3F57B4098E31
30AA90CB73ED3FF66834F1CF1A74B067B07A2735EE08AFB280D732FD8880B3CB
85F305DAF8C901BFDE4B21BD63683D88A6EBADA7691876A656BE1A9DD232DB1B
624F920EF8128B0A88949BED10409FF7923FC44117A648C079526F0FB31445BE
57AC36AF51EC5E452A04889601BD9335B64344546FAF25448A819E7E3F1309AA
D9CF3E9852140327D8964A238030E0A561127DCBEAF55D31056A5E2483ADEC34
6FD147227CB1176BF15B4A18E1724B5245234791EE7226224ACBF0A94F8F137F
25357DCBF0310209A4ECF4D0058227E29AADFAF3B6A4B6B086D6E0B99585F7B4
CB5939BAB1EBB6B468DCC0A957C3FCD757C009409A419E75CD3E1C88C89F3606
CB9CA00BF6C35F781D55AD895D31756BE65F1F944E0E70A0433925BA1104A9FB
05337A25449E0DC00B79F6243A64032BE13CC74B97BD58D8D0E86BE5950186D4
868F2A6B967D7DFCD4EA622290DC1D982DD84E25117867295CB18FA3E1DEE511
1D085F1268D5E1293D0EB31F4710B3F71A6A30AE568F72A2EDC719443A763DA8
8D98E1AE029E385DE957831085C9E9C95FAECC9A739E83D0DF671762ECAE28E0
932356858A65E29F5F596871B25A68522E3479A77DDA4972AB114CA2A919DD46
6F2EBDB25993B862CCDE11C0097804DE28656B90A1A334E491F94659A9378A6E
9FC7097AC404AA8CC501E45BB4A8B5EAABAB72183F30CED69E62655A9716DD4A
183DA748FD04DB7B50FD19CC1212857F0A0284D86EFC15432BF54CF9B536C801
6120744F850B892E10A1B46B1EC76E22543ACBB78460DF8164BEE63822818561
1AC63B7A2AAC3249E970CE82D1DBC5AEEC2260A80A8968AD12C90160E1F84DD3
6648BCB16110338B2BE89029B7CC9A79E26FFAEF2584C471DB28651BEAB0C047
F649C52F9D76B1EE7C77A01C3884C9320D107CC0AC8282D7BAF7F8FF0AB085BD
DC90B990B8F8C696E16498AB5C8CE1BCA518D1329BDFDDD23F3505CBE4EED52D
286B76F64A185CF1B8B3A702FBF5DE94F00DC390ACBCC59A13F5F4007A850155
2CF36B0F13BA7F9C0000DA22FA47219158AF02299B5CED29ABDCF6EF018BE8DB
1E5D80D508539D34A18E9E4BCC76DB0B45A1F00441E8E3944D08DF03F4C72505
5B09463A224EF15D7E51D3A09A6B449633E9F152A32632BDF0E020692667A6A7
5AD01FF3BD1433A3E8C4BE52AF0450BBA672AAA8E0DE72C886E02FBFFF1C2E11
4AF8CEBFB3BB6870A0CA1C9987D35D72A0A03718D00485B619D5E17AE1A5544B
EBFFDFFBCB5B8B2C71F9A23B3EBA76DC9252BED07B6D42D6D89690FB4CB80E68
01F66170CB2EA72BC3FACA6F4455D349C53A5FBD3F6318100118A97F264A9477
6770D82A271EE48FCAC857243F6F54AF52FB72273C4479437B4AFFC2762BB186
B89A86202D3F0F2A3A6FD878F2D816E96C1D1A0E08EC8B34C2BE25561FE55ED5
39DA84E65639409A95BE0DC9A7513FAC1B9B05719CBDD22297893C7C59BA4238
123D0D6018BD4C816CF6D291EDA0D1DE034BB64EFD5C60B9DABC4BE22BB32410
D2C34858E694A342A7ADE6CF87407715292994ACA4C2B9DD1FF5EC880466B945
92CF5BECBACCBF39BB46C7BFA30B23AFB9FA3680E65B9799AE9F8A5FCFE7F6FE
B0AA11DC7715F3B371789D8521D6D2D097E7FED3850FA08869B690DC0D9879EE
2205F4A874B12697E0A5E292B9E95BAEB408EEA8B24ACB60D47E07289902AC52
B2B626B14A87601FA9F4A47986C552B13362ECB0DFA0B3490F43F9ACD4489AC5
646D501AD3D20CD9505667041DE2704A28AFC858AAFDF17B578E13F118E68F28
7DF4201EAF832C569AA57C3D295CDEE7939C266CB62218C23280F2370605136C
78727FC7E4376C12E2D30821C0F1EF91CFF7F31C35C238A6BB36738BC64F6C51
1DE7A774A628BC8411C1609499453B77EA215D289DDB14A6EE7B026CE8F170CC
CCA540C2889BCE8298DBBF5BC7856E7CD409F900F1A3DB8AB52E74E49D83029E
265F2F5652BBB62305C04D1AA490E34EFB5DEA0BFEBE7626A047C50DF2F785C2
D575C121ADAAF781693C917BCBC95D9618C956F46F1BE23D6168EC6DAA8CD17F
F2A9C0403415DCDBDF5EED1707794CFDDCB0AB0AFF3307DB4992CDF1AEA55C24
5A7E86192353FED3AEA8E5E41E2D20E1379DC9FE225ED4EC7C809291A2B9BE04
1D5B7F2F13506C2BD88F4B7779E1BDA5DC57006BE056F02ADB19D0D5D4CB6C8A
9B26D007183FB8192A4CE3F55DA95AF6E5C70BC3492D4E09298DB427A47CB763
A7911E0FF1B02053A5C611A582D432E479C96A21D2192A65F41181F862CF59EB
463DA238AE4C360C96B8B08D9B9047FBB6DD3EC3B79C9A8F45921AECD08A7CC1
DEAFAA658DEFDACAC3D01AC068134B44371131B3E1470096A4AE08A3FFE21D05
E74B4D7650ACE65900A5609A7B85B9B4D8DA65AFC5BCC275521C141CC17C440F
D7719B7E5BB815C34D9E2729A84154D1AB065E8AA12D6D1B1C00D12BEE713E29
50597E73A2F26442DD0FBAEE0CE146564FE83BB2FE42CF37D05D972BB3CB4D2D
FBFF375E3A532EF2AF70CF846DAC9A858D5B2A4F9BFCB4F4DAF07048D4FB36F7
2AEF341B51357FB858B4AAB1532CF86B0D40C2C911EB480BDBEEBB8A358767ED
C6EE381148A4EF75DC2598BDAFB6E40773AE3B9D630D49C5635B92D73E5D58A4
4DE71A4BE71CC81FE204F3A49923A6F06162794EA08CD3AB98A5482EB22A0503
CCC19D92BF737BBEB05632F251492E9464704E0AFC132ADC242DC843901FF289
87F96A07D1A85890A9BA4614710DF1DCE23A05B642B0617E94EE2BD240AA2497
935D24568692970F1C1857371A621E00CE47089376C031CB3710926A8DBB743B
4534DCF43BFB70A698DC3169A5C2685ECF0F930C3B1ABAC4ADAC61CA60461854
8B6F8F54CF193EB9163D6038C74DF2491D28127CAA532D70AE74185CEACB2759
9316483110A9A296D82F2545C0CC6E38D9BB9445ED21FAB63D48497FCE88B439
21A74D7F8C7B0447CF5E29C24E9EF52A275EC1FC716EC7A30D1B2D429D9AD661
4F1AF1BE28C5A9D762C7FA7C6170879F6B34A57AD37BA63A723ED0BDAFB92DC0
AE8A687D1E4263FEE5742DA64C53CD46D39F1C3FDAE0AA7DB9C38CAE38E50AB0
5A79B0705D9CB3916B3558323C9F955526D29762F574604A8CA4E072DC07A2CC
0936D8B8E795E3F88B8C0ACE845BE6932C140FD2D624061E9A31D3176524408F
232745A9ABEC452C3DD4B3B064A4BFDD419780224844D682BE3D3979100683AD
75210B21E1C725D469C4213DFCC3E8B0E2D788D6296AE7F2C222E10450C81478
8B29688DB257CC0CBFDB5E9E9196B7EAADE09ECF7BDA908D15FBD8075236A308
D525E0DCDE0EE6A1EFD4621561F32A1F5A9A69A1B21DD5BDE9C2E10A5186EF4C
F813B82EFE4A2E4A82AF59497223FBD5D26CD1B591EA6240AA39A94D41F11F0F
DE52928C0EA0DE23899AE9FD4EDCE30466A174604FEC1B384F092D7D1A71016B
7B29B0C282A6EB72
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC156D19CBCA
F5193F20E83C8ED3A2A0E00E0F153BDBF3E53E5181D722C4FE3C7D33532AF9D1
827922BF5BB09322EDE435043FE03050ACFB8FECA3B6F54E9DCE327B5681EC10
0CC8A317E994A971F758BCB97ABB8D4514BD26F04023EBE57D3BD2407FAF55C2
5761411FE04B82E161DC74D6673DA37D8D9291E25AF279829F8D47B642B40E15
C4E1121B95E2FF0F76190A7A08E04B47CE0DC42FD6D4F0B4ABBF4614BBB181B0
6F7786B593CE09C8AEDE145A73138558FB954027FDCE0828813E9A8F6B24CC94
A37ED7FE37D7D03026506C2012077C473AEFAB9D2A0AB18FCF5A40C9286D069E
D5D948E55FE0FC7F464A0B2D3EF7B704F7641BC264B8E19AABF32A44BE6C9CEA
D20573503B88047D7DFBD1FE558CB82CDF587E5E26A5F8D7CF237A957ED79B79
A082E96BDC5D82872E30CA63DC5D4FC31B8B27115C54945D6DC2C09A0F32C295
4C689BB04A12A787BDF1E8F21AB1CB205356746638CDD9FD68E308DDAD1698E0
7311783290A0EA08384809CF652F1E602E7F27CCDAC5361A8898FBD82502DB93
C42AEB42D43FFD22DE892AF19D50CFF1C8E6F121CE477BC13FB3235F513BB19D
0EFE83937474321B7E4C63295997DD487BC7C2B6E3EDAA054E5916B4684BA243
F56FD007773CA0CB9BAB1CE577EE970A2B5E013E23CB0654536FBDA1094C233F
DC93CB79DD476026C29FA3779933221D89B5603011ECA7833E0E3E9578846685
909845C2A0BA47AEB0F7B210A16F187998265FAABEC625523524D408DEFE0B92
79975DC15BC1DB4D67B315C4556EA67B2A599819EDBDA44E136B801A216AAE51
68BF1DDF77BCA74AA02ADFAB59DE70F679945611D8CCB8AC705977D804C5B830
51BC46076F01E2D91BA27FAF9AB7A01A434F254274D012BC8E21B5277ACC63EB
23D7C83674EFC8D22A8E991888FC44FF9ED2954B7A9DF5CF6D48430BFFA26066
C7CD27258773D747DED2B68D227434462119C3AF991B3613B485BA2B63E25767
C311C48C2A31853BBFD87CE09B188887237137C5352FFC610DBFE7C4F91333D6
CD3899778644A33617B76492215C44CB0AE12FB168192AEE4AF696EDE54CDD8A
7B09568031F5D1B00F3C41E627B1DB9876EE658C50AB2C81AB7A471BB8171337
99E5AF19B25596A888D7530C9BDBA2903489ABB6B2EB9F977F3F4D690B31E8F6
E27669B9290E245291E60AA9A4916655A7E87E4383D99C15C8A3A0BD8553F471
11D2F135A9CC966CE01DDAA55C7497A50516F5CB92901FB288E8571557ECD91B
F3A5E10B3A6B20EF51E3185A3B44D13698E3F6210C78EFC4FFE7E0C016FCF7CA
183173D9AE85520DFF75F9FCE0C81385D2555459247CEC49E81E3452D52875EB
59B8958570467B7D0DC252FA08619A759D4C714876239501D7FF7BF2795EC4B6
E52A7491F8DE641E4DA4A575AEB7D3DC8EC4EA0DB349480E8EFB87400379BB84
FED0BA2D45875F6E382369F2B8604338D2F5D267F4977F314111232138617080
B3C7AABE5A34B45729CDC48A7573859F741128948A218EDA86F30574CAEBB823
0076E99798B817F05C752E2CD594D0DBC3A4ECA30916A2C9E4611CC9F355650C
AF0760C2A1083EE776F8C0EE459510B9C71FB18E344208D3ADA3E2F1A88916FC
1BD8CEE7EA1F59C41DECBB7681BCC13B05646F79745A41552F95F74536C803FD
0E67B1A0050307E5A2912282FAFEEBC02B87DEB3FAAD963C890AF682396C934A
72101EED2985EC52C26E5B8E62CCBAC6ED54F04C160CA0742BF506733CF1C3EE
17F2E7C6387DF84047386A45E5EBC9E125A002A6E1670ABBB7C16BA826C19DB2
4FCFDC97A92D962E6C56A4B495A8E164BCCEA1DD5D81A295CDEA550A848F335B
39010CF59AF1FB5B7B7573816388541ED991DC598699A436BCEF2D18742DF7CA
2D119CC12A3246B9B5EA106E3EC3768143FC961DF131B7BA764E5CC20F3FF194
C0C9F72976EFAF5381161659ACC94C2739E423290FF878C00518B7AF4FC2F569
04C2849F7F05BD9E5029B6C345863309BEE47DE21300E086C9B24D604CCECB35
04E6BDB29FFE154566F97FC3D37CAB4DB8AF53F8AB98F762EF5BD178D748C313
3480CAB803DB816385DB98EC6618A5F1DFA6CFFB3797B579C3A1E8944068C0A9
45A3CED55597AB47A2E61E96B9759EF75C9A0E3232FC6AF877C36B294E009588
6C3FC58F5511FC277457C63EF17D9B144384E7ABB65A8CDA4ABED00E41A2CF52
EE40AA41396A07308C0A960D7278651590DFA074032572DAA8086B5518DB9029
17AA2A685C51D23EE8A56E3D74037920F8422F3E911F2A28969E9BBFED7EFD6C
FCA3D5E9CE733060E9A912DDFC06BEAB5782F56BE6837FBAC7EE49F007589A2A
08196FA3B2B39E7306660D5D80157F57E0509771B70C3AA704BEA3521ABEBAC5
7E0BB6721F8351D54854752DE044C4904C375AACD66DDFDA88D53E98FE26DCFD
C63493D8B9EF33711947B65B0C07BB7FE129E39758F15005486CD1B3524B6AE0
717B818974CE8172FCAD056A6C4A5B98E62CCE5E54157595FF7F5761879D2151
7C777FE5B14C75337CF1EE64CA7541750A556E310840B300B10370B58E496346
84C21B738351E486B323A31BF1830B1ED3BB924EE2CF3F5C7528E7A63F5A5BA3
ECEE5920BBAFFF7CBB603DE772DED3D1AD509CBC394555FD489236394407BB66
B609F75D8C10E9D4CC7DED2405EE490294E01303458F742E5D683FE8774D0382
F4344609B68A5C8D214B273599AD5068D25995DBCACFBF885FCBA160DD6CE6A7
A490C010EA325BED5199C717C8C05CC48AD62E125FC003D7BFA9DFDCFAE145DF
48DA1A521A775F53B485E9A446A8EE32E9ADB525ECC6514500A943AFDA803AC3
08A7B3B3D804F35F6E9DC66E08EF70A6922A75EB86A05E8F774376EEAA7145E4
3F11298F2B28CAB4470946FA7C0FB2AC0081A3D9AD52697AF8EC8A6D667D7428
AF43F90EB91785385AFF710A0F8B3C8789AD3893D2E227E665CD18861D308B03
A151E9AD299C3481076A717376B4977CEB508E139ECE3C73DDC9A9585E2855A6
81E77C95E63833DB32F9338F9912EBDF06DEF1ED9F0A5C602752ED6D99588079
93AB1C4B8472BFB207BBF43CDEF5D2A4640319907E0FEC80958E14F82E67AD30
363C3963A201338186E6B58BC879DC734D6A1C30E992461406D5C6B793B87716
59A771260CE3614CD796A0C3089EEB18E395F60158E75191BABABABCB033B090
1D456DF4DF7E244075B6F7902C260DF485A43E2F354BC62FB3F0949F3D2638CB
3E5DF0C2E80B9015C275F927C139E5C29F18D600032C1C460BC72CADA46E8AB1
883BA0BBAF674C6FA723846104228FE090FDD8F48B86B8080EF1543351B08A09
704D4C12821B58BE53678574253555AAC69C4F5FDA21D1ECA2ED0957B2A13CCC
8B93FF7BC5FC7C7A37AE0523E5641F0B5815DC0751A926103E662A0348E70A97
A46BB6F92710312DE7DEF9F45899C8418DAA2BB7D871BB96B27335856A8A7D19
91852698377AB123DD8589476FB314F34B9ECF6C1804B80866140D982474F4FB
A5B26EF1BD5F3E71E7393392A07E9D924E025ED8C98D5B2688E460BBEA210077
C0E6AA0B3B92313C397F0A208E3D7FEA93155C8081614C49578E15C7B59E6BD4
3BBB86E499E6B189D865497E5E3965BD3F43E33BD37C38AEF151B087B84E0B93
9404CE3F216511B567A0315EF59D1B19CE7C0E8E14644D6579D3956C1593A4ED
AE3A610AFB12DB06411FB3CBD5FA7C173E8A833359F48583D2B679B0411F15CD
071C3AAEC9C379602573F4AB06EDEDCF525C3A3831E5B5172877C33C7A45804F
86C9426AD90E2DFBA750F5CB714930717F3DDB86BE6189BF71EB2BBECA485081
8BB2057B81F022DE8D365FC1959D3E42DE0D05EEE67CA498A49CBA00DCE43A09
DFBB86353DC405A46690136B37C26FBAC954586EDC16ED87CC7444B9BADA4F48
04329268F442AD42637B01F90367E180A1417007DF631856DD361FA5C0988C92
89CA98E0232F453F8F39ADF9BC8CC65EB8CA54B5E3C6D546CE98B2002560DBE0
FDB2F4ADE8570CAC8D04E95260604980135449D09E14A0880AE784071E6B3E21
01F0B663DE14DB1ABF8B7CE251DCCDAC76A75523184F814ABCE4E4F660952474
913EDC8E969FB1F684291242494E52311C02C8A34C0A5E445C1962DDE4EEEB70
A7FDC1BDBA17DD1D2F853285E7537C16CAB6D2645F8EA27F25C4422B243192B9
041EE878EA59C10AE34CB2B48DB39EAD32DF4E0D8117722971209B1543EAB490
E06DFCF9E81FD4174580936D22882727A7055EBD6EFC0CDF28C123371240A01E
A5B725BFE33B9B0F1CF244A58C27D0C9D693CA13BBFF119FFA5E7E70A71AAE45
4E9708BFDEB138600B125B08EAEB51EE45F4117822A74416580FA163A690DD97
72A99A33C0173E0E5B5B596D012DF2D928C7FF71A3B60EDC3726F84F48D616A9
F7D2EDD9E6D10CE3C409F018F4B8A9825A689E15BA0AC3431B5BA6AF0587D4E1
F7AB4D2E45A95067DCE9D17E2904BD65EB106F365321CE68091E6386CC913D45
54731488243C0DF0ED021857F33C1ACE8284951B936617588EE90F49F2505296
49B5CC492BF15CEFC2E353FB1785CF9CB64AD85C8F1C0E5F10C151BDC54BFFD1
41C196BECF3019A2055BFE1D3DA8C06F359C7DCA96EEFF99818F95C9301F13CD
6BD30EBAB78C757CFC8ED6BAB5669831C8193D61F54B46D1DE5D40AE3380F471
1405BE4C7F3E00B205AE08005F2D3C99D3064637FDCE8172B923CDF8AD1DFB82
6B012842F9FADF0ADB19FD51CC8F249F5EE249AA67547714BDAE1006A002A8D4
A1D17E5A3BFC0547DA41653547341E09174006C8F2125DB48686D34E2542A74A
0B5C7FE79F79CDC16D3D574A2BA722FEA221D1347CFF5111DD5411BEEC726CDA
1B74ECC1F86BFC61F47D6C101972BC861F80C36AAD3511F899AD71F36EE80574
1910083A065233C00C079D7FF5928CF305E30E8E12927C72729B9270289731E6
155BE79E19EF3C4AF01E2FFBF91D99B8BE9B621CF7CF9BAD07616B65E98AC545
5C976C40C6E24D239FCFE9CAA763CD150D42201CE5C970A58D5AD92CAE65BFDD
AD9728822B6E2797A2300134A429F9D0B47333F36C6B582BB7064EAAE94F0FEC
E9AA7AE0A999F6D4E66593AD295E0B3D4C1B90FF02DB23732FCDAF6AFE269119
EDAFE61DE85037BF586FBA8AC7CDB44CAF25CB90010452EDDC6F68BDBC51BB87
030974208DA5378ECF3A057CB4B5722E494C670C6850B19917BCDC2A32DB4D52
1A21651E03B5EE5C8ADDD5B5AE6E314ACB35F7016D1C5D55C224115D15A3C0FA
82929B1719CA03EBE2F1EEE522AB1FE6F4ECAA03ABF930FBED3C3C6535C335A8
09E1876CC50FA0C3717E034BE0584D97662E4FE6208FA9BAC467C62CF544230A
DCC13E41A9A063322C1B0F37AE15B3108E64F064CBC10D1CE9143177B098341A
5EEE215A92351A42E255C0457F96E5BCF93F0D781E54561FD0D9C18627B255EB
3E69F99B02D2F16BCE5AA1FC9A10B390CBA79A1573D95E1E617C8CC492245B6D
5C9D5FB1604E18C13BF26EF3F4A510158B40E37668883B8644F7F68334B564FB
6CFC6AA5E6F967E8F7CE1BDEF1ABE658BE0CE4086511BBEF95108334977EDC0F
1E4FAD48EB594F7C4822FEAE1CBBDEA5F07332BC4DE9E8AEABC46E23BBB02B40
EDDA1C8506D7AB50C6395CA3098A435A2878F6F6C9DCBD03601EFCF61A91C88A
02AD9755046D494DE25AC5E3F948150FC35E66328A5754C311586BE0B8D1265F
890F9603E66F853BB5952C813524BB91096196A7D8722E992F030E468FBEBFF3
6505FA7291929C09FB74344FAF1D5D4159406AF2F7A4E3245AE83EB6AF91BBFF
CDAC9EF9897F006378DC2202E882FEAB6633036D603426E54082D8009706304F
D509A4E7362208FBC919616698D0DB10FB8C2E603493507C21C25D1B40565098
4B663409849E8C4023BB06BFEC94C09821D5EB0304BBBCA4B09E56B24538CE73
73C8908E0A54D866BABFFDAD2C638890730A9BBCC58AAC4AF64AF3D8DF94A36D
C94DDC26AE452FCC061DFE72AED1FE93A35751B9195E409C760F61825B896DEB
96E5109C58A693DAEC52B869CAF8641FE7FC56DD7338208958426E81C010B973
DA5A285C559A6BEA532A715067EB80EB4CDB56A9A0270655811090D1745C4D97
2240A31590AE1A1AB429B0DFE6097EAA3A62D68785283BC72BC3365DF55CE8A4
5DAB64328F7CF3140D6C1457E48769691F9CE7ADA056088F69FCF6A7BFBB58F3
BE07A67761C34D0F25222638605C1F9131277E6E0EF496982640F7B1C9BDC055
65E80CE5CC5256C417DACB587D2C48AA89062A3C0240A053C9BFD62C5CEEDD09
56DE077C2D5A88F0BAA435A2595F642B793EC734534B91EE39D4B33ED1B0E9A3
9EE61849EB38ABF6D602AD0EABE5A15F048F337276BA7CA490F64613C7F895AE
B96A8CFB3F7F102EFE839F17A1F3B96FDF446B64DB72DA74A296D1C7C5938392
6582E6CF2F5BC3F3A4FEF5EA507CA13826CD83ECB363B18F6642CB5F77771652
4093F762
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099151 2074 600 600 (teste_prosper.dvi)
@start /Fa 251[98 4[{}1 125.595 /MSAM10 rf /Fb 24[86
3[96 1[96 104[86 1[86 96 48 86 57 96 96 96 96 143 38
86 38 38 96 96 48 96 96 86 96 96 12[105 115 2[115 6[48
5[124 1[115 6[48 8[96 49[{ TeXBase1Encoding ReEncodeFont }34
172.188 /NimbusSanL-Regu rf /Fc 18[69 119[151 83 138
3[151 151 1[69 138 1[69 151 1[83 138 151 1[151 138 12[151
4[193 79[{ TeXBase1Encoding ReEncodeFont }17 247.95 /NimbusSanL-Bold
rf /Fd 18[19 49[38 69[38 19 34 2[38 38 38 1[15 34 1[15
38 1[19 38 38 1[38 38 12[42 4[54 27[38 38 38 2[19 23
45[{ TeXBase1Encoding ReEncodeFont }24 68.8751 /NimbusSanL-Regu
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop -600 -600 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref and HA-prosper packages)/Author ()/Keywords ()
/DOCINFO pdfmark end
 -600 -600 a -600 -600
a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -600 -600 a -1211 -1817 a
SDict begin H.S end
 -1211 -1817 a -1211 -1817
a
SDict begin H.R end
 -1211 -1817 a -1211 -1817 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -1211 -1817 a -600 -600
a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 -600 -600 a -600 6000 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -600 6000 a -600 6000 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -600
6000 a -600 6000 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -600 6000 a -600 6000 a
SDict begin [ /Count 0 /Page 1 /View [/XYZ null null null] /Title (T\355tulo do slide)
/OUT pdfmark end
 -600 6000
a -600 6000 a
SDict begin [ /Count 0 /Page 2 /View [/XYZ null null null] /Title (Tabela)
/OUT pdfmark end
 -600 6000 a -600 6000 a
SDict begin [ /Count -4 /Page 3 /View [/XYZ null null null] /Title
(Outline of the talk) /OUT pdfmark end
 -600 6000 a -600
6000 a
SDict begin [ /Count 0 /Page 4 /View [/XYZ null null null] /Title (Outline of the talk)
/OUT pdfmark end
 -600 6000 a -600 6000 a
SDict begin [ /Count 0 /Page 5 /View [/XYZ null null null] /Title (Outline of the talk)
/OUT pdfmark end
 -600 6000 a -600 6000
a
SDict begin [ /Count 0 /Page 6 /View [/XYZ null null null] /Title (Outline of the talk)
/OUT pdfmark end
 -600 6000 a -600 6000 a
SDict begin [ /Count 0 /Page 7 /View [/XYZ null null null] /Title (Outline of the talk)
/OUT pdfmark end
 -600 6000 a -600 6000 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -600
6000 a -600 6000 a
SDict begin [/CropBox [0 0 595 840] /PAGES pdfmark end
 -600 6000 a -600 6000 a
SDict begin [ {Catalog}<</ViewerPreferences<</FitWindow true/CenterWindow
true>>>> /PUT pdfmark end
 -600 6000
a -600 6000 a
SDict begin H.S end
 -600 6000 a -600 6000 a
SDict begin 12 H.A end
 -600 6000 a -600
6000 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -600 6000 a -600 6000 a
SDict begin [ {Catalog} <</PageLabels<</Nums[0<</P(1)>>1<</P(2)>>2<</P(3)>>3<</P(3)>>4<</P(3)>>5<</P(3)>>6<</P(3)>>]>>>>
/PUT pdfmark end
 -600 6000 a 4500 6000
a
tx@Dict begin 90 Rot  end
 4500 6000 a 5022 5222 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true -56.90549 -56.90549 11.38092 256.07469
.5 Frame  gsave 0.6 0.8 0.6 setrgbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true 0.0 213.39557 142.26372 256.07469 .5
Frame  gsave 0.6 0.8 0.6 setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   25.60728 213.39557 2 copy moveto 14.22636 .5
CLW mul sub dup 0 rmoveto 0 360 arc closepath  gsave 1. setgray  1.
.setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true 25.60728 213.11119 153.92944 227.62195
.5 Frame  gsave 1. setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   -2.84544 193.47873 2 copy moveto 5.69046 .5 CLW
mul sub dup 0 rmoveto 0 360 arc closepath  gsave 0. 0.2 0.4 setrgbcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true -2.84544 187.78827 267.45561 199.1692
.5 Frame  gsave 0. 0.2 0.4 setrgbcolor  1. .setopacityalpha  fill 
grestore end
 
@endspecial 5022 5222 a
tx@Dict begin { -48.36957 177.82964 } PutCoor PutBegin  end
 5022 5222 a 5022
5222 a
0. 0.2 0.4 setrgbcolor
 5022 5222 a 5022 5273 a
SDict begin H.S end
 5022 5273 a -1 x @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. 0.2 0.4 setrgbcolor  0. true 1.42271 neg 1.46867 neg 58.32822
4.3647 .5 Frame  gsave 0. 0.2 0.4 setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 5022 5222 a
1. 1. 1. setrgbcolor
 5022 5222 a 50 x
Fd(\273)12 b(T\355tulo)21 b(do)e(slide)5499 5272 y
0. 0.2 0.4 setrgbcolor
 5499
5272 a 6002 5222 a
SDict begin H.R end
 6002 5222 a 6002 5272 a
SDict begin [ /Page 1 /Border [0 0 0] /View [/XYZ null null null] H.B
/LNK pdfmark end
 6002 5272
a 5022 5383 a
SDict begin H.S end
 5022 5383 a -1 x Fd(\273)12 b(T)-8 b(abela)6002
5333 y
SDict begin H.R end
 6002 5333 a 6002 5382 a
SDict begin [ /Page 2 /Border [0 0 0] /View [/XYZ null null null] H.B
/LNK pdfmark end
 6002 5382 a 5022 5494
a
SDict begin H.S end
 5022 5494 a -1 x Fd(\273)12 b(Outline)20 b(of)g(the)g(talk)6002
5442 y
SDict begin H.R end
 6002 5442 a 6002 5493 a
SDict begin [ /Page 3 /Border [0 0 0] /View [/XYZ null null null] H.B
/LNK pdfmark end
 6002 5493 a 5022 5494
a
0 setgray
 5022 5494 a 5022 5222 a
tx@Dict begin  PutEnd  end
 5022 5222 a 5022 5222 a
tx@Dict begin { -46.94684 -25.60728 } PutCoor PutBegin  end
 5022
5222 a 5022 5222 a
0. 0.2 0.4 setrgbcolor
 5022 5222 a 5022 5222 a
0 setgray
 5022 5222
a 5022 5222 a
tx@Dict begin  PutEnd  end
 5022 5222 a 5022 5222 a
tx@Dict begin { 322.93881 -25.60728 } PutCoor PutBegin  end
 5022 5222 a 4849
5271 a
0. 0.2 0.4 setrgbcolor
 4849 5271 a 19 w Fd(-)f(p)n(.)g(1)5022 5271 y
0 setgray

5022 5271 a 5022 5222 a
tx@Dict begin  PutEnd  end
 5022 5222 a 5022 3450 a
SDict begin [ /Rotate 90 /PAGES pdfmark end
 5022
3450 a 5022 3450 a
tx@Dict begin { 17.07181 102.43004 } PutCoor PutBegin  end
 5022 3450 a 5022 3260 a
0. 0.4 0.4 setrgbcolor
 5022 3260
a 5022 3260 a
0. 0.4 0.4 setrgbcolor
 5022 3260 a 187 x Fc(T\355tulo)70 b(do)g(slide)6703
3447 y
0 setgray
 6703 3447 a 6703 3447 a
0 setgray
 6703 3447 a 5022 3450
a
tx@Dict begin  PutEnd  end
 5022 3450 a 5022 3450 a
tx@Dict begin { 33.28966 76.82231 } PutCoor PutBegin  end
 5022 3450 a 5022 3572 a
0 setgray
 5022
3572 a 5022 3450 a
0. 0.2 0.4 setrgbcolor
 5022 3450 a 123 x Fb(Aqui)48 b(v)l(em)g(o)f(te)-5
b(xto)47 b(do)h(slide)5022 3450 y
tx@Dict begin  PutEnd  end
 5022 3450 a 4500 6000
a
tx@Dict begin -90 Rot  end
 4500 6000 a eop end
%%Page: 2 2
TeXDict begin 2 1 bop -600 -600 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -600 -600 a -1211 -1817
a
SDict begin H.S end
 -1211 -1817 a -1211 -1817 a
SDict begin H.R end
 -1211 -1817 a -1211 -1817
a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -1211 -1817 a -600 -600 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 -600 -600 a 4500 6000 a
tx@Dict begin 90 Rot  end
 4500
6000 a 5022 5222 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true -56.90549 -56.90549 11.38092 256.07469
.5 Frame  gsave 0.6 0.8 0.6 setrgbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true 0.0 213.39557 142.26372 256.07469 .5
Frame  gsave 0.6 0.8 0.6 setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   25.60728 213.39557 2 copy moveto 14.22636 .5
CLW mul sub dup 0 rmoveto 0 360 arc closepath  gsave 1. setgray  1.
.setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true 25.60728 213.11119 153.92944 227.62195
.5 Frame  gsave 1. setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   -2.84544 193.47873 2 copy moveto 5.69046 .5 CLW
mul sub dup 0 rmoveto 0 360 arc closepath  gsave 0. 0.2 0.4 setrgbcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true -2.84544 187.78827 267.45561 199.1692
.5 Frame  gsave 0. 0.2 0.4 setrgbcolor  1. .setopacityalpha  fill 
grestore end
 
@endspecial 5022 5222 a
tx@Dict begin { -48.36957 177.82964 } PutCoor PutBegin  end
 5022 5222 a 5022
5222 a
0. 0.2 0.4 setrgbcolor
 5022 5222 a 5022 5273 a
SDict begin H.S end
 5022 5273 a -1 x Fd(\273)12
b(T\355tulo)21 b(do)e(slide)6002 5222 y
SDict begin H.R end
 6002 5222 a 6002
5272 a
SDict begin [ /Page 1 /Border [0 0 0] /View [/XYZ null null null] H.B
/LNK pdfmark end
 6002 5272 a 5022 5383 a
SDict begin H.S end
 5022 5383 a -1 x @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. 0.2 0.4 setrgbcolor  0. true 1.42271 neg 1.46867 neg 58.32822
4.27269 .5 Frame  gsave 0. 0.2 0.4 setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 5022 5333 a
1. 1. 1. setrgbcolor
 5022 5333 a 49 x
Fd(\273)12 b(T)-8 b(abela)5273 5382 y
0. 0.2 0.4 setrgbcolor
 5273 5382 a 6002
5333 a
SDict begin H.R end
 6002 5333 a 6002 5382 a
SDict begin [ /Page 2 /Border [0 0 0] /View [/XYZ null null null] H.B
/LNK pdfmark end
 6002 5382 a 5022 5494
a
SDict begin H.S end
 5022 5494 a -1 x Fd(\273)12 b(Outline)20 b(of)g(the)g(talk)6002
5442 y
SDict begin H.R end
 6002 5442 a 6002 5493 a
SDict begin [ /Page 3 /Border [0 0 0] /View [/XYZ null null null] H.B
/LNK pdfmark end
 6002 5493 a 5022 5494
a
0 setgray
 5022 5494 a 5022 5222 a
tx@Dict begin  PutEnd  end
 5022 5222 a 5022 5222 a
tx@Dict begin { -46.94684 -25.60728 } PutCoor PutBegin  end
 5022
5222 a 5022 5222 a
0. 0.2 0.4 setrgbcolor
 5022 5222 a 5022 5222 a
0 setgray
 5022 5222
a 5022 5222 a
tx@Dict begin  PutEnd  end
 5022 5222 a 5022 5222 a
tx@Dict begin { 322.93881 -25.60728 } PutCoor PutBegin  end
 5022 5222 a 4849
5271 a
0. 0.2 0.4 setrgbcolor
 4849 5271 a 19 w Fd(-)f(p)n(.)g(2)5022 5271 y
0 setgray

5022 5271 a 5022 5222 a
tx@Dict begin  PutEnd  end
 5022 5222 a 5022 3450 a
tx@Dict begin { 17.07181 102.43004 } PutCoor PutBegin  end
 5022
3450 a 5022 3271 a
0. 0.4 0.4 setrgbcolor
 5022 3271 a 5022 3271 a
0. 0.4 0.4 setrgbcolor
 5022 3271
a 176 x Fc(T)-20 b(abela)5787 3447 y
0 setgray
 5787 3447 a 5787
3447 a
0 setgray
 5787 3447 a 5022 3450 a
tx@Dict begin  PutEnd  end
 5022 3450 a 5022 3450
a
tx@Dict begin { 33.28966 76.82231 } PutCoor PutBegin  end
 5022 3450 a 5022 4840 a
0 setgray
 5022 4840 a 5022 3450 a
0. 0.2 0.4 setrgbcolor
 5022
3450 a 295 x Fb(T)f(abela)91 b(1:)5909 3745 y
SDict begin H.S end
 5909 3745
a 5909 3745 a
SDict begin H.R end
 5909 3745 a 5909 3745 a
SDict begin [/View [/XYZ H.V]/Dest (table.1) cvn /DEST pdfmark end
 5909 3745 a Fb(A)h(tabela)e(a)h
(seguir)5022 3989 y(mostr)n(a)p 5146 4050 2062 7 v 5143
4293 7 244 v 5250 4220 a(gato)p 5732 4293 V 385 w(hoje)p
6529 4293 V 339 w(ir\341)p 7205 4293 V 5146 4300 2062
7 v 5143 4544 7 244 v 5250 4471 a(a\347\343o)p 5732 4544
V 323 w(boca)p 6529 4544 V 315 w(cacho)p 7205 4544 V
5143 4788 V 5250 4715 a(dado)p 5732 4788 V 205 w(a)m(via\347\343o)p
6529 4788 V 206 w(kappa)p 7205 4788 V 5146 4795 2062
7 v 7620 6142 a @beginspecial 1 @llx 2 @lly 611 @urx
792 @ury 1202 @rwi @setspecial
%%BeginDocument: tiger.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 1 2 611 792
%%BeginPreview: 611 791 1 791
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 000000000000000000000000000000000000000000000000000000000000000000000000001f0000000000000007ffff8000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabfffffeaaaaaaaaabffffffffeaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000000000000000000000000000000000000007fffffffc00000001fffffffffff0000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222ffffffffff22a222bfffffffffffffe2a222a222a222a222a222a222a222a222a222a222a222a222a220
% 000000000000000000000000000000000000000000000000000000000000000000000fffffffffffe00007fffffffffffffffc0000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabffffffffffffaaaffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000000000000000000000000000000003fffffffffffffe0ffffffffffffffffffff800000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222fffffffffffffffffffffffffffffffffffff22222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffd7ffffffe0000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabffffffffffffffffffffffffffffffeaaffffffaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000000000000000000000000000000fffffffffffdffffffffffffffffffffd55fffffe000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2bfffffffffeeaafffffffffffffffffffeaaabffffa2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000001ffffffffffc5454fffffffffffffffffffc54547ffe00000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabfffffffffffeaaaaafffffffffaaaaffffffaaaabfffaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000ffffffffffffffd55555ffffffd5555557fffff55557fff0000000000000000000000000000000000000000000000
% 222222222222222222222222222222222222222222222222222222222222ffffffffffffffffaaaaafffffaaaaaaaaafffffaaaaabffa222222222222222222222222222222222222222222220
% 00000000000000000000000000000000000000000000000000000000000fffffffffffffffffd45557fffe5554555455fffff455547fe000000000000000000ff0000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabffffffffffffffffffaaaabfffaaaaaaaaaaafffffeaaaaaffaaaaaaaaaaaaaaaaabffaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000fffffffffffffffffffd5555fff5557f5555557fffffd55555fc0000000000000001fffe000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a223fffffffffffffffffffeaaabffaabfffffeaaabffffffaaaaabfa222a222a222a223fffea222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000003ffffffffffffffffffffc54fff4fffffffff454fffffff45454f800000000000000fffff000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaafffffffffffffffffffffeaafffffffffffffaaabffffffeaaaabeaaaaaaaaaaaaabfebffaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000000000000000000000003fffffffffd55ffffffffffd7ffffffffffffffd55fffffff55555700000000000007fc7ff000000000000000000000000
% 222222222222222222222222222222222222222222222222222222227ffaaffffaaaabfffffffffeffffffffffffffffaafffffffeaaaabe222222222223ff07ffa22222222222222222222220
% 00000000000000000000000000000000000000000000000000000000fff7ffffff5455fffffffffffffffffc57fffffff55fffffffd4555e00000000000ffe07ff800000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabffbfffffffaaaabfffffffffffffffaaabfffffffeabffffffeaaaafaaaaaaaafffffa0bffaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000000000000000000003ffffffffffd5555ffffffffffffffd55557fffffff555ffffffd5555c01fffffffffd007ff800000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2affbfffffffffeaaabfffffffffffeaaaaaabfffffffaaaabfffffaaaefffffffffffea00fffa2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000001fffffffffffff45457ffffffffff545454545ffffffe54545fffffffffffffffffff4000fff800000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabfffffffffffffaaaabfffffffffffffaaaaaafffffffaaaaafffffffffffffffffe80000fffaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000000000000000000000ffffffffffffffd55557fffffffffffff555555555fffd55557ffffffffffffffff400000fff800000000000000000000000
% 222222222222222222222222222222222222222222222222222223fffffffffffffffeaaaaffffffffffffffaaaaaaaabffeaaaaaffffeffffffffffa000000fffa22222222222222222222220
% 000000000000000000000000000000000000000000000000000007fffff5547ffffffff5547fffffffffffffffd554555fffd45557ffffffffffffff0000000fff800000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaffffeaaaaafffffffffeabffffffffffffffffaaaaaaaffeaaaabfffffffffffffe0000000fffaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000000000000000001ffff55555fffffffffffd7ffffffffffffffffd5555557ff55555fffffffffffffc0000000fff800000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a27fffaaaabfffffffffffffffffffffffffffffffaaaaaabffeaaaafffffffffffff80000000fffa222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000fffd4545ffffffffffffffffffffffffffffffffc5454547ffc545fffffffffffff00000000fff800000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabffeaaafffffffffffffffffffffffffffffffffffeaaaaaaffeaaaffffffffffffe00000000fffaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000007ff5555ffffffffffffffffffffffffffffffffffffd555557ff555ffffffffffffc00000001fff800000000000000000000000
% 222222222222222222222222222222222222222222222222223ffaaaaffffffffffffffffffffffffffffffffffffffaaaaaaffeabffffffffffff800000002fffa22222222222222222222220
% 000000000000000000000000000000000000000000000000003ff5547ffffff47fffffffffffffffffffffffffffffffd55457fe57ffffffffffffc00000001fff800000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaafeaaabfffffaaaabfffffffffffffffffffffffffffffffaaaabffafffffffffffff800000003fffaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000000000000003fd555fffff5555557ffffffffffffffffffffffffffffffff555ffffffffffffffff000000001fff800000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2afaaaaffffbaaaaaaaafffffffffffffeaaaaafffffffffffffffffffffffffffffffe000000003fffa2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000003d4545fffd47ff454545fffffffffffffd454545fffffffffffffffffffffffffffffe000000003fff800000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaafffeaffffaaaaaabfffffffffffffaaaaaabffffffffffffffffffffffffffffe000000003fffaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000000000000355555fff55fffff555557fffffffffffffd5555555fffffffffffffff7fffffffffffc000000007fff000000000000000000000000
% 222222222222222222222222222222222222222222222226aaaabffaaffffffaaaaafffffffffffffffaaaaaaabfffffffffffffeffffffffffffe00000000ffff222222222222222222222220
% 00000000000000000000000000000000000000000000001d5455fff57ffffffd56557ffffffffffffffd54555457ffffffffffffd7fffffffffffc00000000ffff000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaafffaaffffffffafaabffffffffffffffeaaaaaaaaffffffffffffaffffffffffffe00000000ffffaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000d5555fff57ffffffffffd55fffffffffffffffd55555555fffffffffff5ffffffffffffc00000001ffff000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a223aaaabffabfffffffffffeabfffffffffffffffffeaaaaaaffffffffffebffffffffffffe00000000fffea222a222a222a222a222a220
% 00000000000000000000000000000000000000000000034545ffc57ffffffffffffdffffffffffffffffffff454545ffffffffff5ffffffffffffc00000001fffe000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaabfeabfffffffefffffffffffffffffffffffffffaaaaabffffffffebffffffffffff800000003fffeaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000000000000d555ffd5fffffffff7fffffffffffffffffffffffffffd5555ffffffffddffffffffffffc00000003fffc000000000000000000000000
% 222222222222222222222222222222222222222222223aaabffabffffffffebffffffffffffffffffffffffffffaaaabffffffffbffffffffffff800000003fffe222222222222222222222220
% 0000000000000000000000000000000000000000000035547ff5fffffffffd5ffffffffffffffffffffffffffffe5554ffffffff7ffffffffffffc00000007fffc000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaffaffffffffffaaaafffffffffffffffffffffffffffaaaabffffffebffffffffffff80000000bfffaaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000000000005555ff5fffffffd5555557ffffffffffffffffffffffffffd5555fffffff7ffffffffffffc0000000ffff8000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2eaabfeffffffffaaaaaaafffffffffffffffffffffffffffeaaaabfffffebffffffffffff80000000ffffaa2a2a2a2a2a2a2a2a2a2a2a0
% 00000000000000000000000000000000000000000000c54fe5ffffffff4545457fffffffffffffffffeffffffffff54545ffffff7ffffffffffffc0000001ffff8000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaabfefffffabfeaaaaabffffffffffffffffffebfffffffffaaaaafffffebffffffffffff80000003ffffaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000000001557fdfffff55d55555fffffffffffffffffffff5fffffffffd55555fffff7ffffffffffffc0000003ffff0000000000000000000000000
% 22222222222222222222222222222222222222222222aafebffffaaaaaaafffffffffffffffffffffffafffffffffeaaaaaffffebffffffffffff80000003ffff2222222222222222222222220
% 0000000000000000000000000000000000000000001f55fd7ffff455547ffffffffffffffffffffffffd7fffffffff555457ffff7ffffffffffffc0000007fffe0000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabfabfffaaaaaafffffffffffafffffffffffffabfffffffffaaaaaafffebffffffffffffa000000ffffeaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000005557f57fff55555ffffffffffffd5ffffffffffffd57ffffffffd555555fff5ffffffffffffc000000ffffc0000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222eaafebfffeaaaafffffffffffffeaafffffffffffeafffffffffeaaaaaabfebffffffffffffe000000ffffe2a222a222a222a222a222a220
% 000000000000000000000000000000000000000000454fc7fff54545fffffffffffffd457ffffffffffd47fffffffff5454545ff5ffffffffffffc000001ffff80000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeabfafffeaaabffffffffffffffeaabffffffffffeabfffffffffaaaaaaaffbffffffffffffe000002ffffaaaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000000000d57f7fffd555ffffffffffffffff555fffffffffff57fffff7fffd555555ff5ffffffffffffc000001ffff00000000000000000000000000
% 222222222222222222222222222222222222222222aafeffffaaafffffffffffffffffaaafffffffffffabfffffbfffeaaaaaaffbffffffffffffe000003ffff22222222222222222222222220
% 000000000000000000000000000000000000000000d4f5fffd547fffffffffffffffffd455ffffffffff55fffffcfffe555455ff5ffffffffffffe000007fffe00000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaababebfffaaaffffffffffffffffffeaaaffffffffffabfffffefffeaaaaabffaffffffffffffe00000ffffeaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000000157d7fff557fffffffffffffffffff555555fffffffd5fffffd7fff555557ffd7ffffffffffff00001ffffc00000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a3aeafffeabfffffffffffffffffffeaaaaaabffffffaafffffebfffaaaaabffaffffffffffffe80002ffffea2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000074d7fff45fffffffffffffffffffff54545457fffffc5ffffff4fff454547ffc7ffffffffffff40007ffff800000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaafffaabfffffffffffffffffffffaaaaaaaafffffeaffffffafffaaaaafffabffffffffffffa000bffffaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000000d55fff55fffffffffffffffffffffff55555555ffffd57fffff57ffd5555fffd7ffffffffffffc000fffff000000000000000000000000000
% 22222222222222222222222222222222222222223aabffaaffffffffffffffffffffffffeaaaaaaaffffeabfffffabffeaaaafffebffffffffffffe002ffffe222222222222222222222222220
% 00000000000000000000000000000000000000001457fe55fffffffffffffffffffffffffc5554557ffff47fffff55fff4555ffff5fffffffffffff007ffffe000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaffaaffffffffffffffffffffffffffeaaaaaabfffeabfffffaaffeaaaafffeaffffffffffffeaaaffffeaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000355ff55ffffffffffffff7ffffffffffffd555555ffff55fffffd57ff5555ffff5fffffffffffffddfffff8000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a26abfaabfffffffffffffebffffffffffffeaaaaaabfffabfffffaabffaaaaffffafffffffffffffeefffffa222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000457f45ffffffffffffffc5fffffffffffffd454545fff55fffff457ffd454ffffd7fffffffffffffffffff0000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeafeabffffffffffffffaafffffffffffffeaaaaaafffaaffffeaafffeaaaffffeffffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000001d5fd57ffffffffffffff557fffffffffffffd555557ff55ffffd55ffff555fffff7ffffffffffffffffffe0000000000000000000000000000
% 2222222222222222222222222222222222222222abfabffffffffffeeffeaabfffffffffffffeaaaaafffaaffffeaaffffaaafffffbffffffffffffffffffe2222222222222222222222222220
% 000000000000000000000000000000000000000c57d47ffffffffffcdffc557ffffffffffffff554557ff5577ffe557fffd457ffffdffffffffffffffffff80000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaafaaffffffffffebbffaaaaffffffffffffffeaaaabffaaabfffaabfffeaafffffeffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000155755ffffff7555557f7d5557ffffffffffffff55555ff5555fffd55ffff557fffffffffffffffffffffff00000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2aaaeabfffbfaaaaaaafeaaaaaabfffffffffffffaaaaaffaaabfffaaaffffaabffffffffffffffffffffffe2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 00000000000000000000000000000000000000455d4fffc545454545fd4545454fffffffffffffc54547f5455fffc54ffffd45ffffffffffffffffffffffc00000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeababffeaaaaaaaaabfaaaaaaaafffffffffffffeaaaabfaaaafffeaaffffeaaffffffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000d5757ff55555555557f555555557fffffd55fffff55555f5555ffff557ffff557fffffffffffffffffffff000000000000000000000000000000
% 22222222222222222222222222222222222222aaaaffeaaaaaaaaabfeaaaaaaaabffffeaaaaaabeaaaaaaaaaafffeaabfffeaaffffbffffffffffffffffe222222222222222222222222222220
% 00000000000000000000000000000000000000d554ffd455545554ffd455545554ffff55545554555455545557fff455ffff547fffd7fffffffffffffffc000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaabfeaaaaaaaaabfeaaaaaaaaaafffeaaaaaaaaaaaaaaaaaaabfffaaaffffaaabffabfffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000015557fd5555555557fd55555555003ff80111555555d555555557fffd557fffd5557fd5fffffffffffffff0000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a223aaaffaaaaaaaaaaffaaaaaaaaaa223222aaaaaaaabeaaaaaaaabfffeaabfffeaaaaaaabfffffffffffffe222a222a222a222a222a222a222a220
% 00000000000000000000000000000000000001454ff5454545455ff5454545400000000000454545fd45454547fffd455fffc54545455ffffffffffffd60000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabfeaafaaaaaabfeaaaaaaaa88000808082aaaaabfeaaaaaaaffffeaaafffeaaaaaaaafffffffffffeabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000003557fd57fd555557fd5555555000000000000015557fd55555557ffff555ffff555555557fffffffffd5558000000000000000000000000000000
% 22222222222222222222222222222222222222aaffffffaaaaaaffaaaaaaaaa2000000000222aaaffeaaaaaaafffffaaaffffaaaaaaaabffffffffeaaaae222222222222222222222222222220
% 0000000000000000000000000000000000000755ffffff545555ffd455545400000040000000555fff5455545fffff5457ffff54555457ffffffffd45557000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaffffffeaaaaabffaaaaaaaa800007e7c00002aaaffeaaaaaabfffffaaabffffaaaaaaabffffffffaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000055ffffffd555557ff5555555000001fffe00000155fff5555557fffffd555ffffd5555555ffffffffd55555c00000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2aefffffffaaaaaabfeaaaaaaaa00003ffff000002aaffeaaaaaabfffffeaabffffeaaaaaabfffffffffaaaaab2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000001dffffffe5454547fd4545454000007ffff800000547ff4545457fffffe545fffffd454545fffffffffd45454e0000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabfffffffeaaaaaaffeaaaaaaa00000fffff800000aafffaaaaaaffffffeaaafffffeaaaaaaffffffffffaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000005ff15fffd555555ffd555555000001fffff800000157ff5555557ffffff5557fffff555555fffd7ffffff555556000000000000000000000000000
% 222222222222222222222222222222222222bf22bfffaaaaaaaffaaaaaaa200003fffff8000022abffaaaaaafffffffaaafffffeaaaaaaffeaaffffffaaaaaba22222222222222222222222220
% 000000000000000000000000000000000001f8005fff5455545ff4555454000007fffff800000057ffd55455fffffffd547fffff5455547f5457fffffc55545c00000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabe800bffeaaaaafbffaaaaaaa00000ffffff800000aabffaaaaabfffffffaaabfffffaaaaaaaaaaaaffffffaaaaaeaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000380003ffd5557ff7ff555555000000ffffff800000155fff55557fffffffd555fffff5555555555557ffffff5555580000000000000000000000000
% 22a222a222a222a222a222a222a222a222a280003ffaaabfffbffaaaaaaa00000ffffffc000002aafffaaaabfffffffeaabfffffeaaaaaaaaaaabfffffeaaaaae2a222a222a222a222a222a220
% 00000000000000000000000000000000000300003ff5457fff7ffd45454000000407fffe00000045fffd4547ffffffff454ffffff545454545454ffffff5454560000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae80007ffaaafffaffffaaaaa000000001ffff01c002abfffeaaaffffffffeaaaffffffeaaaaaaaaaaaffffffaaaaabaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000504007ff555fff5f7fff5550000041c007fffc7c00015ffff555fffffffff555fffffff555555555557fffffd555558000000000000000000000000
% 22222222222222222222222222222222222a07007ffaabffebfbfffeaaa0001e3c001fffffc002abfffeaabfffffffffaaafffffffeaaaaaaaaaabfffffeaaaaae222222222222222222222220
% 00000000000000000000000000000000000c0f1c7ff457fe55f5fffff400003f3e000fffffe00015fffe557fffffffffd557fffffffc55545554fdfffffe555456000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaba1e3c7feaaffaabeafffffa80003f3e000fffffe000abffffaabfffffffffaaabfffffffeaaaaaaaafeffffffaaaaabaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000103e387ff55ff557d57ffff800003f3f0007ffffe00015ffff557fffffffffd557ffffffff555555557fffffffd55555800000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2b87c787feabfaaafeabffffe00003fbf0003ffffe0002affffaaffffffffffeaabffffffffaaaaaaaaffffffffeaaaaae2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000207c787fe57f454fc54ffffc00003f9f8003ffffe00005ffffc57fffffffffe545ffffffffc54545457fffffffc54545400000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa8f8f07feafeaabfaaaeabfe00003f9f8001ffffe0002affffaaffffffffffeaaafffffffaaaaaaaaabfffffffeaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000040f8e07ff5f5557f555555fe00003f8fc003ffffe000057fffd5fffffffffff5557ffffff5555555555ffffffff55555700000000000000000000000
% 222222222222222222222222222222222260f9e07eeaeaaabfaaaaaafe00003f8fc003ffffe0002abfffaafffffffffffaaabffffffaaaaaaaaaaffffffffaaaaaba2222222222222222222220
% 000000000000000000000000000000000041f1c0fe555455fe5554557f00003f9fe003ffffc000057fffd4fffffffffff4555ffffffd5455545557fffffffc55545c0000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f3c0feaaaaabfeaaaaaabf00001fdfe007ffff80002abfffaafffffffffffaaaaffffffeaaaaaaaaaffffffffeaaaaaeaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000c1f3c0ff55555ffd5555557f00001fdff007ffff8000015fffd5fffffffffffd5557ffffff5555555557ffffffff5555570000000000000000000000
% 22a222a222a222a222a222a222a222a222a1f3c0feaaaabffeaeaaaabf00001fdff0073fff00002aafffaafffffffffffaaaabffffffaaaaaaaaabffffffffaaaaab22a222a222a222a222a220
% 000000000000000000000000000000000143f180fd45457ffd5f45455f00000fdff8003ffe0000054fff457ffffffffffd4545fffffff545454545fffffd4fc545458000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab83f181faaaabfbfebfaaaabf00000fdff8007ffc0001feaffeaafffffffffffaaaaafffffffeaaaaaaaafffffeaaeaaaaaeaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000103f081fd5557f7ff7ff5555f00000f9ffc007ff8001ffd5ffd557ffffffffff555557fffffff555555557ffffd557555556000000000000000000000
% 222222222222222222222222222222222383f003faaaafeffffffaaaaf00000f9ffc007ff006fffebffaaaffffffffffeaaaaabfffffffeaaaaaaabffffeaaaaaaaaa222222222222222222220
% 000000000000000000000000000000000103f007f5545fdffff7fd545f00001f1ffc00fff00ffffe5fd4557fffffffffd554555ffffffff45554555fffff555455545000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab87e007eaaabfbffffbfaaaae00001f1ff800fff03ffffebfeaaabfffffffffaaaaaaaffffffffaaaaaaaafffffaaaaaaaabaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000103e00ff5557f7dfdf5fd555e00001e1ff800fff07ffffe5555555fffffffffd555555ffffffff55555555fffffd55555555800000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2eba3e00feaaafefafafafeaaae00003e3ff001fff0fffffeaaaaaaaaffffffeaaaaaaaafffffffaaaaaaaaafffffeaaaaaaaaea2a2a2a2a2a2a2a2a2a0
% 000000000000000000000000000000037fc3e01fc545fdf5e5757f454600003c3ff003fff1fffff8454545455fffff454545fd47ffffff4545454547ffffe54545454600000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeffebf01feaabfbfaeafabfaaae0000183fe003fff7fffff8aaaaaaaaaffeaeaaabfffeabfffffeaaaaaaaaabfffffaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000c3fe3f03fd557f7f5f5755f55540000107fe007fffffffff81555555555fd555557ffff57fffffd5555555557fffff55555555700000000000000000000
% 2222222222222222222222222222222a3fe1f03feaafefeaeafaafaaae0000007fc007fffffffff02aaaaaaaaabaaaaaafffffabfffffaaaaaaaaaabfffffaaaaaaaab22222222222222222220
% 0000000000000000000000000000000c3fe1f87fd457dfd5d47557d554000000ff800fff7ffffff004555455d455545557ffff55fffff45554555455fffffc5554555480000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaab81feaf87faaafafabeafaabeaaa000000ff001ffcffffff802aaaaaafaaaaaaaaafffffaafffffaaaaaaaaaaafffffeaaaaaaaaeaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000301ff1fcffd55f5fd5d57555d554000001ff003ff9ffffff000555555fd55555555fffff55fffffd5555555555ffffff5555555540000000000000000000
% 22a222a222a222a222a222a222a222e01ff3feffaabebfabaafaaaeaaa000001fe007ffffffffc002aaaaabfaaaaaaaaaffffeaafffffaaaaaaaaaaafffffeaaaaaaaaa222a222a222a222a220
% 000000000000000000000000000000400ff87dffc57d7f45c575456544000003fe00fffffffff0000545457fc54545455ffffd45ffffff45454545457fffff4545454570000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaae00f7abdffaafafeabaafaaabaaa800007fc01fe3fffffe0000aaaaaffaaaaaaaabffffaaafffffffaaaaaaaaabfffffaaaaaaaabaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000400fbc1dff55757d5755f5555554000007fc01fc7fffe00000015555ffd55555557ffff5557fffffffd55555557ffffd5555555558000000000000000000
% 2222222222222222222222222222226003c02dffaaeafeabaafaaaaaaa00000ffc01f8fffe0000002aaaabffaaaaaaaabfffeaaafffffffffaaaaaaabffffaaaaaaaaeaa222222222222222220
% 0000000000000000000000000000002001e00dff55d47d5755f4555c5400000ffc01e1fff0000000055457ffd55455547fffd5547ffffffffd5455545ffffd5455545754000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaae800782efeabaafaaaaafaaaaaaa80001ff80001ff800000000aaabfffaaaaaaaaffffaaaafffffffffeaaaaaaaffffaaaaaaaabeeaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000040001806ff5755f55755f555555500001ff80001fc0c00000001557fffd55555557fff55557ffffffffd555557dffff5555555553e000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2afe0800006feaaaaeaaaaafaaaaaaa80003f800001e0382000002aaaffffaaaaaaaafffeaaaabffffffffaaaaaabefffeaaaaaaaaaaea2a2a2a2a2a2a2a2a0
% 000000000000000000000000000000fc000006ff4545e54545f545454500003f000000c0e1c000000545ffffc54545457ffd45457fffffffc5454547f7ffe54545454583000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaffffe80006ffaaaaeaaeaafaaaaaaa80007c00000007870300000aabffffaaaaaaaafffaaaaabfffffffaaaaaaabfbffeaaaaaaaaaeaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000007fdff8006ff5555d55555f55555550000f00000001e1c1e00000157ffff55555555fffd55557ffffffd55555557fdfff55555555560000000000000000000
% 2222222222222222222222222227ffe7ef6002ffaaabaaaaaafaaaaaaaa001e00000003c787000002affffffaaaaaaabfffaaaaabffffffaaaaaaaabffffeaaaaaaaaaa2222222222222222220
% 00000000000000000000000000000ffffffc037fd457d45d54755455540003e0000000f1e3c00000ffffffff54555457fff554557ffffff554555455fffff45554555450000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaafffffffff03ffeaabaaaaaafaaaaaaaa003c0000003cf9f000007ffffffffaaaaaaabffeaaaaabfffffeaaaaaaaaaffffeaaaaaaaaabaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000001803540fffc07fd5575555557555555500078000000736ec00003fffffffff55555557fff555557fffffd555555555ffd7f55555555558000000000000000000
% 22a222a222a222a222a222a222a227aaa3fbc03feaaeaabaaabaaaaaaaa00f0000001ecb700000ffffffffffaaaaaaafffeaaaaabfffffaaaaaaaaaaffebeaaaaaaaaaae22a222a222a222a220
% 0000000000000000000000000000074541f5784fe54745454575454545401e000000393d800003ffffffffff4545455fffc545457fffff45454545457fe5e54545454544000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaabaa80faa82beaaeaaaaaabaaaaaaaa03c000000e6e60000bfffffffffffaaaaaabfffaaaaaabfffffaaaaaaaaaabfeafaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000f5540f55415f55d55555555555555003c000001db980000ffffffffffff5555557fff5555557fffff55555555555ff5755555555557000000000000000000
% 22222222222222222222222222223faaa0faba2afaaaaaaaaabaaaaaaaa07c0000072e600227ffffffffffffaaaaabffffaaaaaabfffffaaaaaaaaaabffabaaaaaaaaaab222222222222222220
% 00000000000000000000000000001f5440f57714755455545554555455407000000ed980007fffe7ffffffffd55457ffff5455547fffffd4555455545ffc555455545555800000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaabfaaa87aba2ababaaaaaaabaaaaaaaa0200002bf6eaaabfffc02ffbfffffeaaaaffffeaaaaaabfffffaaaaaaaaaaaffaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000003f5550795515555555555555555555400000003fb0003fffe0017f5fffffd5555ffffd5555557fffffd55555555557fd555555555555400000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2bfaaa07aaa2aaaaaaaaaaaaaaaaaaaa0000022fee2a3fffe0002beafffffeaaabffffeaaaaaabfffffeaaaaaaaabaffeaaaaaaaaaaaae2a2a2a2a2a2a2a2a0
% 00000000000000000000000000003f45403c440545454545454545454540000001fbfffffff800614d47ffffe5457ffffd4545457ffffff545454547c7ff454545454545600000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaabfaaa83aaa2aaaeaaaaaaaaaaaaaaaa00000abffffffff8003feaaabffffeaaabffffaaaaaaabffffffaaaaaaaabfbfeaaaaaaaaaaaabaaaaaaaaaaaaaaaa0
% 00000000000000000000000000005f555039013555555555555555555540000007f5fffffe0007ff5555fdfff5557ffff55555557ffffffd55555555fdff555555555555500000000000000000
% 22222222222222222222222222227faaaa1eaa2aaaaaaaaaaaaaaaaaaaa000022faaaffff0000fffaaabfafffaaabffffaaaaaaabffffffeaaaaaaabffffaaaaaaaaaaaaaa2222222222222220
% 00000000000000000000000000005fd5541c44755455545554555455544000003f5757ffe0001ff55457fc5ff4555ffff45554555fffffff54555455ffffd455545554555c0000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaffaaaa1eaaaaaaaaaaaaaaaaaaaaaaa8000afaaaaaffc0003faaaaaffaaffaaaaffffaaaaaaabfffffffaaaaaaaaffffaaaaaaaaaaaaaeaaaaaaaaaaaaaaa0
% 0000000000000000000000000000dff57c0e0255555555555555555555400000f555557f80007e155557f517fd5557fff55555555fffffffd5555555ffffd55555555555540000000000000000
% 22a222a222a222a222a222a222a2affafeafaeaaaaaaaaaaaaaaaaaaaaa00003eaaea0bf8000febaaaaffaaffeaaabfffaaaaaaabfffffffaaaaaabeffffeaaaaaaaaaaaaaa222a222a222a220
% 0000000000000000000000000000cfffff47fdc5454545454545454545400003f57f707f8000f9e5455ff447fd4545fffd4545454fffffffc545457f7fffc54545454545460000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaafffffa3faaaaaaaaaaaaaaaaaaaaaa0002faaffa8af0001ffaaaabffaabfeaaabfffaaaaaaaafffffffeaaaaabfffffeaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000157ffffc1fbf5555555555555555555400007517fc10f0003ff55557ff501ff5555fffd5555555ffffffff555555fff7ff55555555555550000000000000000
% 2222222222222222222222222223afffffeaeaaaaaaaaaaaaaaaaaaaaaa0002eaaffeaaf0007faaaaafffaabfeaaabfffeaaaaaaaffffffffaaaaabffebffaaaaaaaaaaaab2222222222222220
% 000000000000000000000000000155f7fffc47d455545554555455545540001e44ffc44e0007c55455fff445fe5457fffd54555457fffffff554555fff57f55455545554558000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaabaaabfffeaaaaaaaaaaaaaaaaaaaaaaa000beaaffeaae001faaaaaffffaaafeaaaffffeaaaaaaafffffffeaaaaaaffeabfaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000015555ffff5f5555555555555555555540007c007f800e001f15555ffff500ff1fffffff55555557ffffffd555555fff55fd5555555555558000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a3aaaaffffeaaaaaaaaaaaaaaaaaaaaaa000feaaffaaae007faaaabffffaaafeaffffffeaaaaaaabffffffeaaaaaafffaafaaaaaaaaaaaaae2a2a2a2a2a2a2a0
% 000000000000000070000000000145457ffff5454545454545454545454001fc445e444c007e45455ffffd407e5fffffff45454547ffffffc545454fff457d4545454545454000000000000000
% aaaaaaaaaaaaaaaabeaaaaaaaaabaaaaaaffaaaaaaaaaaaaaaaaaaaaaaa003feaaaeaaac01feaaaabfffffaabebffffffeaaaaaaabffffffeaaaaaafffaabeaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000f00000000015555557ffd555555555555555555554007ff0101010c03ff55557fff80e01e1fffffff55555555fffffff5555557ffd55f5555555555578000000000000000
% 222222222222222223a222222223aaaaaabeaaaaaaaaaaaaaaaaaaaaaaa00ffeaaaaaaa807feaaaabfe01faa2e2fffffffaaaaaaaafffffffaaaaaafffeaaeaaaaaaaaaaaa2222222222222220
% 000000000000000000c0000000015455545fff55545554555455545554401ffe444444581fff54557e01fc40040fffffff55545554fffffffc555457ffd5575554555455570000000000000000
% aaaaaaaaaaaaaaaaaaeaaaaaaaabaaaaaabaaaaaaaaaaaaaaaaaaaaaaaa83fffaaaaaab03ffeaaaaf83ffaaa88afffffffaaaaaaaafffffffeaaaaabffeaabaaaaaaaaaaabaaaaaaaaaaaaaaa0
% 00000000000000000050000000015555555ff5555555555555555555554077ff800000607fff5555c3fffd500007ffffffd5555555fffffffffd5557fff5555555555555550000000000000000
% 22a222a222a222a222b222a222a3aaaaaabaaaaaaaaaaaaaaaaaaaaaaaa0efffeaaaaac0ffffaaae1ffffaaa2223ffffffaaaaaaaaffffffffffaaabfffaaaaaaaaaaaaaaba222a222a222a220
% 0000000000000000001800000003454545574545454545454545454545463ffffc444581ffffe5507ffffd400001ffffffc54545457fffffffffc545fffd454545454545458000000000000000
% aaaaaaaaaaaaaaaaaab6aaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa87fffffaaaf01fffffae1fffffaaa8000ffffffaaffeaaaffffffffffaaabfffeaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000c000000075555557d555555555555555555555ff0fffffff03e03fffffd87fffffd5000007fffffffbffd557fffffffff5555ffff555555555555558000000000000000
% 222222222222222222262222222faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1fffffffffb2fffeffe1ffffffaaa20027fffff8feaaaaafffffffffeaaaaffffaaaaaaaaaaaaaae222222222222220
% 000000000000000000060000000fd55455f45554555455547fff7fff7f43fffc45ffbf9fff54587ffffffd5400003ffff874555455fffffffffc55547fff555455545554554000000000000000
% aaaaaaaaaaaaaaaaaaabaaaaaaafeaaaaaaaaaaaaaaaaaaaaafaaaaaaaa7fffaaabffffffeaae3bffffffaaa80001fffc7aaaaaaaafffffffffaaaaaffffaaaaaaaaaaaaaaeaaaaaaaaaaaaaa0
% 000000000004000000030000000ff55557d555555555557fffffffffff0ffff55557ffffff558f7ffffff55400000ffc3f91555555fffffffffd15557fffd55555555555554000000000000000
% a2a2a2a2a2bfe2a2a2a2a2a2a2afffaafaaaaaaaaaaaaaaeeeaeeaaaaaafffaaaaaaffffffeb3fbffffffaaaa0000fe3ffaaaaaaaafffffffffaaaaabfffeaaaaaaaaaaaaaa2a2a2a2a2a2a2a0
% 000000000003f000000180000007fffff7454545454557fff7f7fff7f75fff4545457ffffffc5fffffffe54400001e1fff84454545fffffffffc44447ffff54545454545456000000000000000
% aaaaaaaaaaaabeaaaaab6aaaaaafffffaaaaaaaaaaaabbeaaaaaabaaaabffaaaaaaaaffffff1ffffffffeaaaa000e07fffaaaaaaaafffffffffaaaaabffffaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000f000000c0000003ffffff5555555557fffff5557fffff7fd5555555555fffe3ffffffffd551000303ffff80015555fffffffffd01011ffffd5555555555556000000000000000
% 22222222222222a22222e2222223fffeaaaaaaaaaaaeeaaaaaaaaaeaaafeaaaaaaaaaaaaffcfffffffffaaaaa01c1fffffa2aaaaaafffffffffeaaaaaffffeaaaaaaaaaaaab222222222222220
% 00000000000001400000a00000015ffffc55545555fffc55545557fffff554555455fff55f1fffffffffd454006061ffff80045555fffffffffe04040ffffe5554555455545000000000000000
% aaaaaaaaaaaaaaeaaaaaeaaaaaaaafeaaaaaaaaaabbaaaaaaaaaaabeaabaaaaaaaae0072ae7ffffffffeaaaaab8381ffff8aaaaaabffffffffffaaaaafffffaaaaaaaaaaaabaaaaaaaaaaaaaa0
% 0000000000000030000060000000df7f755555557ffd55555555557ffff5555555700fd55cfffffffffd55550c1c01ffff80001555ffffffffff800007ffffd555555555555000000000000000
% 22a222a222a222be22a252a222a26eaaaaaaaaaaeeaaaaaaaaaaaaaeaaaaaaaaab81faaab1fffffffffaaaaab06001ffff0222aaabffffffffffa2a2a3ffffaaaaaaaaaaaaaa22a222a222a220
% 000000000000000c0000500000003ff565454547f545454545454547f7f54545461f4545677ffffffff54545c38003ffff00000445ffffffffffc00003ffffc545454545454800000000000000
% aaaaaaaaaaaaaaaaaaaabaaaaaaafaaaaaaaaaaaaaaaaaaaaaaaaaabfaaaaaaaa82aaaaacaafffffffaaaaae0c000fffff0088aaabffffffffffe888a9ffffeaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000005000030000000fff57555555f5555555555555557ffff555550d555553557ffffff55557830001fffff000007ffffffffffe0000001fffff155555555555800000000000000
% 2222222222222222a2222a222223aaaaaaaaaaaaaaaaaaaaaaaaaaaaeeaaaaabe3aaaaaa6aabfffffeaaaac0ea001fffff0003f81fffffffffe2222222fffffaaaaaaaaaaaae22222222222220
% 00000000000000014000280000077fd4555455d45554557f7fff55557fff55578554555cd5547fffd554570740001fffff01fc0fe7ffffffffe0000000fffffc55545554555400000000000000
% aaaaaaaaaaaaaaaaeaaabaaaaabeaaaaaaaaaaaaaaaaaaafbfffaaaabfeaaaaf1aaaaab1aaaaaabaaaaab81aaa800ffffffe03faafffffffffe8000060fffffeaaaaaaaaaaaeaaaaaaaaaaaaa0
% 000000000000000060001800007d7f555555555555557fffffffffd57fffd5567d5555635555555555556070000007ffff007c0007ffffffffe00001fc7fffff15555555555400000000000000
% a2a2a2a2a2a2a2a2d2a2baa2a3aaaaaaaaaaaaaaaaaaaeeaaaaaeeaaaeeaaaa8feaaaaceaaaaaaaaaaab81aaa22007fff007802227ffffffffe22001fe7fffffaaaaaaaaaaaea2a2a2a2a2a2a0
% 0000000f00000000280014000745f545454565454547ffc545454fff47fff551ff4545954545454545460644400001ff00f8000003ffffffffe00003ffbfffffc445454547c400000000000000
% aaaaaafffaaaaaaabaaaaeaaaeaaaaaaaaaaaaaaaaabfaaaaaaaaafbaafaaeb3ffaaab2aaaaaaaaaaab83aaaaa8000f80f0000008bffffffffe00003ffffffffeaaaaaaaaaaaaaaaaaaaaaaaa0
% 000000e03600000014000c001f55d5555555d555557fd5555555555ffdffff67fff55655555555555560d11100000780ff00000001ffffffffc00003ffffffffe1155555565600000000000000
% 222222222fe222222a222e222aaaaaaaaaaaaaaaaaeeaaaaaaaaaeeaeeaeabcbfffaacaaaaaaaaaaab83aaaaaa20780fff00000023ffffffffc00001ffffffffeaaaaaaaaa3a22222222222220
% 0000000001f000000a000c007c57d4555455545557f5545554ffffffffffff95fffd515554555455560d44440003807fff00000000ffffffff800001fffffffff0055455561c00000000000000
% aaaaaaaaaaaeaaaaadaaaaaaaaaaaaaaaaaaaaaaafaaaaaaafbfaaafbfbfab2affffa2aaaaaaaaaab87aaaaaaabc07bfff00000000ffffffff800001fffffffffaaaaaaaaaaeaaaaaaaaaaaaa0
% 00000000001a000003000a03755fd555555555555f555555ffffd555fffffe757fffc5555555555560d5110001c0383fff000000007fffffff000001ffffffff98011555550000000000000000
% 22a222a222a522a222a22aa2aaaaaaaaaaaaaaaaaeaaaaaeeaaaaaaaaeaeeabebfff8eeaaaaaaaab83aaaaaaae01c01fff000000003fffffff000001ffffffffc222aaaaaba222a222a222a220
% 000000000003c00001400a07c557c54545454545fd45455ff5454577fffffcff7fff7f3f454545460c444440701e001fff000000003ffffffe000001ffffffffe0004545450000000000000000
% aaaaaaaaaaaaaaaaab6aaaaeaaaaaaaaaaaaaaaafaaaaabaaaaaaafbebfbf9bfbfff81fffffaaab83aaaaaab80e0000fff800000001ffffffe000000ffffffffe002aaaaabaaaaaaaaaaaaaaa0
% 000000000000780000a0060fd57fd55555555557d55555fd55555ffd555553ffdf1c3fffffff5560d141001c0700000fff800000001ffffffe0000007ffffffef0000155550000000000000000
% 222222222222362222a2262aaaaaaaaaaaaaaaaeaaaaaaeaaaaaeeaaaaaaa6efffe3fffffffeab83aaaaaae03a200007ff800000000ffffffc0000003ffffffe30022aaaaaa222222222222220
% 0000000000000a000050061f55fd55545554555f555457d45555f5545554657fff0dfffffffe460c44444703c0000007ff800000000ffffffc0000003fffffff18000444558000000000000000
% aaaaaaaaaaaaadaaaacaadbaaaaaaaaaaaaaaaaeaaaabfaaaaaaaaaaaaaacaaffc72fffffffeb83aaaaab81ea8800007ffc000000007fffffc0000001fffffff08000aaaaaaaaaaaaaaaaaaaa0
% 00000000000002800028051f57f555555555555d55557d555575555555559557f1c47ffffffd20d11000e0600000003fffc000000007fffff80000001fffffff04000015554000000000000000
% a2a2a2a2a2a2a362a2a6a5aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9aaac78abffffffac3aaafef03a22220003fffc000000003fffff80000000fffffff020022aaaae2a2a2a2a2a2a2a0
% 00000000000000a00014053547e54545454545754545f54545c54545454525471f100fffffe70c45fff81c000000003fffc000000003fffff80000000fffffff80000005454000000000000000
% aaaaaaaaaaaaaadaaab6adaaaaaaaaaaaaaaaafaaaaaeaaaaaaaaaaaaaab2aac7e38abffffac3fffffc0eaa88880007fffc000000003fffff800000007ffffff800000aaaaeaaaaaaaaaaaaaa0
% 0000000000000028000a057d57d55555555555f55557d5555d55555555565551dc7801ffff30ffffff03fc000000007fffc000000001fffffc00000007ffffff80000000556000000000000000
% 222223ffe2222236222a23eaaaaaaaaaaaaaaaeaaaaaaaaaaaaaaaaaaaaaaaa2a87a22ffffc3fffff81ffff2220000ffffc000000000fffffc00000007ffffffc0000022aaa222222222222220
% 00000fcffe00000a000503fd5fd55455545557d554575455745554555454d4c550fc003fff8fffffe0ffffffe07807ffffc0000000007ffffe00000003ffffffc0000000546000000000000000
% aaaabeaabdeaaaadaaadabaaaaaaaaaaaaaaabaaaaaeaaaaaaaaaaaaaaadab1aa1fc0abffe3fffff07ffffffffffffffff80000000007fffff00000003ffffffe0000000aabaaaaaaaaaaaaaa0
% 0000200003300002800283fd5f55555555555555555f5555d55555555559563503fe000ff8fffffc1fffffffffffffffff80000000033fffff00000003ffffffe0000000155000000000000000
% 22a222a222ee22a362a2a6aaaaaaaaaaaaaaaaaaaaaeaaaaaaaaaaaaaab2ac6a86ff0227e3ffffe0ffffffffffffffffff800000000fffffff80000001fffffff00000002ab222a222a222a220
% 00000000001f8000a0014ff577454545454547454555454545454545455359c50d7f0003cfffff87ffffffffffffffffff8000000007ffffff80000021ffffe3f0000000055000000000000000
% aaaaaaaaaaaa6aaadaab7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a2ab1abf80831ffffc3fffffffffffffffffff0000000007ffffff80000039ffffe1f80000000abaaaaaaaaaaaaaa0
% 00000000000190004800b5f57d55555555555555557555555555555555654556355fc00c7ffff1fffffffffffffffffffe0000000007ffffffc000003cffffe0f8000000055800000000000000
% 2222222222226e222622aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac68aac6aafc031ffffc7fffffffffffffffffffe0000000003ffffffc000003effffe0780000000eaa22222222222220
% 0000001e00001b001200d5f47d545554555455545554555455545554444f1558557ffe467ffe3ffffffffffffffffffffc0000000703ffffffc000003ffffff03c0000000f5800000000000000
% aaaaabe1feaaacaaaaaaeaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa8a2ab0bf8001e83ff8fffffffffffffffffffff80000001fe1ffffffc000003ffffff00c0000000baaaaaaaaaaaaaaa0
% 00001f3ff38003600500f5f5fd55555555555555555555555555551511145121e07ffff81fc7fffffffffffffffffffff00000000ff9ffffff0000003ffffff006000000045800000000000000
% a2a2bea2af72a29aa2a3aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab18aaa707aaf8c01f1dffffffffffffffffffffe000000007ffffffff0000003ffffff80200000006aea2a2a2a2a2a2a0
% 0000600000ef00640143c5f5f5454545454545444445454545454444451144787d456300187e7fffffffffffffffffffe000000003ffffffff8000001ffffff800000000043c00000000000000
% aaaaaaaaaabceab3aaaeaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22ab87aaaa8f00e3ff0ffffffffffffffffffff000000000ffffffff8000001ffffff80000000006baaaaaaaaaaaaaa0
% 000000000003300c8057d5f5f55555555555555101155555555141010244061901571f830fff87fffffffffffffffffff0000000007fffffff8000001ffffffc00000000020800000000000000
% 222222222222ce226236aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa8ab86aaaac6fdc73ffc3fffffffffffffffffff8000000003fffffffc000000ffffffc00000000022222222222222220
% 0000000000003b01302fd4f7f4555455545554444445545554444444051061c44471d7e181ffe0fffffffffffffffffff8000000001fffffffc000000ffffffc00000000020000000000000000
% aaaaaaaaaaaaaeeacabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae2b866aaac6ab8e00ffe03ffffffffffffffffffc000000000fffffffc0000207fffffe0000000001aaaaaaaaaaaaaaa0
% 0000000000000130241f5577f55555555555151000005555551100000c26188001891e3000fff01ffffffffffffffffffe0000000f87ffffffc00003e7fffffe00000000010000000000000000
% 22a222a222a222ce3abaaaaaaaaaaaaaaaaaaaaaaaa2aaaaaaaaaaa2a8787122ae3ab1f803fff80fffffffffffffffffff0000000fe7ffffffe00007f7fffffe0000000001a222a222a222a220
% 000000000000003305974567e545454545444440400045454444400008e1a20008c4c67c07fff807ffffe007ffffffffff8000000fffffffffe00003fffffe0000000000018000000000000000
% aaaaaaaaaaaaaaacaa6aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab186c480b3ab1abc03fffc01fffe0000ffffffffffc000000fffffffffe00003fffffc000000000000aaaaaaaaaaaaaaa0
% 000000000000000261bf1577f55555555551110000000555510000002108880fc40ce17e03f0fc00ffe000001fffffffffe0000007fffffffff00001fffff80000000000008000000000000000
% 2222222222222223924aaaaaaaaaaaaaaaaaaaaaa2222aaaaaaaaa224233fff0fa73aabf01f810007f80000007fffffffff0000007fffffffff00001fffff8000000000000a222222222222220
% 00000000000002006c3e457775545554554444400007055444440000845e1ffff99c044f81f800000400000007fffffffffc000007fffffffff80000fffff80000000000004000000000000000
% aaaaaaaaaaaffdfabbbaaaaaaaaaaaaaaaaaaaaaaaae8aaaaaaaaaa908e1e2b9ae6aaaafc0fc00000000000007fffffffffe000000fffffffff80000fffff80000000000006aaaaaaaaaaaaaa0
% 00000000007fe7f7e49e0177f555555555100000001e0155000000010f1e40225b800003c03e00000000000007ffffffffff0000003ffffffffc00007ffff80000000000004000000000000000
% a2a2a2a2a3e2a2af1f7aaaaaaaaaaaaaaaaaaaa2223e22aaaaaaa22218e8a2cffffaa2a3f01f0000000000000fffffffffff00000007fffffffc00007ffff800000000000022a2a2a2a2a2a2a0
% 00000000038fffc0f3d64067c545454544444000003800444000000463091f3fffff8000f8078000000000000fffffffffff80000001fffffffc00003ffff80000000000002000000000000000
% aaaaaaaaaeffffbaae6aaaaaaaaaaaaaaaaaaaa888f000aaaaaaa8858cb3fcfffffff8a87c03c000000000000fffffffffff800000003ffffffe00003ffffc0000000000003aaaaaaaaaaaaaa0
% 0000000018f0007701de0177c155555551000000007000110000000e3027fbc00000ff801e01e000000000001ffffffcffffc000000007ffffff00001ffffc0000000000001000000000000000
% 2222222233a2222fe23aaaaaaaaaaaaaaaaaa22222e2002aaa222218d24ff60000002fe20f007800000000001fffff807fffc000000001ffffff80001ffffc0000000000001222222222222220
% 0000000002000000dc0e0067c44554544404000001c0000400000061239ff800000001f807803e00000000001fffff003fffe0000000003fffff80001ffffe0000000000000800000000000000
% aaaaaaaaaaaaaaaabbaaaaaaaaaaaaaaaaaaaa8801c0000aaa8880c73f2ba0000000001e03e01fc0000000003fffe6000ffff0000000000fffffc0001ffffe0000000000000aaaaaaaaaaaaaa0
% 0000000001ffff8006ce00338115151500000000038000000000018a7f6000000000000781e007f0000000003ffffffffffff0000000000fffffe0000ffffe0000000000000800000000000000
% 22a222a23efff87e23baa2aaaaaaaaaaaaa2a22223800002a22222367fe0000000000020e2f203fc000000003fc00000000ff0000000001fffffe0000ffffe000000a000000622a222a222a220
% 00000000ff0007c3e06f006384444444400000000700000000000c4cf700000000000000307801ffc000003fc000000000001e000000001ffffff0000ffffe0000000000000400000000000000
% aaaaaaabeaaaaabf1fbaa8aaaaaaaaaaaaaaa8800f000000a880b18dae0000000000000008be807fffffffc000000000000001e00000001ffffff8000ffffe0000002a000006aaaaaaaaaaaaa0
% 0000000700000000e0e7002380011100000000001f0000000000231f8600000000000000001e003fffffc0000007ffffffff00180000001ffffffc0007fffe0000000000000200000000000000
% 2222222e222222223e1ea22aaaaaaaaaaa2222203e0000002222c63ff9f0000000000000002f200ffff00003ffffc0000ffff8060000001ffffffc0007fffe0000000220000222222222222220
% 000000180000000001c5002300444444018000007e00000000010c7ffffc00000000000000078007ff0003fc1fffc0000fffffe18000003ffffffe0007fffe0000000000000200000000000000
% aaaaaabaaaaaaaaaaabe80aaaaaaaaaabff88001fc000000882a14fe000f000000000000002bea03e001fffc1fff80000ffff81e6000003fffffff0007fffe00000002a80002aaaaaaaaaaaaa0
% 00000020000000000000c00380000000fffc0003fc00000000042fe000038000000000000001f07c00fffffe0fff000007fff001d800007fffffff0003fffe0000000001c00200000000000000
% a2a2a2a2a2a2a2a2a2a2a023e2aaaabffaffa00ff800000022b85ba00000c00000000001ff02ff807ffffffe0fff000007ffe0003400007fffffff8003fffe00000000a3a001a2a2a2a2a2a2a0
% 000000000003fff800020002e0005ffe4445f07ff80000000030ee00000000000000001fff00f83fbffffffe07ff000007fe00000e00007fffffffc003fffe0000000002180100000000000000
% aaaaaaaaabfc6007feaaa00afeafffeaaaaaaffff000000002e3bea000000000000000ff801f0fe81ffffffc07ff80000ffe00000300007fffffffc003fffe000000002aac01aaaaaaaaaaaaa0
% 000000000fff9fff81f300067ffffc0000000001f00000000047f0000000000000000ff003e1ff0007fffffc07ff80000ffe0000018000ffffffc7c003fffc0000000002060100000000000000
% 222222227e2222227e0e8026bfffeaaaaaaaaaabe0000000028f2200000000000000ffe07c3e3fa203fffffc03ff80001ffc0000004000ffffffc1e003fffc0000000002230122222222222220
% 00000001b000000001fc00064444444444444447e000000001360000000000000007fc0787c00fc001fffff803ff80003ffc0000000000ffffffe07003fffc000000000200c100000000000000
% aaaaaaafeaaaaaaaaaaa0006aaaaaaaaaaaaaaafe0000000ae4c2a0000000000001feaf8f802afea80407ff801ffc000fffc0000000000ffffffe03001fffc000000000aaae1aaaaaaaaaaaaa0
% 0000000e0000000000000004000000000000000fc000000005b0000000000000007f879f000003f800003ff001ffc001fff80000000001ffffffe00801fffc0000000002003180000000000000
% 22a222ba22a222a222ae0006aaaaaaaaaaaaaaaf80000002aa60a0000000000003fefbe00000a3fea0003ff001ffee03fff80000000001fffffff00001fffc000000000122b922a222a222a220
% 000000300000000003f70004444044404440445f000000001d800000000000000ffffc00000001ff00001fe000ffff8ffff80000000001fffffff00001fffc0000000001000700000000000000
% aaaaaaeaaaaaaaaabffa0006aaaaaaaaaaaaaabe0000000ab3008000000000003fff80000000aaffaa003fe000ffffdffff80000000001fffffff00001fffc0000000001aaaaaaaaaaaaaaaaa0
% 0000004000000000f8020006000000000000007c000000006600000000000001fff00000000000ffe0003fc0007ffffffff80000000003fffffff00001fffc0000000001000000000000000000
% 222222a222222223e2220002aaaaaaaaaaaaabf800000022d80000000000000ffe2000000000227ff2003f80007ffffffff80000000003fffffff80002fffc0000000001222222222222222220
% 000000000000000f0002000344444444444447f000000007a00000000000003fe00000000000007ffc003f80003ffffffffc0000000003fffffff80000fffc0000000000800000000000000000
% aaaaaaaaaaaaaabeaaaa0003aaaaaaaaaaaaaff0000000aec0000000000001ffaa80000000000abfffffffffff3ffffffffc0000000003fffffff80000fffc0000000000aaaaaaaaaaaaaaaaa0
% 0000000000000030000200030000000000000f80000000050000000000001ffc0ffffffffffffff00000000000fffffffff80000000003fffffffc0000fffc0000000000800000000000000000
% a2a2a2a2a2a2a2e2a2a20001aaaaaaaaaaabff00000000be000000000000fffff003ffffffffffffffffff0000000003fff00000000007fffffffc0000fffc0000000000e2a2a2a2a2a2a2a2a0
% 00000000000000c000010001c4444444445ff0000000002800000000001ffffffffc00000003000fff0018fffffffe00000ff000000007ffff3ffc0000fffc0000000000400000000000000000
% aaaaaaaaaaaaaaaaaaab0001eaaaaaaaafff8000000003d800000000003ffeea0000000000070aefffaa000000ffffffe0000ff800000fffff07fc0000fffc00000000006aaaaaaaaaaaaaaaa0
% 0000000000000100003f0000e00000003fc00000000003e000000000007ff00000000000000601ffff80000000fffffffffc0007f8001fffff00fc0000fffc0000000000600000000000000000
% 222222222222222223cf0000eaaaaaabfc000000000003800000000001ffe22000000000000e03ffffa2000000ffffffe003ff8007f07fffff007c0000fffe0000000000222222222222222220
% 00000000000000001df1000074544447f0000000000001000000000003ffffffffc00000001c01ffff80000001fffffff800007f800fffffff000c0000fffc0000000000200000000000000000
% aaaaaaaaaaaaaaaafeab00003aaaaaab8000000000000000000000002fffffc0007fff00003803ffffea800001fff3fffe0000007e007fffff00040000fffea0000000003aaaaaaaaaaaaaaaa0
% 0000000000000003e00080003c1400078000000000000000000000003ff6003fffc000fffe7001ffffc0000001fff1ffff80000001f803ffff80000000fffc0000000000100000000000000000
% 22a222a222a222af22a280001eaaaaaf000000000000000000000000ffa2a000003fffc001fffeffbfe2a00001fff0ffffc000000007e03fff80000000fffca20000000012a222a222a222a220
% 0000000000000078000080001f4544473fe000000000000000000001fc0000000000003ffe0003ffffe0000001fff07fffc000000007ff87ff80000000fffc0000000000180000000000000000
% aaaaaaaaaaaaaabaaaaacc000eaaaaabfffe0000000000000000000bfffa0000000000002bfe00001feaa00001fff07fffc00000000ffff0ff80000000fffc2a800000000aaaaaaaaaaaaaaaa0
% 00000000000001c000004f0007515405ffffc000000000000000001fff8ffc00000000000f01ff00003fc00001fff03fffc00000000fffff0f80000000fffc0000000000080000000000000000
% 222222222222232222222f0003aaaaaaffffe000000000000000007e727fe3fc000000003e2002ff80003f8001fff03fffc00000001fffffe180000000fffc02200000000e2222222222222220
% 00000000000006000000200001d555557fffc00000000000000003f000001ff3f80000003f0000107fc0007f00fff03fffc00000003ffffffe60000000fffc0000000000040000000000000000
% aaaaaaaaaaaaaeaaaaaaf00800eaaaaabfff80000000000000001feaa800000ffff8000abff002aaafff0000f8fff03fffc00000003fffffffd8000000fffc00aa80000006aaaaaaaaaaaaaaa0
% 00000000000018000003300e007555555fff000000000000000001ff8000000007e7f000ffffc0000ff0fc0007fff03fffc00000007fffffffb4000000fffc0000000000060000000000000000
% a2a2a2a2a2a2b2a2a2adf80f003aaaaaaffe000000000000000023fe7f000000001f8fe3bfa7fea2aff2a3f0007ff03fffc0000000ffffffff8f000000fffc0002a0000002a2a2a2a2a2a2a2a0
% 0000000000003000007e080f001d757577fe00000000000000000001fcfc000000007e1fc0001fe00ff0000f8003f07fffc0000000ffffffff83c00000fffc0000000000020000000000000000
% aaaaaaaaaaaaeaaaabbaa800000eaaaaabfc00000000000000abeaa003ffe000000aabf83e8002ffaffaa8007e001effffc0000001ffffffff80e00000fffc0002aa000003aaaaaaaaaaaaaaa0
% 000000000000400006c004000007555555fc00000000000003c3e0000003df80000001ffc1f0000ffff0000001f001ffffc0000003ffffffff80300000fffc0000000000010000000000000000
% 22222222222222222b2224000003eaaaaaf800000000000223e3de0000003c7c00222ffffc0f8222fff22000000f000fff80000003ffffffff80080000fffc0000222000012222222222222220
% 00000000000000001c0004000001f555557000000000001e03b03f00000003e3c001f8ffffc07c000f7c00000007f001ff00000007ffffffff00040000fffc0000000000018000000000000000
% aaaaaaaaaaaaaaaafaaaac000000faaaaaf0000000003f1febfea3c00000001e3aafffaa0f7c03eaaff3a8000003ff007e0000000fffffffff00020000fffc00000aa80000aaaaaaaaaaaaaaa0
% 0000000000000000a000040000003d5555600000001e3fdf100e00f000000001c78fc0fc00f7c03c0ffe78000003fff00e0000001fffffffff00000001fffc0000000000008000000000000000
% 22a222a222a222a3e2a2240000001eaaaae00000001e1ce0ec03003e00000000387fffe3c00f3c03eff3e7000001ffff018000003fffffffff00000001fffc000000a28000e222a222a222a220
% 00000000000000030000062000000f7555400000001c00381201c00d800000000707001c3c00e3e03ff01cf00001fffff07000003fffffffff00000001fffc0000000000004000000000000000
% aaaaaaaaaaaaaaaeaaaaaa3c000007aaaa800000000000140900a00360000002bfe0e003c3fffc3e03faabce0000fffffc0e00007fffffffff000000c1fffc0000002aa0006aaaaaaaaaaaaaa0
% 000000000000000c0000023c000003d5558000000000000a0480500090000000ffdc38003c1ff387e0380039e000ffffe381c000fffffffffe000001f1fffc0000000000802000000000000000
% 222222222222223a22222200000001eaab8000000000000a024048004c000003fc3f8700ffc1fe60fe0720079c007fffe0703001fffffffffe000003fdfffc0000000222601222222222222220
% 000000000000001800000100000000fd5780000000000009024028003200001fffffe0dffff03e1c1fe0e00073c07fffc00e0801fffffc0ffe000003fffffc0000000000581800000000000000
% aaaaaaaaaaaaaabaaaaaab000000007fef8000000000000501202400098000ffaa01fc3ffffe07ab83fc1c000f3c7fffc001c603fffff807fc000003fffffc00000000aa6f0aaaaaaaaaaaaaa0
% 0000000000000070000001800000007fff0000000000000501201200064007f800003f87ffffc0e07073838000e3bfff80003187fffff001f8000003fffff8000000000020fc00000000000000
% a2a2a2a2a2a2a2e2a2a2a2800000003fff0000000000000500a0110001203fffa00007f1fffff81aae1ef060001c7fff80000c4fffffe000f8000003fffff80000000022a2a2a2a2a2a2a2a2a0
% 0000000000000060000000c00000001fff8000000000000500a009000099ff6078003ffe7fffff0703c38e1c0003c7ff8e00033fffffe00040000003fffff80000000000300000000000000000
% aaaaaaaaaaaaaaeaaaaaaac00000000fff80000000000005005008800067fefff701fead9fffffc0ebf071c3800078ff7f8000cfffffc00000000001fffff800000000029aaaaaaaaaaaaaaaa0
% 00000000000000400000006000000007ffc00000000000050050048001f3fc000ef3fdd767fffff81dfe0e306007ff8ffff80037ffffc00000000001fffff80000000000100000000000000000
% 22222222222222222222223000000007ffc00000000000050050047ffff8ffc001cfeaaaf9ffffff03f3c18e10fffff3ffff80ffffff800000000001fffff80000000002122222222222222220
% 00000000000000000000001800000003ffe00000000000060050027ff8e663f00031f7777e7fffffe0703871ccfffffe7fffffffffff800000000001fffff00000000000100000000000000000
% aaaaaaaaaaaaaaaaaaaaaaac00000003ffe000000000000a1f3f0e7feafd183e003c6aaaaf9ffffffc0e860c3bffffffcfffffffffff800000000000fffff00000000000baaaaaaaaaaaaaaaa0
% 00000000000000000000000300000003fff000000000000a1e2f8f27f803880d807f1d5555efffffe383818307fffffff9ffffffffff800000000000fffff00000000000200000000000000000
% 22a222a222a222a222a222a2f0000001fff000000000000a1c2f8f26aea2c40361eac6aaaafbfffff2e06070c0ffffffff3fffffffff000000000000fffff0000000000022a222a222a222a220
% 0000000000000000000000001f000001fff800000000000c002e009005003200dff771f7777dfffff81c180c303fffffffe7ffffffff0000000000007fffe00000000000200000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaabf00000fffc00000000000c001800900280190033aaac6aaaaf5ffffaab06038e0ffffffffeffffffff0000000000007fffe000000000003aaaaaaaaaaaaaaaa0
% 000000000000000000000000000f0000fffc0000000000180018005001400c8009d5d715d5dfe7fffc00c1806183ffffffffffffffff0000000000003fffe00000000000100000000000000000
% 2222222222222222222222222222f0007ffe00000000001800180050012006401c6aaaceaaabf9fffe2238701861bffffffffffffffe0000000000003fffe00000000000122222222222222220
% 00000000000000000000000000000f007fff0000000000180018004800a00320373777737777fe7ffe00060c07187ffffffffffffffc0000000000001fffc00000000000080000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaf83fff8000000000100018002800a002906a8aaaaceaabff8fffaa01c300c61ffffffffffff9f80000000000001fffc000000000000aaaaaaaaaaaaaaaa0
% 00000000000000000000000000000047cfffc000000000300018002800a00149d5655556355dfff3ff800030c0398ffffffffffff0f00000000000001fffc00000000000080000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a23fffe0000000002001ffffec00900127aab3aaab8aaaffbcffe0000e300667fffc1ffffff0000000000000000fffc0000000000006a2a2a2a2a2a2a2a0
% 0000000000000000000000000000002003fff800000000003ff800f7f89000937778f77767777fff3fc000018c0193fff80ffffffc000000000000000fffc00000000000040000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaab8889ffc0000000007fff888948b9f0089aaae6aaab9aaffffcfe8000063007cfff007ffff878000000000000007ffc0000000000006aaaaaaaaaaaaaaa0
% 000000000000000000000000000000100000fe00000003fffff8001405f7ffccd5d515d5d4ddffffe3e000001cc00f3ff003ffff00f000000000000007ffc00000000000020000000000000000
% 2222222222222222222222222222223222227fffffffffffbffa22362aaaaacaaaaa8eaaab2abffff8e00000033003dff003ffff001e00000000020003ffc00000000000022222222222222220
% 0000000000000000000000000000000800007ffffffffffe3ff8000c07b77767f7776377779f7ffffe30000000e800fff001fffe0003c0000000000003ffc00000000000030000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa88888e7ffdffffffc1ffc888a8aaaaaa6eaaab1aaaaeebfffff880000001e007ff0007ffe000078000000008001ffc0000000000001aaaaaaaaaaaaaaa0
% 00000000000000000000000000000004000021cffffffff81ffe000a0db55553755558d55553dfffffe60000000780fff0003ffe00000f000000000f01ffe00000000000010000000000000000
% 22a222a222a222a222a222a222a222a4222230e1e7e7a7f03ffe20262aeaaab2baaaac6aaabdaffffff980000001e0fff0000ffe000001e00000002f80ffe0000000000000a222a222a222a220
% 00000000000000000000000000000002000030c041c181f01fff00060f7777797f77773777767fffffe66000000039fff00007fe000000200000001fc0ffe00000000000008000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa8880b0a0a06040701ffe80060baaaaa9aeaaaa9aaabb2fffffe1980000000ffff00001f8000000000000001ff0ffe0000000000000aaaaaaaaaaaaaaa0
% 0000000000000000000000000000000200001890b0f0a0501fff800605d5d5ddd7d5d5cdd5dddfffffe06400000000fff0000070000000000000001ff87ff00000000000004000000000000000
% 2222222222222222222222222222222322221b10baf892881ffec20207aaaaadaaaaaaa6aabaafffffc01b000000007ff0000020000000000000000ffc7ff00000000000006222222222222220
% 000000000000000000000000000000008000190c9cfc90840fff60020777777cf777777377777fffffc006800000007ff8000000000000000000000ffe3ff00000000000004000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac00016031ffb84820ffea00207aaaaaaaaaaaaa9aabaadffffc001600000003ff8000000000000000000000fff3ff00000000020006aaaaaaaaaaaaaa0
% 00000000000000000000000000000000200012001ff803030fff50020755555ed5555554d55ddfffffc000d80000003ff8000000000000000000000fff9ff80000000000004000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a02028001ff80003affea82322aaaaaaaaaaaaaa6aaaabffffc000340000003ff8000000000000000000000fffdff800000000000062a2a2a2a2a2a2a0
% 00000000000000000000000000000000100008001ff00003cfff78010377777777777777367777ffffc0000f0000003ff8000000000000000000000fffeffc0000000000004000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa80008001ff00003effeac0002aaaaab6aaaaaaa9aaaabffff8000038000007ffc000000000000000000000ffffffc0000000002802aaaaaaaaaaaaaa0
% 00000000000000000000000000000000040004001ff00003ffffd60003d5d5dd55d5d111513dfdffff800000e00000fffc0000000000000000000007fffffe0000000000002000000000000000
% 22222222222222222222222222222222220004001ff00003fffeaa0002aaaaab6aaaaaaaaaaaaafdff800000380001fffc0000000000000000000007fffffe0000000000202222222222222220
% 00000000000000000000000000000000010004001ff00003ffff77000377777cc44444445c7777ffff8000000c0007fffc00000000000000000000e7ffffff0000000000004000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa8002001fe00003fffeaa8001aaaaaaaaaaaaaaaeaaaaffff00000003000ffffc00000000000000000000fbffffff0000000000aa6aaaaaaaaaaaaaa0
% 00000000000000000000000000000000008002001fe00001ffff5580015111f1b1111111135dddffff00000000003ffffe00000000000000000001ffffffff0000000000008000000000000000
% 22a222a222a222a222a222a222a222a222e022001fc00023fffeaae021aaaaaaeaaaaaaaabeaaaffff00000000003ffffe00000000000000000001ffffffff800000000022a222a222a222a220
% 0000000000000000000000000000000000a002001fc00001ffff7760014445c46444444444f777fffe00000000007ffffe00000000000000000001ffffffff8000000000008000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9001001fc000a1fffeaaa001aaaaaaeaaaaaaaaaeaaafffe00000000003ffffe00000000000000000001ffffffffc0000000000aaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000008c01001f800001ffffd5d0015113517151115111f155fffe00000000003ffffe00000000000000000001ffffffffc000000000004000000000000000
% 22222222222222222222222222222222228203001f800201fffeaab003aaaaaaaaaaaaaaaaaaabfffe00000000003fffff000000000000003c0001ffffffffe000000000026222222222222220
% 00000000000000000000000000000000008100803f000001ffff644801444e446444444444c445fffc00000000001fffffc00000000000003f0031ffffffffe000000000004000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa8080803f02a00bfffeaaa800aaaaaaaaaaaaaaaaaaabfffc00000000001fffffe00000000000003f807dfffffffff00000000000eaaaaaaaaaaaaaa0
% 00000000000000000000000000000000010040803e000001ffff111400911d1131111111115555fffc00000000001ffffff00000000000003fc07ffffffffff000000000006000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a30020407e020021ffffaaaa20aaaaaabaaaaaaaabaaabfff800000000003ffffff00000000000007ff0ffffffffeff0000000000022a2a2a2a2a2a2a0
% 00000000000000000000000000000000010010407c000001ffff444600c4744454444444454447fff80000000000fffffff80000000000007ff8ffffffffe7f800000000002000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab0008407ca80081ffffaaab00aaaaaaaaaaaaaaabaaabfff80000000007fffffffc0000000000007ff8ffffffffebf800000000002aaaaaaaaaaaaaa0
% 0000000000000000000000000000000001000620f8300001ffff91110091711111111111135557fff80000000007fffffffe0000000000007ffcffffffffe1f800000000002000000000000000
% 22222222222222222222222222222222230001e0fa700201ffffaaaa80aaaaaaaaaaaaaaaaaaaffff00000000003fffffffe000000000000fffffffffffff2fc00000000001222222222222220
% 0000000000000000000000000000000001000020e0f00001ffffc44440c4e44444444444464447fff00000000003fffffffe000000000000fffffffffffff07c00000000001000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab000001ebf0000bfffeaaaac1aaaaaaaaaaaaaaaaaaaffff00000000003ffffffff000000000001fffffffffffff29c00000000001aaaaaaaaaaaaaa0
% 000000000000000000000000000000000100000107f00001ffff91112111d1111111111115555fffe00000000001ffffffff000000000001fffffffffffff80c00000000001000000000000000
% 22a222a222a222a222a222a222a222a223000000bff000a1fffeeaaaa1aaaaaaaaaaaaaaaeaaafffe00000000001ffffffff800000020003fffffffffffffaa000000000001222a222a222a220
% 00000000000000000000000000000000020000007fe00001fffe44445147c4444444444444445fffe00000000001ffffffff800000000003fffffffffffff8000000000001b000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa000002ffe00281fffeeaaaa9aaaaaaaaaaaaaaaeaabfffe00000000003ffffffff800000008007fffffffffffffc2a0000000000eaaaaaaaaaaaaaa0
% 0000000000000000000000000000000002e00001ffe00000fffd715115531151115111511d515fffc00000000003ffffffff80000000000ffffffffffffffc0000000000008000000000000000
% 2222222222222222222222222222222227a00007ffc02000fffeaaaaaeaaaaaaaaaaaaaabaaabfffc00000000003ffffffffc0000000200ffffffffffffffc220000000000e222222222222220
% 0000000000000000000000000000000007600007ff000000fffc6444444744444444444454447fff800000000003ffffffffc0000000001ffffffffffffffc0000000000004000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaec000079ac0a000fffaaaaaaaaaaaaaaaaaaaaabaaabfff800000000003ffffffffc0000000283ffffffffffffffe0aa0000000006aaaaaaaaaaaaaa0
% 0000000000000000000000000000000018c0000c01800000fffd5111111311111111111135557fff800000000007ffffffffc0000000003ffffffffffffffe0000000000004000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2b2800008a7828000fffaaaaaaaaaaaaaaaaaaaaaeaaaffff000000000007ffffffffc0000000027ffffffffffffffe02a000000001e2a2a2a2a2a2a2a0
% 00000000000000000000000000000000018000000f038000fffc64444447444444444444c4447fff000000000007ffffffffc000000100ffffffffffffffff0000000000020000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab00000abe2f8002fffaaaaaaaaaaaaaaaaaaaabaaaaffff000000000007ffffffffc00000030bffffffffffffffff00aa00000001aaaaaaaaaaaaaaa0
% 00000000000000000000000000000000030000003e1f8000fff5711111171111111111135555fffe00000000000fffffffffc000000383ffffffffffffffff0000000000010000000000000000
% 22222222222222222222222222222222220000223e3f8022fffaaaaaaaaaaaaaaaaaaaaeaaabfffe00000000001fffffffffc0000003c7ffffffffffffffff0022000000012222222222222220
% 00000000000000000000000000000000020000007cff8000ffe46444444444444444445c4445fffe00000000007fffffffff80000007c7ffffffffffffffff8000000000010000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac0002a07bff8280ffeaaaaaaaaaaaaaaaaaaaeaaaabfffc0000000001ffffffffff80000007efffffffffffffffff800aa0000001aaaaaaaaaaaaaaa0
% 000000000000000000000000000000000400000077ff8000fff5711111111111111111f55557fffc0000000007ffffffffff8000000fffffffffffffffffff8000000000008000000000000000
% 22a222a222a222a222a222a222a222a2240002006fffa000ffeabaaaaaaaaaaaaaaaabaaaaabfffc000000001fffffffffff8000000fffffffffffffffffffc002a0000000a222a222a222a220
% 0000000000000000000000000000000004000000dffe0000ffc4544444444444444447744447fff8000000003fffffffffff8000001fffffffffffffffffffc000000000008000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac000801e1fa8000ffeabaaaaaaaaaaaaaaaaeaaaaaffff8000000007fffffffffff8000001fffffffffffffffefffc002aa000000aaaaaaaaaaaaaaa0
% 000000000000000000000000000000000800000381f08000ffd151511151115111511ff1555ffff800000000fffffff7ffff8000003fffffffffffffffc7ffc000000000004000000000000000
% 222222222222222222222222222222222800200001e3c002ffaabaaaaaaaaaaaaaaabaaaaaaffff000000000fffffff1ffff8000003fffffffffffffffc1ffe000220000006222222222222220
% 0000000000000000000000000000000008000000000fc000ffc44c444444444444447744444ffff000000000ffffffe0ffff8000003fffffffffffffffc0ffe000000000004000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa800600000bfe02affaaaaaaaaaaaaaaaaaaeaaaaabffff800000000ffffffc07fff8000007fffffffffffffffc07fe0002aa000006aaaaaaaaaaaaaa0
% 000000000000000000000000000000001001c000003fe000ff5559111111111111117d55555fffe000000001ffffff801fff8000007fffffffffffffffc07fe000000000002000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2b006800003fff2a2ffaaaeaaaaaaaaaaaaaaeaaaaabfffe000000003ffffff000fff800000ffffffffffffffffc03ff00002a0000022a2a2a2a2a2a2a0
% 000000000000000000000000000000001019000002ffe000fe444644444444444444f444447fffc000000003fffffe0007ff800000ffffffffffffffffc01ff000000000002000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab03b00002c3faaa0feaaaaaaaaaaaaaaaaaaaaaaaaffffe80000000ffffffc0003ff800001ffffffffffffffffc00ff00002aa00003aaaaaaaaaaaaaa0
% 0000000000000000000000000000000020620000021e0000ff555711111111111111fd55557fffc00000001ffffff00001ff800001ffffffffffffffff800ff000000000001000000000000000
% 2222222222222222222222222222222220e40000020a2381feaaabaaaaaaaaaaaaabaaaaaaffffa00000003fffff800000ff800001ffffffffffffffff8007f000002200001222222222222220
% 00000000000000000000000000000000230c000002040fc1fc4457c44444447c4447644444ffff80000000fffffe0000007f000003ffffffffffffffff8003f000000000001000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a800020203bfe1feaaaaeaaaaaaac6aaaaaaaaabffffa0000003fffff80000003f800003ffffffffffffffff8001f800002aa0000aaaaaaaaaaaaaa0
% 000000000000000000000000000000004c1000000100fff1fd557ff1111111431117d55555ffff0000000fffffe00000001f000007ffffffffffffffff0001f800000000000800000000000000
% 22a222a222a222a222a222a222a222a252b0000003207ff1faaaaaaaaaaaaae2aaaaaaaaabfffea000003fffff800000000e200007fffffffffffff7ff0000f8000022a0000a22a222a222a220
% 000000000000000000000000000000006030000001003ff3f4444774444444814457444447fffe0000003ffffc000000000000000ffffffffffffff3ff00003800000002000800000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaa000000a801ff3faaaaabaaaaaaa81aaeaaaaaaffffea000007ffff8000000000028000fffffffffffffe3fe00001800000aabe00aaaaaaaaaaaaaa0
% 0000000000000000000000000000000080200000004007fbf55155ff91517f81d7fd55515ffffc0000007fffe0000000000000001fffffffffffffe1fe00000c00000004300800000000000000
% 2222222222222222222222222222222222400000204003fbeaaaaaaaffbfab00baaaaaaaaffffe2000007fff80000000000002001fffffc0ffffffc1fe00000000000226380a22222222222220
% 00000000000000000000000000000000004000000020007fe444447777f77700f77644445ffff80000007ffe00000000000000003fffff803fffffc1fe000000000000040c0800000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac0000a8020001feaaaaaaaaaaaab00aaaaaaaabffffaa000007ffc00000000000002a03fffff000effff80fc000000000000a6ae0eaaaaaaaaaaaaa0
% 000000000000000000000000000000000080000000100007d55fffdffffffe007ffffd557ffff00000007ff800000000000000003ffffe00067fff80fc00000000000004030400000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a280002200082020faaaaaaaaaaaaa206aaaaaaabffff2a00000ffe000000000000000a07ffffe0002ffff00fc008000000000a6a286a2a2a2a2a2a2a0
% 0000000000000000000000000000000001800000000800000f74447777777600577744447fffe0000001ff8000000000000000007ffffc00003fff00fc00000000000004006c00000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab0002a00004000001eaaaaaaaaaac002aaaaaaaffffeaa00003ff0000aa8000000000aafffffc0000bffe007800000000000026aabaaaaaaaaaaaaaa0
% 000000000000000000000000000000000100000000040000001d55557ffffc0035555555ffffc0000007fe000000000000000000fffff800001ffe007800000000000004001000000000000000
% 2222222222222222222222222222222222004200000200000003aaaaaaaaac002aaaaaabffffe2200007fc000222200000000023fffff800003ffe007000000000000002222222222222222220
% 000000000000000000000000000000000200800038010000000044444776780014444445ffffc000000ff0000000000000000001fffff800000ffc007000000000000002000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01a001ec01000000002aaaaaaaa8001aaaaaabffffaaa0001fe0000aaaa8000000000bfffff000002ffa007000000000000002aaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000403000708008000000055555575f80015555557ffff0000001fc0000000000000000003ffffe0000007f0002000000000000002000000000000000000
% 22a222a222a222a222a222a222a222a2240f801e3800602020206aaaaaaab0202aaaaaaffffea2a0003f0000a2a2a28000000303ffffc0000007e280000000000000000122a222a222a222a220
% 000000000000000000000000000000000c1a0030100040000600c444444750000c44444ffffe0000003f00000000000000000787ffff80000003c0000000000000000001000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa83a00eaa000200009c0aaaaaaaaa0000aaaaabffffeaaa0007e0002aaaaaaa000001fc7ffff8000000baa800000000000000001aaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000086603006000100008315551575d60000d51557ffff80000007e00000000000000007fffffff0000000000000000000000000001000000000000000000
% 2222222222222222222222222222222230e40e22c0001a000a1aeaabaeeac2000aaaaafffffa222000fc0002222222200001fffffffe0000000222200000000000000000a22222222222222220
% 000000000000000000000000000000001184180180003c0008273566c41440000c4444fffff0000000f8000000000000000ffffffffe0000000000000000000000000000800000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab2a86aab00003e0008210e1a380e80000aaaaaffffeaaaa001f8000aaaaaaaaa80fffffffffc00000002aaa80000000200000006aaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000002c09800600007f00082102060c0300000d5555ffffe0000001f80000000000000ffffffffff80000000000000000000000000019800000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2babfa2ac00007fa0282122222423202026aaabffffe2a2a001f80022a2a0a2a3fffffffffbf800000000a2a00000000080000062e2a2a2a2a2a2a2a2a0
% 00000000000000000000000000000000701c001800007fc00421020204010000044447ffff80000001f8000001ffff7ffffffffc01f000000000000000000000000000c0400000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeabaaab3f0007ffffe718307040280000aaaafffffaaaa8003f800aaa7aaaaf1fffffc002be000000000aaaa00000000a0003faaeaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000004000007c1ef8fffd55dffdfdfe03800015557ffffe00000003f800003800000f00003e0001c00000000000000000000000002000000000000000000000
% 22222222222222222222222222222222a22222e223acfffeaaaaaaaaabcae000eaaafffffe22220003f80023e2222223e20063e023a00000000022220000000022002222222222222222222220
% 00000000000000000000000000000000000000000030ffffc444444444745e3f4444fffffc00000007f80003000000001800803001800000000000000000000000002000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae0ffeffeaaaaabffffabeaaaabfffffaaaaa8007f802aeaaaaaaaaac00aaa80ba0000000002aaa000000000a802aaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000000000c0ffe07fd557ffffffffff5557fffff000000007f800180000000004008006000000000000000000000000000fa000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a223007ffaabffffffffffffffffffffffe2a2a28007f802b222a222a2220122a302a00000000002a28000000002aae2a222a222a222a222a220
% 000000000000000000000000000000000000000006003ffe4440e45fffffffffffffffffc000000007f800c000000000030100018001ff000000000000000000000c6000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab8003fffaaaaaabfffffffffffffffffaaaaaa0007f80baaaaaaaaaaab03aaaae2a1aaf000000aaa8000000000a6aaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000300007fffffe00fffffffffffffffffe0000000007f8010000000000008600002002000f000000000000000000042000000000000000000000
% 2222222222222222222222222222222222222222400003fffffffffffffffffffffffffe2222220007f002222222222222ee222232222222f00002220000000000262222222222222222222220
% 00000000000000000000000000000000000000008000003ffffffffffffffffffffffff00000000007f006000000000000300000180200000e0000000000000000020000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab000200afffffffffffffffffffffffeaaaaaaa000ff02eaaaaaaaaaaaaaaaaaaa8a2aaaaab0002aaa0000000002aaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000000300000000ffffffffffffffffffffff80000000000ff01800000000000000000004020000018004000780000000020000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a6000002a207fffffffea2bffffffffea2a2a2a2000ff092a2a2a2a2a2a2a2a2a2a6a6a2a2a2ef86a2a6c000000002a2a2a2a2a2a2a2a2a2a2a0
% 000000000000000000000000000000000000000c000000000003ffc0000000007fff0000000000000fe030000000000000000000020400000038fa000c30000000020000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab8000002a000aa9aaaaaaaaaaaabaaaaaaaaaaaa000fc0aaaaaaaaaaaaaaaaaaaaab26aaaaaaaaabaa2ab80000000aaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000003000000000000000000000000000000000000000000f804000000000000000000001040000000001000806000000020000000000000000000000
% 2222222222222222222222222222222222222260000002000022022222202222222222002222200007806222222222222222222223a62222222223a20a23820000022222222222222222222220
% 00000000000000000000000000000000000000c0000000000000000000000000000000000000000000008000000000000000000000880000000000802800c00000020000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa8008000a0000280aaaaa800a2aaa0aaa800aaaa8000002aaaaaaaaaaaaaaaaaaaaaacaaaaaaaaaaaea7aaae0a00002aaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000100000000000000000000000000000000000000000000010000000000000000000000480000000000405800300000020000000000000000000000
% 22a222a222a222a222a222a222a222a222a2230020002000002002a2a28002002200a28002a2a000000122a222a222a222a222a222fa22a222a222e26aa23820000222a222a222a222a222a220
% 00000000000000000000000000000000000002000000000000000000000000000000000000000000000100000000000000000000003000000000002048000c0000020000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae00a000200000000a002a0000800200aa80002aa0000002aaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaa6aaaae2a0002aaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000400000000000000000000000000000000000000000000020000000000000000000000100000000000104000030000020000000000000000000000
% 2222222222222222222222222222222222222c0200000000000000000200000000002000000000000002222222222222222222222222222222222232a222230200022222222222222222222220
% 0000000000000000000000000000000000000800000000000000000000000000000000000000000000030000000000000000000000000000000000088000008000020000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa80280200000000080000a00000000002a80000000000001aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac2a002aaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000001080000000000000000000000000000000000000000000008000000000000000000000000000000000088000002000020000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2b78200200000002280000200000000000200000000001000e2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a4a2a2a2a2a002a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000001c8000000000000000000000000000000000000000001c004000000000000000000000000000000000050000001001840000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaba8a0080000802aa80000800000000000a00000000001e002aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaab8a9e6aaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000308000000000000000000000000000000000000000000b003000000000000000000000000000000000030000000801340000000000000000000000
% 2222222222222222222222222222222222222282000000200222000000000000000002000000000006c01222222222222222222222222222222222232222222c213e2222222222222222222220
% 00000000000000000000000000000000000040800000000000000000000000000000000000000000066010000000000000000000000000000000000100000004010c0000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa88020000200a8a000008000000008002800000000003b00aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaae29aeaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000800000000000000000000000000000000000000000010c0800000000000000000000000000000000000000000203040000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a002000080220000000000000002a002800000000300a606a222a222a222a222a222a222a222a222a222a222a222a622a222a222a222a222a220
% 00000000000000000000000000000000000000800000000000000000000000000000000000000003c0c30400000000000000000000000000000000000000000302000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab800000280220000000000000002a8008000000002b86a86aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab22aaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000b000000000000000000000000000000000000000030e20c200000000000000000000000000000000000000000104000000000000000000000000
% 22222222222222222222222222222222222222b00000020000000000000000000220000000000001a3b24322222222222222222222222222222222222222222386222222222222222222222220
% 00000000000000000000000000000000000000b000000000000000000000000000000000000003f880f02100000000000000000000000000000000000000000084000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae800000800800028002000000000080020000002ac6aaab1aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa86aaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000048000000000000000000000000000000000000020360001080000000000000000000000000000000000000000088000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2e80000200200002000200000028002002000000fa3f2a2a8a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a28aa2a2a2a2a2a2a2a2a2a2a2a0
% 00000000000000000000000000000000000000480000000000000000000000000000000000000b0078000cc0000000000000000000000000000000000000000058000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa8000820000000280000000002a00a000800000aaabaaaac6aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000008000000000000000000000000000000000000080004000240000000000000000000000000000000000000000050000000000000000000000000
% 2222222222222222222222222222222222222228002000000000200000000000200000000000062222222322222222222222222222222222222222222222222262222222222222222222222220
% 0000000000000000000000000000000000000008000000000000000000000000000000000000040000000120000000000000000000000000000000000000000020000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa800a800280000a00000000000a0000000000006aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000080000000000000000000000000000000000000200000000d0000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a802a000200000a0000000000020000000000002a222a222d222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000008000000000000000000000000000000000000030000000038000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa80a200820000080000080000028000000000001aaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000008038000000000000000000000000000000000018000000018000000000000000000000000000000000000000000000000000000000000000000
% 222222222222222222222222222222222222222826c00000000200000000000000000000000180a22222222e222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000008188000000000000000000000000000000001c0c00000000c000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa82a802002000a820000800000000000000001b06aaaaaaaaeaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000008410000000000000000000000000000000001182000000002000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a9a30020020002020000800000000000000001a622a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 000000000000000000000000000000000000000b010000000000000000000000000000000000831000000001000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaa00a00a00280a8000800020000020000100aadaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000008020000000000000000000000000000000100807800000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222260020220020020000000020000020000080a23a22222222222222222222222222222222222222222222222222222222222222222222222220
% 00000000000000000000000000000000000000000400000000000000000000000000000000c0800400000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac02802a00200a8002802020000020000060aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000040000000000000000000000000000000070800000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a2240280a000a002800280202000002000007062a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000040000000000000000000000000000000028400000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac0a80a80c800aa00280202800002800002c6aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000040000001400000000000000000000000026400000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222240202202400022002002020002022000023a22222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000040000004400000000000000002000000020000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac2a8aa0ec800aa80080a02a00602a00001aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000040380008800008000000000006000000010000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a4278281a80001e00002a0a200a02200000aa2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000041d1c03080006600000000000a000000008000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaacbb7e82aa000ea80202a0aa01a02a00000eaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000000461c6060800041000000000012000000004000000000000000000000000000000000000000000000000000000000000000000000000000000
% 222222222222222222222222222222222222222224e322062a0006320202202202202a000006222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000058002080800080800000000022018000002000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaafaaac1aaa000aaa000aa0aa06a03a800002aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000060004100800080000000000042014006002000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a226a224322a000aa60022a0a20aa0a680f80122a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000004200800080000000000082020018801000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac6aa8800aaa08afa2be1aa0ea81ac01aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000004c008800802000cc034102042020401000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222224a229800a23021ae260222062022401222222222222222222222222222222222222222222222222222222222222222222222222222220
% 000000000000000000000000000000000000000000000580098010018060c0c02020c1020201800000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadaaaac01aaa88eacba86aa0ab86aa00aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000007000a401000818043084020810c0300800000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a6a2a6c012a283a2c2a8a2a3a39aa300a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000440100083004610801101100100800000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01aaac2aaceb1aab2abaaab00aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000030100042008831001c01600080800000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222230122242229222222223e22280a22222222222222222222222222222222222222222222222222222222222222222222222222220
% 000000000000000000000000000000000000000000000000001810004200b022000001800080800000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa81aaaa2aaeac6aaaaabaaaac0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000000000000000000c10002200c044000000000070800000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a612a222a2e2ca22a222a222b0a2a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000003100024008088000000000010800000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab9aaaa6aaaa9aaaaaaaaaaab1aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000d00014000190000000000009000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222522236222322222222222229222222222222222222222222222222222222222222222222222222222222222222222222222220
% 000000000000000000000000000000000000000000000000000030001c000120000000000009000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaabaaaab6aaaaaaaaaaaa9aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000008000240000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2aaa2a2a2a2a2a2a2a2a5a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000280000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaafaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
%%EndImage
%%EndPreview
/InitDictCount countdictstack def
gsave
save
mark
newpath
/showpage {} def
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: Adobe Illustrator(TM) 1.2d4
%%For: OpenWindows Version 2
%%Title: tiger.eps
%%CreationDate: 4/12/90 3:20 AM
%%DocumentProcSets: Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets: Adobe_Illustrator_1.2d1 0 0
%%BoundingBox: 22 171 567 738
%%EndComments

%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0

/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
% graphic state operators
/_K { 3 index add neg dup 0 lt {pop 0} if 3 1 roll } bdef
/_k /setcmybcolor where {
    /setcmybcolor get
} {
    { 1 sub 4 1 roll _K _K _K setrgbcolor pop } bind
} ifelse def
/g {/_b xdef /p {_b setgray} def} bdef
/G {/_B xdef /P {_B setgray} def} bdef
/k {/_b xdef /_y xdef /_m xdef /_c xdef /p {_c _m _y _b _k} def} bdef
/K {/_B xdef /_Y xdef /_M xdef /_C xdef /P {_C _M _Y _B _k} def} bdef
/d /setdash ldef
/_i currentflat def
/i {dup 0 eq {pop _i} if setflat} bdef
/j /setlinejoin ldef
/J /setlinecap ldef
/M /setmiterlimit ldef
/w /setlinewidth ldef
% path construction operators
/_R {.25 sub round .25 add} bdef
/_r {transform _R exch _R exch itransform} bdef
/c {_r curveto} bdef
/C /c ldef
/v {currentpoint 6 2 roll _r curveto} bdef
/V /v ldef
/y {_r 2 copy curveto} bdef
/Y /y ldef
/l {_r lineto} bdef
/L /l ldef
/m {_r moveto} bdef
% path painting operators
/n /newpath ldef
/N /n ldef
/F {p fill} bdef
/f {closepath F} bdef
/S {P stroke} bdef
/s {closepath S} bdef
/B {gsave F grestore S} bdef
/b {closepath B} bdef
end
%%EndProcSet
%%EndProlog

%%Page: 1 1

Adobe_Illustrator_1.2d1 begin

.8 setgray
%clippath fill
-110 -300 translate
1.1 dup scale

0 g
0 G
0 i
0 J
0 j
0.172 w
10 M
[]0 d
0 0 0 0 k

177.696 715.715 m
177.797 713.821 176.973 713.84 v
176.149 713.859 159.695 761.934 139.167 759.691 C
156.95 767.044 177.696 715.715 V
b
181.226 718.738 m
180.677 716.922 179.908 717.221 v
179.14 717.519 180.023 768.325 159.957 773.199 C
179.18 774.063 181.226 718.738 V
b
208.716 676.41 m
210.352 675.45 209.882 674.773 v
209.411 674.096 160.237 686.898 150.782 668.541 C
154.461 687.428 208.716 676.41 V
b
205.907 666.199 m
207.763 665.803 207.529 665.012 v
207.296 664.221 156.593 660.879 153.403 640.478 C
150.945 659.563 205.907 666.199 V
b
201.696 671.724 m
203.474 671.061 203.128 670.313 v
202.782 669.565 152.134 673.654 146.002 653.936 C
146.354 673.175 201.696 671.724 V
b
190.991 689.928 m
192.299 688.554 191.66 688.033 v
191.021 687.512 147.278 713.366 133.131 698.324 C
141.872 715.467 190.991 689.928 V
b
183.446 685.737 m
184.902 684.52 184.326 683.929 v
183.75 683.339 137.362 704.078 125.008 687.531 C
131.753 705.553 183.446 685.737 V
b
180.846 681.665 m
182.454 680.657 181.964 679.994 v
181.474 679.331 132.692 693.554 122.709 675.478 C
126.934 694.251 180.846 681.665 V
b
191.58 681.051 m
192.702 679.52 192.001 679.085 v
191.3 678.65 151.231 709.898 135.273 696.793 C
146.138 712.674 191.58 681.051 V
b
171.8 710 m
172.4 708.2 171.6 708 v
170.8 707.8 142.2 749.8 122.999 742.2 C
138.2 754 171.8 710 V
b
172.495 703.021 m
173.47 701.392 172.731 701.025 v
171.993 700.657 135.008 735.501 117.899 723.939 C
130.196 738.739 172.495 703.021 V
b
172.38 698.651 m
173.502 697.12 172.801 696.685 v
172.1 696.251 132.031 727.498 116.073 714.393 C
126.938 730.274 172.38 698.651 V
b
0 J 1 w
170.17 696.935 m
170.673 690.887 171.661 684.318 173.4 681.199 C
169.8 668.799 178.6 655.599 V
178.2 648.399 179.8 645.199 V
183.8 636.799 188.6 635.999 v
192.484 635.352 201.207 632.283 211.068 630.879 c
228.2 616.799 225 603.999 V
224.6 587.599 221 585.999 V
232.6 597.199 223 580.399 V
218.6 561.599 l
244.2 583.199 228.6 564.799 V
218.6 538.799 l
238.2 557.199 231 548.799 V
227.8 539.999 l
271 567.199 240.2 537.599 V
248.2 541.199 252.6 538.399 V
259.4 539.599 258.6 537.999 V
237.8 527.599 234.2 509.199 V
242.6 519.199 239.4 508.399 V
239.8 496.799 l
243.8 518.399 243.4 480.799 V
262.6 498.799 251 477.999 V
251 461.199 l
266.2 477.599 259.8 464.799 V
269.8 473.599 265.8 458.399 V
265 447.999 269.4 459.199 V
285.4 489.799 279.4 463.599 V
278.6 444.399 283.4 459.199 V
283.8 448.799 293 441.599 V
291.8 492.399 304.6 456.399 V
308.6 439.999 l
311.4 449.199 311 454.399 V
325.8 470.799 319 446.399 V
334.2 469.199 331 455.999 V
323.4 439.999 325 435.199 V
341.8 469.999 343 471.599 V
341 429.198 351.8 465.199 V
357.4 453.199 354.6 448.799 V
362.6 456.799 361.8 459.999 V
366.4 468.199 369.2 454.599 V
371 445.199 372.6 448.399 V
376.6 424.398 377.8 447.199 V
379.4 460.799 372.2 472.399 V
373 475.599 370.2 479.599 v
383.8 457.999 376.6 486.799 V
387.801 478.799 389.001 478.799 V
375.4 501.999 384.2 497.199 V
379 507.599 397.001 495.599 V
381 511.599 398.601 501.999 V
406.601 495.599 399.001 505.599 V
384.6 521.599 406.601 503.599 V
418.201 487.199 419.001 484.399 V
409.001 513.599 404.601 516.399 V
413.001 552.799 454.201 537.199 V
461.001 519.999 465.401 538.399 V
478.201 544.799 489.401 517.199 V
493.401 530.799 492.601 533.599 V
499.401 532.399 498.601 533.599 V
511.801 529.199 513.001 529.999 V
519.801 523.199 520.201 526.799 V
529.401 523.999 527.401 527.599 V
536.201 511.999 536.601 508.399 V
539.001 522.399 l
541.001 519.599 l
542.601 527.199 541.801 528.399 v
541.001 529.599 561.801 521.599 566.601 500.799 C
568.601 492.399 l
574.601 507.199 573.001 511.199 V
578.201 510.399 578.601 505.999 V
582.601 529.199 577.801 535.199 V
582.201 535.999 583.401 532.399 V
583.401 539.599 l
590.601 538.799 590.601 541.199 V
595.001 545.199 597.001 540.399 V
584.601 575.599 603.001 556.399 V
610.201 545.599 606.601 564.399 v
603.001 583.199 599.001 584.799 603.801 585.199 C
604.601 588.799 602.601 590.399 v
600.601 591.999 603.801 590.399 y
608.601 586.399 603.401 608.399 V
609.801 606.799 597.801 635.999 V
600.601 638.399 596.601 646.799 V
604.601 642.399 607.401 643.999 V
607.001 645.599 603.801 649.599 V
582.201 704.4 602.601 682.399 V
614.451 668.849 608.051 691.649 V
598.94 715.659 599.717 719.955 V
170.17 696.935 l
b
0.2 0.55 0.85 0 k
599.717 719.755 m
600.345 719.574 602.551 718.45 603.801 716.8 C
610.601 706 605.401 724.4 V
596.201 753.2 605.001 742 V
611.001 734.8 607.801 748.4 v
603.936 764.827 601.401 771.2 y
613.001 766.4 586.201 806 V
595.001 802.4 l
575.401 842 553.801 847.2 V
545.801 853.2 l
584.201 891.2 571.401 928 V
564.601 933.2 555.001 924 V
548.601 919.2 542.601 920.8 V
511.801 919.6 509.801 919.6 v
507.801 919.6 473.001 956.8 407.401 939.2 C
402.201 937.2 397.801 938.4 V
379.4 954.4 330.6 931.6 v
320.6 929.6 319 929.6 v
317.4 929.6 314.6 929.6 306.6 923.2 c
298.6 916.8 298.2 916 296.2 914.4 C
279.8 903.2 275 902.4 V
263.4 896 259 886 V
255.4 884.8 l
253.8 877.6 253.4 876.4 V
248.6 872.8 247.8 867.2 V
239 861.2 239.4 856.8 V
237.8 851.6 237 846.8 V
229.8 842 230.6 839.2 V
223 825.2 224.2 818.4 V
217.8 818.8 215 816.4 V
214.2 811.6 212.6 811.2 V
209.8 810 212.2 806 V
210.6 803.2 210.2 801.6 V
211 798.8 206.6 793.2 V
200.2 774.4 202.2 769.2 V
202.6 764.4 199.8 762.8 V
196.2 763.2 204.6 751.2 V
205.4 750 202.2 747.6 V
185 744 182.6 727.6 V
169 712.8 169 707.6 v
169 705.295 169.271 702.148 169.97 697.535 C
169.4 689.199 197 688.399 v
224.6 687.599 599.717 719.755 Y
b
184.4 697.4 m
159.4 736.8 173.8 680.399 Y
182.6 645.999 312.2 683.599 y
481.001 714 492.201 718 v
503.401 722 598.601 715.6 y
593.001 732.4 L
528.201 778.8 509.001 755.6 495.401 759.6 c
481.801 763.6 484.201 754 481.001 753.2 c
477.801 752.4 438.601 777.2 432.201 776.4 c
425.801 775.6 400.459 799.351 415.401 767.6 c
431.401 733.6 357 728.4 340.2 739.6 c
323.4 750.8 347.4 721.2 Y
365.8 701.2 331.4 718 y
297 730.8 273 705.2 269.8 704.4 c
266.6 703.6 261.8 700.4 261 706.8 c
260.2 713.2 252.69 729.901 221 703.6 c
201 686.999 187.2 709 Y
184.4 697.4 L
f
0.09 0.5 0.772 0 k
433.51 774.654 m
427.11 773.854 401.743 797.593 416.71 765.854 c
433.31 730.654 358.31 726.654 341.51 737.854 c
324.709 749.054 348.71 719.454 Y
367.11 699.454 332.709 716.254 y
298.309 729.054 274.309 703.454 271.109 702.654 c
267.909 701.854 263.109 698.654 262.309 705.054 c
261.509 711.454 254.13 727.988 222.309 701.854 c
201.073 684.508 187.582 705.963 Y
184.382 695.854 L
159.382 735.654 174.454 677.345 Y
183.255 642.944 313.509 681.854 y
482.31 712.254 493.51 716.254 v
504.71 720.254 599.038 713.927 y
593.51 731.236 L
528.71 777.636 510.31 753.854 496.71 757.854 c
483.11 761.854 485.51 752.254 482.31 751.454 c
479.11 750.654 439.91 775.454 433.51 774.654 c
f
0.081 0.45 0.695 0 k
434.819 772.909 m
428.419 772.109 403.685 796.138 418.019 764.109 c
434.219 727.908 359.619 724.908 342.819 736.108 c
326.019 747.308 350.019 717.708 Y
368.419 697.708 334.019 714.508 y
299.619 727.308 275.618 701.708 272.418 700.908 c
269.218 700.108 264.418 696.908 263.618 703.308 c
262.818 709.708 255.57 726.075 223.618 700.108 c
201.145 682.017 187.964 702.926 Y
184.364 694.308 L
160.564 733.308 175.109 674.29 Y
183.909 639.89 314.819 680.108 y
483.619 710.508 494.819 714.508 v
506.019 718.508 599.474 712.254 y
594.02 730.072 L
529.219 776.472 511.619 752.109 498.019 756.109 c
484.419 760.109 486.819 750.509 483.619 749.708 c
480.419 748.908 441.219 773.709 434.819 772.909 c
f
0.072 0.4 0.618 0 k
436.128 771.163 m
429.728 770.363 404.999 794.395 419.328 762.363 c
436.128 724.807 360.394 723.518 344.128 734.363 c
327.328 745.563 351.328 715.963 Y
369.728 695.963 335.328 712.763 y
300.928 725.563 276.928 699.963 273.728 699.163 c
270.528 698.363 265.728 695.163 264.928 701.563 c
264.128 707.963 257.011 724.161 224.927 698.363 c
201.218 679.526 188.345 699.89 Y
184.345 692.763 L
162.545 729.563 175.764 671.235 Y
184.564 636.835 316.128 678.363 y
484.928 708.763 496.129 712.763 v
507.329 716.763 599.911 710.581 y
594.529 728.908 L
529.729 775.309 512.929 750.363 499.329 754.363 c
485.728 758.363 488.128 748.763 484.928 747.963 c
481.728 747.163 442.528 771.963 436.128 771.163 c
f
0.063 0.35 0.54 0 k
437.438 769.417 m
431.037 768.617 406.814 792.871 420.637 760.617 c
437.438 721.417 362.237 721.417 345.437 732.617 c
328.637 743.817 352.637 714.217 Y
371.037 694.217 336.637 711.017 y
302.237 723.817 278.237 698.217 275.037 697.417 c
271.837 696.617 267.037 693.417 266.237 699.817 c
265.437 706.217 258.452 722.248 226.237 696.617 c
201.291 677.035 188.727 696.854 Y
184.327 691.217 L
164.527 726.018 176.418 668.181 Y
185.218 633.78 317.437 676.617 y
486.238 707.017 497.438 711.017 v
508.638 715.017 600.347 708.908 y
595.038 727.745 L
530.238 774.145 514.238 748.617 500.638 752.617 c
487.038 756.617 489.438 747.017 486.238 746.217 c
483.038 745.417 443.838 770.217 437.438 769.417 c
f
0.054 0.3 0.463 0 k
438.747 767.672 m
432.347 766.872 406.383 790.323 421.947 758.872 c
441.147 720.072 363.546 719.672 346.746 730.872 c
329.946 742.072 353.946 712.472 Y
372.346 692.472 337.946 709.272 y
303.546 722.072 279.546 696.472 276.346 695.672 c
273.146 694.872 268.346 691.672 267.546 698.072 c
266.746 704.472 259.892 720.335 227.546 694.872 c
201.364 674.544 189.109 693.817 Y
184.309 689.672 L
166.309 722.872 177.073 665.126 Y
185.873 630.726 318.746 674.872 y
487.547 705.272 498.747 709.272 v
509.947 713.272 600.783 707.236 y
595.547 726.581 L
530.747 772.981 515.547 746.872 501.947 750.872 c
488.347 754.872 490.747 745.272 487.547 744.472 c
484.347 743.672 445.147 768.472 438.747 767.672 c
f
0.045 0.25 0.386 0 k
440.056 765.927 m
433.655 765.127 407.313 788.387 423.255 757.127 c
443.656 717.126 364.855 717.926 348.055 729.126 c
331.255 740.326 355.255 710.726 Y
373.655 690.726 339.255 707.526 y
304.855 720.326 280.855 694.726 277.655 693.926 c
274.455 693.126 269.655 689.926 268.855 696.326 c
268.055 702.726 261.332 718.422 228.855 693.126 c
201.436 672.053 189.491 690.781 Y
184.291 688.126 L
168.291 718.326 177.727 662.071 Y
186.527 627.671 320.055 673.126 y
488.856 703.526 500.056 707.526 v
511.256 711.526 601.22 705.563 y
596.056 725.417 L
531.256 771.817 516.856 745.126 503.256 749.126 c
489.656 753.127 492.056 743.526 488.856 742.726 c
485.656 741.926 446.456 766.727 440.056 765.927 c
f
0.036 0.2 0.309 0 k
441.365 764.181 m
434.965 763.381 407.523 786.056 424.565 755.381 c
446.565 715.781 366.164 716.181 349.364 727.381 c
332.564 738.581 356.564 708.981 Y
374.964 688.981 340.564 705.781 y
306.164 718.581 282.164 692.981 278.964 692.181 c
275.764 691.381 270.964 688.181 270.164 694.581 c
269.364 700.981 262.773 716.508 230.164 691.381 c
201.509 669.562 189.873 687.744 Y
184.273 686.581 L
169.872 714.981 178.382 659.017 Y
187.182 624.616 321.364 671.381 y
490.165 701.781 501.365 705.781 v
512.565 709.781 601.656 703.89 y
596.565 724.254 L
531.765 770.654 518.165 743.381 504.565 747.381 c
490.965 751.381 493.365 741.781 490.165 740.981 c
486.965 740.181 447.765 764.981 441.365 764.181 c
f
0.027 0.15 0.231 0 k
442.674 762.435 m
436.274 761.635 408.832 784.311 425.874 753.635 c
447.874 714.035 367.474 714.435 350.674 725.635 c
333.874 736.835 357.874 707.235 Y
376.274 687.235 341.874 704.035 y
307.473 716.835 283.473 691.235 280.273 690.435 c
277.073 689.635 272.273 686.435 271.473 692.835 c
270.673 699.235 264.214 714.595 231.473 689.635 c
201.582 667.071 190.255 684.707 Y
184.255 685.035 L
170.654 711.436 179.037 655.962 Y
187.837 621.562 322.673 669.635 y
491.474 700.035 502.674 704.035 v
513.874 708.035 602.093 702.217 y
597.075 723.09 L
532.274 769.49 519.474 741.635 505.874 745.635 c
492.274 749.635 494.674 740.035 491.474 739.235 c
488.274 738.435 449.074 763.235 442.674 762.435 c
f
0.018 0.1 0.154 0 k
443.983 760.69 m
437.583 759.89 410.529 782.777 427.183 751.89 c
449.183 711.09 368.783 712.69 351.983 723.89 c
335.183 735.09 359.183 705.49 Y
377.583 685.49 343.183 702.29 y
308.783 715.09 284.783 689.49 281.583 688.69 c
278.382 687.89 273.582 684.69 272.782 691.09 c
271.982 697.49 265.654 712.682 232.782 687.89 c
201.655 664.58 190.637 681.671 Y
184.236 683.49 L
171.236 707.49 179.691 652.907 Y
188.491 618.507 323.983 667.89 y
492.783 698.29 503.983 702.29 v
515.183 706.29 602.529 700.544 y
597.583 721.926 L
532.783 768.327 520.783 739.89 507.183 743.89 c
493.583 747.89 495.983 738.29 492.783 737.49 c
489.583 736.69 450.383 761.49 443.983 760.69 c
f
0.009 0.05 0.077 0 k
445.292 758.945 m
438.892 758.145 412.917 781.589 428.492 750.145 c
449.692 707.344 370.092 710.944 353.292 722.144 c
336.492 733.344 360.492 703.744 Y
378.892 683.744 344.492 700.544 y
310.092 713.344 286.092 687.744 282.892 686.944 c
279.692 686.144 274.892 682.944 274.092 689.344 c
273.292 695.744 267.095 710.768 234.092 686.144 c
201.727 662.089 191.018 678.635 Y
184.218 681.944 L
171.418 705.144 180.346 649.853 Y
189.146 615.453 325.292 666.144 y
494.093 696.544 505.293 700.544 v
516.493 704.544 602.965 698.872 y
598.093 720.763 L
533.292 767.163 522.093 738.144 508.493 742.144 c
494.893 746.145 497.293 736.544 494.093 735.744 c
490.892 734.944 451.692 759.745 445.292 758.945 c
f
1 g
184.2 680.399 m
171.4 702.4 181 646.799 Y
189.8 612.399 326.6 664.399 y
495.401 694.8 506.601 698.8 v
517.801 702.8 603.401 697.2 y
598.601 719.6 L
533.801 766 523.401 736.4 509.801 740.4 c
496.201 744.4 498.601 734.8 495.401 734 c
492.201 733.2 453.001 758 446.601 757.2 c
440.201 756.4 414.981 780.207 429.801 748.4 c
452.028 700.693 369.041 710.773 354.6 720.4 c
337.8 731.6 361.8 702 Y
380.2 681.999 345.8 698.8 y
311.4 711.6 287.4 685.999 284.2 685.199 c
281 684.399 276.2 681.199 275.4 687.599 c
274.6 694 268.535 708.856 235.4 684.399 c
201.8 659.599 191.4 675.599 Y
184.2 680.399 L
f
0 g
225.8 650.399 m
218.6 638.799 239.4 625.599 V
240.8 624.199 222.8 628.399 V
216.6 630.399 215 640.799 V
210.2 645.199 205.4 650.799 v
200.6 656.399 225.8 650.399 y
f
0.8 g
365.8 698 m
383.498 671.179 382.9 666.399 v
381.6 655.999 381.4 646.399 384.6 642.399 c
387.801 638.399 396.601 605.199 y
396.201 603.999 408.601 641.999 V
420.201 657.999 400.201 676.399 V
365 705.2 365.8 698 v
f
0 g
1 J 0.1 w
245.8 623.599 m
257 616.399 242.6 585.199 V
249 587.599 l
248.2 576.399 245 573.999 V
252.2 577.199 l
257 569.199 253 564.399 V
269.8 556.399 269 549.999 V
275.4 557.999 271.4 564.399 v
267.4 570.799 260.2 566.799 261 585.199 C
252.2 581.999 l
257.8 590.799 257.8 597.199 V
249.8 594.799 l
265.269 621.377 254.6 622.799 v
248.6 623.599 245.8 623.599 Y
f
0.8 g
278.2 606.799 m
281 611.199 278.2 610.399 v
275.4 609.599 244.2 594.799 238.2 585.199 C
272.6 609.599 278.2 606.799 V
f
288.6 598.799 m
291.4 603.199 288.6 602.399 v
285.8 601.599 254.6 586.799 248.6 577.199 C
283 601.599 288.6 598.799 V
f
301.8 613.999 m
304.6 618.399 301.8 617.599 v
299 616.799 267.8 601.999 261.8 592.399 C
296.2 616.799 301.8 613.999 V
f
278.6 570.399 m
278.6 576.399 275.8 575.599 v
273 574.799 237 557.199 231 547.599 C
273 573.199 278.6 570.399 V
f
279.8 581.199 m
281 585.999 278.2 585.199 V
276.2 585.199 249.8 573.599 243.8 563.999 C
273.4 585.599 279.8 581.199 V
f
265.4 533.599 m
255.4 525.999 l
265.8 533.599 269.4 532.399 V
262.6 521.199 261.8 515.999 V
272.2 528.799 277.8 528.399 V
285.4 527.999 285.4 517.199 V
291 527.599 294.2 527.199 V
295.4 520.799 294.2 513.999 V
298.2 521.599 302.2 519.999 V
308.6 521.999 307.8 510.399 V
307.8 499.999 307 497.199 V
312.6 523.599 315 523.999 V
323 525.199 327.8 516.399 V
323.8 523.999 328.6 521.999 V
339.4 520.399 342.6 513.599 V
335.8 525.599 341.4 522.399 V
348.2 522.399 349.4 515.999 V
357.8 494.799 359.8 493.199 V
352.2 514.799 353.8 514.799 V
351.8 526.799 357 511.999 V
353.8 525.999 359.4 525.199 v
365 524.399 369.4 514.399 377.8 516.799 C
387.401 511.199 389.401 580.399 V
265.4 533.599 L
f
0 g
0 J 1 w
270.2 626.399 m
285 632.399 325 626.399 V
332.2 625.999 339 634.799 v
345.8 643.599 372.6 650.799 379 648.799 C
388.601 642.399 l
389.401 641.199 l
401.801 630.799 402.201 623.199 v
402.601 615.599 387.801 567.599 378.2 551.599 c
368.6 535.599 359 523.199 339.8 525.599 C
319 529.599 293.4 525.599 v
264.2 527.199 261.4 535.199 v
258.6 543.199 272.6 558.399 y
277 566.799 275.8 581.199 v
274.6 595.599 275 623.599 270.2 626.399 c
f
0.1 0.6 0.45 0 k
292.2 624.399 m
300.6 605.999 271 540.799 y
269 539.199 283.66 533.154 293.8 535.599 c
304.746 538.237 345 533.999 Y
368.6 549.599 381.4 593.999 y
391.801 617.999 374.2 621.199 v
356.6 624.399 292.2 624.399 y
f
0.1 0.6 0.45 0.2 k
290.169 593.503 m
293.495 606.293 295.079 618.094 292.2 624.399 c
354.6 617.999 365.8 638.799 v
370.041 646.674 384.801 615.999 384.4 606.399 c
321.4 591.999 306.6 603.199 V
290.169 593.503 L
f
0.1 0.6 0.45 0.25 k
294.6 577.199 m
296.6 569.999 294.2 565.999 V
292.6 565.199 291.4 564.799 V
292.6 561.199 298.6 559.599 V
300.6 555.199 303 554.799 v
305.4 554.399 310.2 548.799 314.2 549.999 c
318.2 551.199 329.4 555.199 y
335 558.399 343.8 554.799 V
346.175 555.601 346.6 559.599 v
347.1 564.299 350.2 567.999 352.2 569.999 c
354.2 571.999 363.8 584.799 362.6 585.199 c
361.4 585.599 294.6 577.199 Y
f
0 0.55 0.5 0 k
290.2 625.599 m
287.4 603.199 290.6 594.799 v
293.8 586.399 293 584.399 292.2 580.399 c
291.4 576.399 295.8 566.399 301.4 560.399 C
313.4 558.799 l
328.6 562.399 337.8 559.599 V
346.794 558.256 350.2 573.199 V
355 579.599 362.2 582.399 v
369.4 585.199 376.6 626.799 372.6 634.799 c
368.6 642.799 354.2 647.199 338.2 631.599 c
322.2 615.999 320.2 632.799 290.2 625.599 C
b
0 0 0.2 0 k
0.5 w
291.8 550.799 m
291 552.799 286.6 553.199 V
264.2 556.799 255.8 569.199 V
249 574.799 253.4 563.199 V
263.8 542.799 270.6 539.999 V
287 535.999 291.8 550.799 V
b
0 0.55 0.5 0.2 k
1 w
371.742 614.771 m
372.401 622.677 374.354 631.291 372.6 634.799 c
366.154 647.693 349.181 642.305 338.2 631.599 c
322.2 615.999 320.2 632.799 290.2 625.599 C
288.455 611.636 289.295 601.624 v
326.6 613.199 327.4 607.599 V
329 610.799 338.2 610.799 v
347.4 610.799 370.142 611.971 371.742 614.771 C
f
0 g
0 0.55 0.5 0.35 K
2 w
328.6 624.799 m
333.4 619.999 329.8 610.399 V
315.4 594.399 317.4 580.399 v
S
0 0 0.2 0 k
0 G
0.5 w
280.6 539.999 m
276.2 552.799 285 545.999 V
289.8 543.999 288.6 542.399 v
287.4 540.799 281.8 536.799 280.6 539.999 C
b
285.64 538.799 m
282.12 549.039 289.16 543.599 V
293.581 541.151 292.04 540.719 v
287.48 539.439 292.04 536.879 285.64 538.799 C
b
290.44 538.799 m
286.92 549.039 293.96 543.599 V
298.335 541.289 296.84 540.719 v
293.48 539.439 296.84 536.879 290.44 538.799 C
b
297.04 538.599 m
293.52 548.839 300.56 543.399 V
304.943 541.067 303.441 540.519 v
300.48 539.439 303.441 536.679 297.04 538.599 C
b
303.52 538.679 m
300 548.919 307.041 543.479 V
310.881 541.879 309.921 540.599 v
308.961 539.319 309.921 536.759 303.52 538.679 C
b
310.2 537.999 m
305.4 550.399 314.6 543.999 V
319.4 541.999 318.2 540.399 v
317 538.799 318.2 535.599 310.2 537.999 C
b
0 g
0.1 0.6 0.45 0.25 K
2 w
281.8 555.199 m
295 557.999 301 554.799 V
307 553.599 308.2 553.999 v
309.4 554.399 312.6 554.799 y
S
315.8 546.399 m
327.8 559.999 339.8 555.599 v
346.816 553.026 345.8 556.399 346.6 559.199 c
347.4 561.999 347.6 566.199 352.6 569.199 c
S
0 0 0.2 0 k
0 G
0.5 w
333 562.399 m
329 573.199 326.2 560.399 v
323.4 547.599 320.2 543.999 318.6 541.199 C
318.6 535.999 327 536.399 V
337.8 536.799 338.2 539.599 v
338.6 542.399 337 553.999 333 562.399 C
b
0 g
0.1 0.6 0.45 0.25 K
2 w
347 555.199 m
350.6 557.599 353 556.399 v
S
353.5 571.599 m
356.4 576.499 361.2 577.299 v
S
0.7 g
0 G
1 w
274.2 534.799 m
292.2 531.599 296.6 533.199 V
305.4 533.199 297 531.199 V
284.2 531.199 276.2 532.399 V
264.6 537.999 274.2 534.799 V
f
0 0 0.2 0 k
0.5 w
288.2 627.999 m
305.8 627.999 307.8 627.199 V
315 596.399 311.4 588.799 V
310.2 585.999 307.4 591.599 V
289 624.399 285.8 626.399 v
282.6 628.399 287 627.999 288.2 627.999 C
b
211.1 630.699 m
220 628.999 232.6 626.399 V
237.4 603.999 240.6 599.199 v
243.8 594.399 240.2 594.399 236.6 597.199 c
233 599.999 218.2 613.999 216.2 618.399 c
214.2 622.799 211.1 630.699 y
b
232.961 626.182 m
238.761 624.634 239.77 622.419 v
240.778 620.205 238.568 616.908 y
237.568 613.603 236.366 615.765 v
235.164 617.928 232.292 625.588 232.961 626.182 c
b
0 g
233 626.399 m
236.6 621.199 240.2 621.199 v
243.8 621.199 244.182 621.612 247 620.999 c
251.6 619.999 251.2 621.999 257.8 620.799 c
260.44 620.319 263 621.199 265.8 619.999 c
268.6 618.799 271.8 619.599 273 621.599 c
274.2 623.599 279 627.799 Y
266.2 625.999 263.4 625.199 V
241 623.999 233 626.399 V
f
0 0 0.2 0 k
277.6 626.199 m
271.15 622.699 270.75 620.299 v
270.35 617.899 276 614.199 y
278.75 609.599 279.35 611.999 v
279.95 614.399 278.4 625.799 277.6 626.199 c
b
240.115 620.735 m
247.122 609.547 247.339 620.758 V
247.896 622.016 246.136 622.038 v
240.061 622.114 241.582 626.216 240.115 620.735 C
b
247.293 620.486 m
255.214 609.299 254.578 620.579 V
254.585 620.911 252.832 621.064 v
248.085 621.478 248.43 625.996 247.293 620.486 C
b
254.506 620.478 m
262.466 609.85 261.797 619.516 V
261.916 620.749 260.262 621.05 v
256.37 621.756 256.159 625.005 254.506 620.478 C
b
261.382 620.398 m
269.282 608.837 269.63 618.618 V
271.274 619.996 269.528 620.218 v
263.71 620.958 264.508 625.412 261.382 620.398 C
b
0 0 0.2 0.1 k
225.208 616.868 m
217.55 618.399 l
214.95 623.399 212.85 629.549 y
219.2 628.549 231.7 625.749 V
232.576 622.431 234.048 616.636 v
225.208 616.868 l
f
290.276 621.53 m
288.61 624.036 287.293 625.794 286.643 626.2 c
283.63 628.083 287.773 627.706 288.902 627.706 C
305.473 627.706 307.356 626.953 V
307.88 624.711 308.564 621.32 V
298.476 623.33 290.276 621.53 V
f
0.2 0.55 0.85 0 k
1 w
343.88 759.679 m
371.601 755.719 397.121 791.359 398.881 801.04 c
400.641 810.72 390.521 822.6 Y
391.841 825.68 387.001 839.76 381.721 849 c
376.441 858.24 360.54 857.266 343 858.24 c
327.16 859.12 308.68 835.8 307.36 834.04 c
306.04 832.28 312.2 793.999 313.52 788.279 c
314.84 782.559 312.2 756.159 y
346.44 765.259 316.16 763.639 343.88 759.679 c
f
0.08 0.44 0.68 0 k
308.088 833.392 m
306.792 831.664 312.84 794.079 314.136 788.463 c
315.432 782.847 312.84 756.927 y
345.512 765.807 316.728 764.271 343.944 760.383 c
371.161 756.495 396.217 791.487 397.945 800.992 c
399.673 810.496 389.737 822.16 Y
391.033 825.184 386.281 839.008 381.097 848.08 c
375.913 857.152 360.302 856.195 343.08 857.152 c
327.528 858.016 309.384 835.12 308.088 833.392 c
f
0.06 0.33 0.51 0 k
308.816 832.744 m
307.544 831.048 313.48 794.159 314.752 788.647 c
316.024 783.135 313.48 757.695 y
344.884 766.855 317.296 764.903 344.008 761.087 c
370.721 757.271 395.313 791.615 397.009 800.944 c
398.705 810.272 388.953 821.72 Y
390.225 824.688 385.561 838.256 380.473 847.16 c
375.385 856.064 360.063 855.125 343.16 856.064 c
327.896 856.912 310.088 834.44 308.816 832.744 c
f
0.04 0.22 0.34 0 k
309.544 832.096 m
308.296 830.432 314.12 794.239 315.368 788.831 c
316.616 783.423 314.12 758.463 y
343.556 767.503 317.864 765.535 344.072 761.791 c
370.281 758.047 394.409 791.743 396.073 800.895 c
397.737 810.048 388.169 821.28 Y
389.417 824.192 384.841 837.504 379.849 846.24 c
374.857 854.976 359.824 854.055 343.24 854.976 c
328.264 855.808 310.792 833.76 309.544 832.096 c
f
0.02 0.11 0.17 0 k
310.272 831.448 m
309.048 829.816 314.76 794.319 315.984 789.015 c
317.208 783.711 314.76 759.231 y
342.628 768.151 318.432 766.167 344.136 762.495 c
369.841 758.823 393.505 791.871 395.137 800.848 c
396.769 809.824 387.385 820.84 Y
388.609 823.696 384.121 836.752 379.225 845.32 c
374.329 853.888 359.585 852.985 343.32 853.888 c
328.632 854.704 311.496 833.08 310.272 831.448 c
f
1 g
344.2 763.2 m
369.4 759.6 392.601 792 394.201 800.8 c
395.801 809.6 386.601 820.4 Y
387.801 823.2 383.4 836 378.6 844.4 c
373.8 852.8 359.346 851.914 343.4 852.8 c
329 853.6 312.2 832.4 311 830.8 c
309.8 829.2 315.4 794.4 316.6 789.2 c
317.8 784 315.4 760 y
340.9 768.6 319 766.8 344.2 763.2 c
f
0.8 g
390.601 797.2 m
362.8 789.6 351.2 791.2 V
335.4 797.8 326.6 776 V
323 768.8 321 766.8 v
319 764.8 390.601 797.2 Y
f
0 g
394.401 799.4 m
365.4 787.2 355.4 787.6 v
339 792.2 330.6 777.6 V
322.2 768.4 319 766.8 V
318.6 765.2 325 769.2 V
335.4 764 l
350.2 754.4 359.8 770.4 V
363.8 781.6 363.8 783.6 v
363.8 785.6 385 791.2 386.601 791.6 c
388.201 792 394.801 796.2 394.401 799.4 C
f
0.4 0.2 0.8 0 k
347 763.486 m
340.128 763.486 331.755 767.351 331.755 773.6 c
331.755 779.848 340.128 786.113 347 786.113 c
353.874 786.113 359.446 781.048 359.446 774.8 c
359.446 768.551 353.874 763.486 347 763.486 c
f
0.4 0.2 0.8 0.2 k
343.377 780.17 m
338.531 779.448 333.442 777.945 333.514 778.161 c
335.054 782.78 341.415 786.113 347 786.113 c
351.296 786.113 355.084 784.135 357.32 781.125 c
352.004 781.455 343.377 780.17 v
f
1 g
355.4 780.4 m
351 783.6 351 781.4 V
354.6 777 355.4 780.4 V
f
0 g
345.4 772.274 m
342.901 772.274 340.875 774.3 340.875 776.8 c
340.875 779.299 342.901 781.325 345.4 781.325 c
347.9 781.325 349.926 779.299 349.926 776.8 c
349.926 774.3 347.9 772.274 345.4 772.274 c
f
0.2 0.55 0.85 0 k
241.4 785.6 m
238.2 806.8 240.6 811.2 V
251.4 821.2 251 824.8 V
250.6 842.8 249.4 843.6 v
248.2 844.4 240.6 850.4 234.6 844 C
224.2 826 225 819.6 V
225 817.6 l
217.4 818 215.8 816 V
214.6 810.8 213.4 810.4 V
210.6 808 212.6 805.2 V
210.6 802.8 211 798.8 V
218.6 794.8 L
220.6 780.4 231.4 775.2 v
236.236 772.871 239.4 779.6 241.4 785.6 c
f
1 g
240.4 787.44 m
237.52 806.52 239.68 810.48 V
249.4 819.48 249.04 822.72 V
248.68 838.92 247.6 839.64 v
246.52 840.36 239.68 845.76 234.28 840 C
224.92 823.8 225.64 818.04 V
225.64 816.24 l
218.8 816.6 217.36 814.8 V
216.28 810.12 215.2 809.76 V
212.68 807.6 214.48 805.08 V
212.68 802.92 213.04 799.32 V
219.88 795.72 L
221.68 782.76 231.4 778.08 v
235.752 775.985 238.6 782.04 240.4 787.44 c
f
0.075 0.412 0.637 0 k
248.95 842.61 m
247.86 843.47 240.37 849.24 234.52 843 C
224.38 825.45 225.16 819.21 V
225.16 817.26 l
217.75 817.65 216.19 815.7 V
215.02 810.63 213.85 810.24 V
211.12 807.9 213.07 805.17 V
211.12 802.83 211.51 798.93 V
218.92 795.03 L
220.87 780.99 231.4 775.92 v
236.114 773.65 239.2 780.21 241.15 786.06 c
238.03 806.73 240.37 811.02 V
250.9 820.77 250.51 824.28 V
250.12 841.83 248.95 842.61 V
f
0.05 0.275 0.425 0 k
248.5 841.62 m
247.52 842.54 240.14 848.08 234.44 842 C
224.56 824.9 225.32 818.82 V
225.32 816.92 l
218.1 817.3 216.58 815.4 V
215.44 810.46 214.3 810.08 V
211.64 807.8 213.54 805.14 V
211.64 802.86 212.02 799.06 V
219.24 795.26 L
221.14 781.58 231.4 776.64 v
235.994 774.428 239 780.82 240.9 786.52 c
237.86 806.66 240.14 810.84 V
250.4 820.34 250.02 823.76 V
249.64 840.86 248.5 841.62 V
f
0.025 0.137 0.212 0 k
248.05 840.63 m
247.18 841.61 239.91 846.92 234.36 841 C
224.74 824.35 225.48 818.43 V
225.48 816.58 l
218.45 816.95 216.97 815.1 V
215.86 810.29 214.75 809.92 V
212.16 807.7 214.01 805.11 V
212.16 802.89 212.53 799.19 V
219.56 795.49 L
221.41 782.17 231.4 777.36 v
235.873 775.206 238.8 781.43 240.65 786.98 c
237.69 806.59 239.91 810.66 V
249.9 819.91 249.53 823.24 V
249.16 839.89 248.05 840.63 V
f
1 g
240.4 787.54 m
237.52 806.52 239.68 810.48 V
249.4 819.48 249.04 822.72 V
248.68 838.92 247.6 839.64 V
246.84 840.68 239.68 845.76 234.28 840 C
224.92 823.8 225.64 818.04 V
225.64 816.24 l
218.8 816.6 217.36 814.8 V
216.28 810.12 215.2 809.76 V
212.68 807.6 214.48 805.08 V
212.68 802.92 213.04 799.32 V
219.88 795.72 L
221.68 782.76 231.4 778.08 v
235.752 775.985 238.6 782.14 240.4 787.54 c
f
0.8 g
237.3 793.8 m
215.7 804 214.8 804.8 V
223.9 796.6 224.7 796.6 v
225.5 796.6 237.3 793.8 Y
f
0 g
220.2 800 m
238.6 796.4 238.6 792 v
238.6 789.088 238.357 775.669 233 777.2 c
224.6 779.6 228.2 794 220.2 800 c
f
0.4 0.2 0.8 0 k
228.6 796.2 m
237.578 794.726 238.6 792 v
239.2 790.4 239.863 782.092 234.4 781 c
229.848 780.089 227.618 790.31 228.6 796.2 c
f
0 g
314.595 753.651 m
314.098 755.393 315.409 755.262 317.2 755.8 c
319.2 756.4 331.4 760.2 332.2 762.8 c
333 765.4 346.2 761 Y
348 760.2 352.4 757.6 Y
357.2 756.4 363.8 756 Y
366.2 755 369.6 752.2 Y
384.2 742 396.601 749.2 Y
416.601 755.8 410.601 773 Y
407.601 782 410.801 785.4 Y
411.001 789.2 418.201 782.8 Y
420.801 778.6 421.601 773.6 Y
429.601 762.4 426.201 780.2 Y
426.401 781.2 423.601 784.8 423.601 786 c
423.601 787.2 421.801 790.6 Y
418.801 794 421.201 801 Y
423.001 814.8 420.801 813 Y
419.601 814.8 410.401 804.8 Y
408.201 801.4 402.201 799.8 Y
399.401 798 396.001 799.4 Y
393.401 799.8 387.801 792.8 Y
390.601 793 393.001 788.6 395.401 788.4 c
397.801 788.2 399.601 790.8 401.201 791.4 c
402.801 792 405.601 786.2 Y
406.001 783.6 400.401 778.8 Y
400.001 774.2 398.401 775.8 Y
395.401 776.4 394.201 772.6 393.201 768 c
392.201 763.4 388.001 763 y
386.401 755.6 385.2 758.6 Y
385 764.2 379 758.4 Y
377.8 756.4 373.2 758.6 Y
366.4 760.6 368.8 762.6 Y
370.6 764.8 381.8 762.6 Y
384 764.2 376 768.2 Y
375.4 770 376.4 774.4 Y
377.6 777.6 384.4 783.2 Y
393.801 784.4 391.001 786 Y
384.801 791.2 379 783.6 Y
376.8 777.4 359.4 762.4 Y
354.6 759 357.2 765.8 353.2 762.4 c
349.2 759 328.6 768 y
317.038 769.193 314.306 753.451 310.777 756.571 c
316.195 748.051 314.595 753.651 v
f
509.401 920 m
483.801 912 481.001 893.2 V
478.601 870.4 499.001 852.8 V
499.401 846.4 501.401 843.2 v
499.801 838.4 518.601 846 V
545.801 854.4 l
552.201 856.8 557.401 865.6 v
562.601 874.4 577.801 893.2 574.201 918.4 C
575.401 929.6 569.401 930 V
561.001 931.6 553.801 924 V
547.001 920.8 544.601 921.2 V
509.401 920 L
f
564.022 920.99 m
566.122 929.92 561.282 925.08 V
554.242 919.36 546.761 919.36 V
532.241 917.16 527.841 903.96 V
523.881 877.12 531.801 871.4 V
536.641 863.92 543.681 870.52 v
550.722 877.12 566.222 907.35 564.022 920.99 C
f
0.2 g
563.648 920.632 m
565.738 929.376 560.986 924.624 V
554.074 919.008 546.729 919.008 V
532.473 916.848 528.153 903.888 V
524.265 877.536 532.041 871.92 V
536.793 864.576 543.705 871.056 v
550.618 877.536 565.808 907.24 563.648 920.632 C
f
0.4 g
563.274 920.274 m
565.354 928.832 560.69 924.168 V
553.906 918.656 546.697 918.656 V
532.705 916.536 528.465 903.816 V
524.649 877.952 532.281 872.44 V
536.945 865.232 543.729 871.592 v
550.514 877.952 565.394 907.13 563.274 920.274 C
f
0.6 g
562.9 919.916 m
564.97 928.288 560.394 923.712 V
553.738 918.304 546.665 918.304 V
532.937 916.224 528.777 903.744 V
525.033 878.368 532.521 872.96 V
537.097 865.888 543.753 872.128 v
550.41 878.368 564.98 907.02 562.9 919.916 C
f
0.8 g
562.526 919.558 m
564.586 927.744 560.098 923.256 V
553.569 917.952 546.633 917.952 V
533.169 915.912 529.089 903.672 V
525.417 878.784 532.761 873.48 V
537.249 866.544 543.777 872.664 v
550.305 878.784 564.566 906.91 562.526 919.558 C
f
1 g
562.151 919.2 m
564.201 927.2 559.801 922.8 V
553.401 917.6 546.601 917.6 V
533.401 915.6 529.401 903.6 V
525.801 879.2 533.001 874 V
537.401 867.2 543.801 873.2 v
550.201 879.2 564.151 906.8 562.151 919.2 C
f
0.1 0.55 0.85 0.3 k
350.6 716 m
330.2 735.2 322.2 736 V
287.8 740 273 722 V
290.6 742.4 318.2 736.8 V
296.6 741.2 284.2 738 V
267.4 738 257.8 724 V
255 719.2 l
259 734 277.4 740 V
300.2 744.8 311 740 V
289.4 746.8 279.4 744.8 V
249 747.2 236.2 720.8 V
240.2 735.2 255 742.4 V
268.6 751.2 289 748.4 V
303.4 745.2 308.6 742.8 v
313.8 740.4 312.6 743.2 304.2 748 C
298.6 758 284.6 757.6 V
241.8 754 231.4 742 V
245 753.2 255.4 756 V
277.8 764 286.2 763.2 V
311 762.2 318.6 766.2 V
307.4 761.2 310.6 758 v
313.8 754.8 320.6 747.2 320.6 746 c
320.6 744.8 344.8 722.7 348.4 718.3 C
350.6 716 l
f
0.8 g
1 J 0.1 w
489 522 m
473.5 558.5 461 568 V
487 552 490.5 534 V
490.5 524 489 522 V
f
536 514.5 m
509.5 569.5 491 593.5 V
534.5 556 539.5 529.5 V
540 524 l
537 526.5 l
536.5 517.5 536 514.5 V
f
592.5 563 m
530 622.5 528.5 625 V
589 559 592 551.5 V
590 560.5 592.5 563 V
f
404 519.5 m
423.5 571.5 442.5 549 V
457.5 539 457 536 V
453 542.5 435 542 V
416 545 404 519.5 V
f
594.5 647 m
549.5 675.5 542 677 v
530.193 679.361 591.5 648 596.5 637.5 C
598.5 640 594.5 647 V
f
0 g
0 J 1 w
443.801 540.399 m
464.201 542.399 471.001 549.199 V
475.401 545.599 l
493.001 583.999 l
496.601 578.799 l
511.001 593.599 510.201 601.599 v
509.401 609.599 523.001 595.599 y
522.201 607.199 529.401 600.399 V
527.001 615.999 535.401 607.999 V
524.864 638.156 547.401 612.399 v
553.001 605.999 548.601 612.799 y
522.601 660.799 544.201 646.399 v
546.201 669.199 545.001 673.599 v
543.801 677.999 541.801 700.4 537.001 705.6 c
532.201 710.8 537.401 712.4 543.001 707.2 C
531.801 731.2 545.001 719.2 V
541.401 734.4 537.001 737.2 V
531.401 754.4 546.601 743.6 V
542.201 756 539.001 759.2 V
527.401 786.8 534.601 782 V
539.001 778.4 l
532.201 792.4 538.601 788 v
545.001 783.6 545.001 784 y
523.801 817.2 544.201 799.6 V
536.042 813.518 532.601 820.4 V
513.801 840.8 528.201 834.4 V
533.001 832.8 l
524.201 842.8 516.201 844.4 v
508.201 846 518.601 852.4 525.001 850.4 c
531.401 848.4 547.001 840.8 y
559.801 822 563.801 821.6 V
543.801 829.2 549.801 821.2 V
564.201 807.2 557.001 807.6 V
551.001 800.4 555.801 791.6 V
537.342 809.991 552.201 784.4 v
559.001 768 l
534.601 792.8 545.801 770.8 V
563.001 747.2 565.001 746.8 v
567.001 746.4 571.401 737.6 y
567.001 739.6 l
572.201 730.8 l
561.001 742.8 567.001 729.6 V
572.601 715.2 l
552.201 737.2 565.801 707.6 V
549.401 712.8 558.201 695.6 V
556.601 679.599 557.001 674.399 v
557.401 669.199 558.601 640.799 554.201 632.799 c
549.801 624.799 560.201 605.599 562.201 601.599 c
564.201 597.599 567.801 586.799 559.001 595.999 c
550.201 605.199 554.601 599.599 556.601 590.799 c
558.601 581.999 564.601 566.399 563.801 560.799 C
562.601 559.599 559.401 563.199 V
544.601 585.999 546.201 571.599 V
545.001 563.599 541.801 554.799 V
538.601 543.999 538.601 552.799 V
535.401 569.599 532.601 561.999 v
529.801 554.399 526.201 548.399 523.401 545.999 c
520.601 543.599 515.401 566.399 514.201 555.999 C
502.201 568.399 497.401 551.999 V
485.801 535.599 l
485.401 547.999 484.201 541.999 V
454.201 535.999 443.801 540.399 V
f
409.401 897.2 m
397.801 905.2 393.801 904.8 v
389.801 904.4 421.401 913.6 462.601 886 C
467.401 883.2 471.001 883.6 V
474.201 881.2 471.401 877.6 V
462.601 868 473.801 856.8 V
492.201 850 486.601 858.8 V
497.401 854.8 499.801 850.8 v
502.201 846.8 501.001 850.8 y
494.601 858 488.601 863.2 V
483.401 865.2 480.601 873.6 v
477.801 882 475.401 892 479.801 895.2 C
475.801 890.8 476.601 894.8 v
477.401 898.8 481.001 902.4 482.601 902.8 c
484.201 903.2 500.601 919 507.401 919.4 C
498.201 918 495.201 919 v
492.201 920 465.601 931.4 459.601 932.6 C
442.801 939.2 454.801 937.2 V
490.601 933.4 508.801 920.2 V
501.601 928.6 483.201 935.6 V
461.001 948.2 425.801 943.2 V
408.001 940 400.201 938.2 V
397.601 938.8 397.001 939.2 v
396.401 939.6 384.6 948.6 357 941.6 C
340 937 331.4 932.2 V
316.2 931 312.6 927.8 V
294 913.2 292 912.4 v
290 911.6 278.6 904 277.8 903.6 C
302.4 910.2 304.8 912.6 v
307.2 915 324.6 917.6 327 916.2 c
329.4 914.8 337.8 915.4 328.2 914.8 C
403.801 900 404.601 898 v
405.401 896 409.401 897.2 y
f
0.2 0.55 0.85 0 k
480.801 906.4 m
470.601 913.8 468.601 913.8 v
466.601 913.8 454.201 924 450.001 923.6 c
445.801 923.2 433.601 933.2 406.201 925 C
405.601 927 409.201 927.8 V
415.601 930 416.001 930.6 V
436.201 934.8 443.401 931.2 V
452.601 928.6 458.801 922.4 V
470.001 919.2 473.201 920.2 V
482.001 918 482.401 916.2 V
488.201 913.2 486.401 910.6 V
486.801 909 480.801 906.4 V
f
468.33 908.509 m
469.137 907.877 470.156 907.779 470.761 906.97 c
470.995 906.656 470.706 906.33 470.391 906.233 c
469.348 905.916 468.292 906.486 467.15 905.898 c
466.748 905.691 466.106 905.873 465.553 906.022 c
463.921 906.463 462.092 906.488 460.401 905.8 C
458.416 906.929 456.056 906.345 453.975 907.346 c
453.917 907.373 453.695 907.027 453.621 907.054 c
450.575 908.199 446.832 907.916 444.401 910.2 C
441.973 910.612 439.616 911.074 437.188 911.754 c
435.37 912.263 433.961 913.252 432.341 914.084 c
430.964 914.792 429.507 915.314 427.973 915.686 c
426.11 916.138 424.279 916.026 422.386 916.546 c
422.293 916.571 422.101 916.227 422.019 916.254 c
421.695 916.362 421.405 916.945 421.234 916.892 c
419.553 916.37 418.065 917.342 416.401 917 C
415.223 918.224 413.495 917.979 411.949 918.421 c
408.985 919.269 405.831 917.999 402.801 919 C
406.914 920.842 411.601 919.61 415.663 921.679 c
417.991 922.865 420.653 921.763 423.223 922.523 c
423.71 922.667 424.401 922.869 424.801 922.2 C
424.935 922.335 425.117 922.574 425.175 922.546 c
427.625 921.389 429.94 920.115 432.422 919.049 c
432.763 918.903 433.295 919.135 433.547 918.933 c
435.067 917.717 437.01 917.82 438.401 916.6 C
440.099 917.102 441.892 916.722 443.621 917.346 c
443.698 917.373 443.932 917.032 443.965 917.054 c
445.095 917.802 446.25 917.531 447.142 917.227 c
447.48 917.112 448.143 916.865 448.448 916.791 c
449.574 916.515 450.43 916.035 451.609 915.852 c
451.723 915.834 451.908 916.174 451.98 916.146 c
453.103 915.708 454.145 915.764 454.801 914.6 C
454.936 914.735 455.101 914.973 455.183 914.946 c
456.21 914.608 456.859 913.853 457.96 913.612 c
458.445 913.506 459.057 912.88 459.633 912.704 c
462.025 911.973 463.868 910.444 466.062 909.549 c
466.821 909.239 467.697 909.005 468.33 908.509 c
f
391.696 922.739 m
389.178 924.464 386.81 925.57 384.368 927.356 c
384.187 927.489 383.827 927.319 383.625 927.441 c
382.618 928.05 381.73 928.631 380.748 929.327 c
380.209 929.709 379.388 929.698 378.88 929.956 c
376.336 931.248 373.707 931.806 371.2 933 C
371.882 933.638 373.004 933.394 373.6 934.2 C
373.795 933.92 374.033 933.636 374.386 933.827 c
376.064 934.731 377.914 934.884 379.59 934.794 c
381.294 934.702 383.014 934.397 384.789 934.125 c
385.096 934.078 385.295 933.555 385.618 933.458 c
387.846 932.795 390.235 933.32 392.354 932.482 c
393.945 931.853 395.515 931.03 396.754 929.755 c
397.006 929.495 396.681 929.194 396.401 929 C
396.789 929.109 397.062 928.903 397.173 928.59 c
397.257 928.351 397.257 928.049 397.173 927.81 c
397.061 927.498 396.782 927.397 396.408 927.346 c
395.001 927.156 396.773 928.536 396.073 928.088 c
394.8 927.274 395.546 925.868 394.801 924.6 C
394.521 924.794 394.291 925.012 394.401 925.4 C
394.635 924.878 394.033 924.588 393.865 924.272 c
393.48 923.547 392.581 922.132 391.696 922.739 c
f
359.198 915.391 m
356.044 916.185 352.994 916.07 349.978 917.346 c
349.911 917.374 349.688 917.027 349.624 917.054 c
348.258 917.648 347.34 918.614 346.264 919.66 c
345.351 920.548 343.693 920.161 342.419 920.648 c
342.095 920.772 341.892 921.284 341.591 921.323 c
340.372 921.48 339.445 922.429 338.4 923 C
340.736 923.795 343.147 923.764 345.609 924.148 c
345.722 924.166 345.867 923.845 346 923.845 c
346.136 923.845 346.266 924.066 346.4 924.2 C
346.595 923.92 346.897 923.594 347.154 923.848 c
347.702 924.388 348.258 924.198 348.798 924.158 c
348.942 924.148 349.067 923.845 349.2 923.845 c
349.336 923.845 349.467 924.156 349.6 924.156 c
349.736 924.155 349.867 923.845 350 923.845 c
350.136 923.845 350.266 924.066 350.4 924.2 C
351.092 923.418 351.977 923.972 352.799 923.793 c
353.837 923.566 354.104 922.418 355.178 922.12 c
359.893 920.816 364.03 918.671 368.393 916.584 c
368.7 916.437 368.91 916.189 368.8 915.8 C
369.067 915.8 369.38 915.888 369.57 915.756 c
370.628 915.024 371.669 914.476 372.366 913.378 c
372.582 913.039 372.253 912.632 372.02 912.684 c
367.591 913.679 363.585 914.287 359.198 915.391 c
f
345.338 871.179 m
343.746 872.398 343.162 874.429 342.034 876.221 c
341.82 876.561 342.094 876.875 342.411 876.964 c
342.971 877.123 343.514 876.645 343.923 876.443 c
345.668 875.581 347.203 874.339 349.2 874.2 C
351.19 871.966 355.45 871.581 355.457 868.2 c
355.458 867.341 354.03 868.259 353.6 867.4 C
351.149 868.403 348.76 868.3 346.38 869.767 c
345.763 870.148 346.093 870.601 345.338 871.179 c
f
317.8 923.756 m
317.935 923.755 324.966 923.522 324.949 923.408 c
324.904 923.099 317.174 922.05 316.81 922.22 c
316.646 922.296 309.134 919.866 309 920 C
309.268 920.135 317.534 923.756 317.8 923.756 c
f
0 g
333.2 914 m
318.4 912.2 314 911 v
309.6 909.8 291 902.2 288 900.2 C
274.6 894.8 257.6 874.8 V
265.2 878.2 267.4 881 V
281 893.6 280.8 891 V
293 899.6 292.4 897.4 V
316.8 908.6 314.8 905.4 V
336.4 910 335.4 908 V
354.2 903.6 351.4 903.4 V
345.6 902.2 352 898.6 V
348.6 894.2 343.2 898.2 v
337.8 902.2 340.8 900 335.8 899 C
333.2 898.2 328.6 902.2 V
323 906.8 314.2 903.2 V
283.6 890.6 281.6 890 V
278 887.2 275.6 883.6 V
269.8 879.2 266.8 877.8 V
254 866.2 252.8 864.8 V
249.4 859.6 248.6 859.2 V
255 863 257 865 V
271 875 276.4 875.8 V
280.8 878.8 281.6 880.2 V
296 889.4 300.2 889.4 V
309.4 884.2 311.8 891.2 V
317.6 893 323.2 891.8 V
326.4 894.4 325.6 896.6 V
327.2 898.4 328.2 894.6 V
331.6 891 336.4 893 V
340.4 893.2 338.4 890.8 V
334 887 322.2 886.8 V
309.8 886.2 293.4 878.6 V
263.6 868.2 254.4 857.8 V
248 849 242.6 847.8 V
236.8 847 230.8 839.6 V
240.6 845.4 249.6 845.4 V
253.6 847.8 249.8 844.2 V
246.2 836.6 247.8 831.2 V
247.2 826 246.4 824.4 V
238.6 811.6 238.6 809.2 v
238.6 806.8 239.8 797 240.2 796.4 c
240.6 795.8 239.2 798 243 795.6 c
246.8 793.2 249.6 791.6 250.4 788.8 c
251.2 786 248.4 794.2 248.2 796 c
248 797.8 243.8 805 244.6 807.4 C
245.6 806.4 246.4 805 V
245.8 805.6 246.4 809.2 V
247.2 814.4 248.6 817.6 v
250 820.8 252 824.6 252.4 825.4 c
252.8 826.2 252.8 832 254.2 829.4 C
257.6 826.8 l
254.8 829.4 257 831.6 V
256 837.2 257.8 839.8 V
264.8 848.2 266.4 849.2 v
268 850.2 266.6 849.8 y
272.6 854 266.8 852.4 V
262.8 850.8 259.8 850.8 V
252.2 848.8 256.2 853 v
260.2 857.2 270.2 862.6 274 862.4 C
274.8 860.8 l
286 863.2 l
284.8 862.4 l
284.6 862.6 288.8 863 v
293 863.4 298.8 862 300.2 863.8 c
301.6 865.6 305 866.6 304.6 865.2 c
304.2 863.8 304 861.8 y
309 867.6 308.4 865.4 v
307.8 863.2 299.6 858 298.2 851.8 C
308.6 860 l
312.2 863 l
315.8 860.8 316 862.4 v
316.2 864 320.8 869.8 322 869.6 c
323.2 869.4 325.2 872.2 325 869.6 c
324.8 867 332.4 861.6 y
335.6 863.4 337 862 v
338.4 860.6 342.6 881.8 y
367.6 892.4 l
411.201 895.8 l
394.201 902.6 l
333.2 914 l
f
0.2 0.55 0.85 0.5 K
1 J 2 w
351.4 715 m
336.4 731.8 328 734.4 V
314.6 741.2 290 733.4 v
S
324.8 735.8 m
299.6 743.8 284.2 739.6 V
265.8 737.6 257.4 723.8 v
S
321.2 737 m
304.2 744.2 289.4 746.4 V
272.8 749 256.2 741.8 V
244 735.8 238.6 725.6 v
S
322.2 736.6 m
306.8 747.6 305.8 749 V
298.8 760 285.8 760.4 V
264.4 759.6 247.2 751.6 v
S
0 G
0 J 1 w
320.895 745.593 m
322.437 744.13 349.4 715.2 Y
384.6 678.599 356.6 712.8 Y
349 717.6 339.8 736.4 Y
338.6 739.2 353.8 729.2 Y
357.8 728.4 371.4 709.2 Y
364.6 711.6 369.4 704.4 Y
372.2 702.4 392.601 686.799 Y
396.201 682.799 400.201 681.199 Y
414.201 686.399 407.801 673.199 Y
410.201 666.399 415.801 677.999 Y
427.001 694.8 410.601 692.399 Y
380.6 689.599 373.8 705.6 Y
371.4 708 380.2 705.6 Y
388.601 703.6 373 718 Y
375.4 718 384.6 711.2 Y
395.001 702 397.001 704 Y
415.001 712.8 425.401 705.2 Y
427.401 703.6 421.801 696.8 423.401 691.599 c
425.001 686.399 429.801 673.999 Y
427.401 672.399 427.801 661.599 Y
444.601 638.399 435.001 640.399 Y
419.401 640.799 434.201 633.199 Y
437.401 631.199 446.201 623.999 Y
443.401 625.199 441.801 619.999 Y
446.601 615.999 443.801 611.199 Y
437.801 609.999 436.601 605.999 Y
443.401 597.999 433.401 597.599 Y
437.001 593.199 432.201 581.199 Y
427.401 581.199 421.001 575.599 Y
423.401 570.799 413.001 565.199 Y
404.601 563.599 407.401 556.799 Y
399.401 550.799 397.001 534.799 Y
396.201 524.399 393.801 521.199 399.001 523.199 c
404.201 525.199 403.401 537.599 Y
398.601 553.199 441.401 569.199 Y
445.401 570.799 446.201 575.999 Y
448.201 575.599 457.001 567.999 Y
464.601 556.799 465.001 565.999 Y
466.201 569.599 464.601 575.599 Y
470.601 597.199 456.601 603.599 Y
446.601 637.199 460.601 628.799 Y
463.401 623.199 474.201 617.999 y
477.801 620.399 L
476.201 625.199 484.601 631.199 Y
487.401 624.799 493.401 632.799 Y
497.001 657.199 509.401 642.799 Y
513.401 641.599 514.601 648.399 Y
518.201 658.799 514.601 672.399 Y
518.201 672.799 527.801 666.799 Y
530.601 670.399 521.401 687.199 525.401 684.799 c
529.401 682.399 533.801 680.799 Y
534.601 682.799 524.601 695.199 Y
520.201 698 515.001 718.4 Y
522.201 714.8 512.201 730 Y
512.201 733.2 518.201 744.4 Y
517.401 751.2 518.201 750.8 Y
521.001 749.6 529.001 748 522.201 754.4 c
515.401 760.8 523.001 765.6 Y
527.401 768.4 513.801 768 Y
508.601 772.4 509.001 776.4 Y
517.001 774.4 502.601 788.8 500.201 792.4 c
497.801 796 507.401 801.2 Y
520.601 804.8 509.001 808 Y
489.401 807.6 500.201 818.4 Y
506.201 818 504.601 820.4 Y
499.401 821.6 489.801 828 Y
485.801 831.6 489.401 830.8 Y
506.201 829.6 477.401 840.8 Y
485.401 840.8 467.401 851.2 Y
465.401 852.8 462.201 860.4 Y
456.201 865.6 451.401 872.4 Y
451.001 876.8 446.201 881.6 Y
434.601 895.2 429.001 894.8 Y
414.201 898.4 409.001 897.6 Y
356.2 893.2 l
329.8 880.4 337.6 859.4 Y
344 851 353.2 854.8 Y
357.8 861 369.4 858.8 Y
389.801 855.6 387.201 859.2 Y
384.801 863.8 368.6 870 368.4 870.6 c
368.2 871.2 359.4 874.6 Y
356.4 875.8 352 885 Y
348.8 888.4 364.6 882.6 Y
363.4 881.6 370.8 877.6 Y
388.201 878.6 398.801 867.8 Y
409.601 851.2 409.801 859.4 Y
412.601 868.8 400.801 890 Y
401.201 892 409.401 885.4 Y
410.801 887.4 411.601 881.6 Y
411.801 879.2 415.601 871.2 Y
418.401 858.2 422.001 865.6 Y
426.601 856.2 L
428.001 853.6 422.001 846 Y
421.801 843.2 422.601 843.4 417.001 835.8 c
411.401 828.2 414.801 823.8 Y
413.401 817.2 422.201 817.6 Y
424.801 815.4 428.201 815.4 Y
430.001 813.4 432.401 814 Y
434.001 817.8 440.201 815.8 Y
441.601 818.2 449.801 818.6 Y
450.801 821.2 451.201 822.8 454.601 823.4 c
458.001 824 433.401 867 Y
439.801 867.8 431.601 880.2 Y
429.401 886.8 440.801 872.2 443.001 870.8 c
445.201 869.4 446.201 867.2 444.601 867.4 c
443.001 867.6 441.201 865.4 442.601 865.2 c
444.001 865 457.001 850 460.401 839.8 c
463.801 829.6 469.801 825.6 476.001 819.6 c
482.201 813.6 481.401 789.4 Y
481.001 780.6 487.001 770 Y
489.001 766.2 484.801 748 Y
482.801 745.8 484.201 745 Y
485.201 743.8 492.001 730.6 Y
490.201 730.8 493.801 727.2 Y
499.001 721.2 492.601 724.2 Y
486.601 725.8 493.601 716 Y
494.801 714.2 485.801 718.8 Y
476.601 719.4 488.201 712.2 Y
496.801 705 485.401 709.4 Y
480.801 711.2 484.001 704.4 Y
487.201 702.8 504.401 695.8 Y
504.801 691.999 501.801 686.999 Y
502.201 682.999 500.001 679.599 Y
498.801 671.399 498.201 670.599 Y
494.001 670.399 486.601 656.599 Y
484.801 653.999 474.601 641.999 Y
472.601 634.999 454.601 642.199 Y
448.001 638.799 450.001 642.199 Y
449.601 644.399 454.401 650.399 Y
461.401 652.999 458.801 663.799 Y
462.801 665.199 451.601 667.999 451.801 669.199 c
452.001 670.399 457.801 671.799 Y
465.801 673.799 461.401 676.199 Y
460.801 680.199 463.801 685.799 Y
475.401 686.599 463.801 702.8 Y
453.001 710.4 452.001 716.2 Y
464.601 724.4 456.401 736.8 456.601 740.4 c
456.801 744 458.001 765.6 Y
456.001 771.8 453.001 785.4 Y
455.201 790.6 462.601 803.2 Y
465.401 807.4 474.201 812.2 472.001 815.2 c
469.801 818.2 462.001 816.4 Y
454.201 817.8 454.801 812.6 Y
453.201 811.6 452.401 806.6 Y
451.68 798.667 442.801 792.4 Y
431.601 786.2 440.801 782.2 Y
446.801 775.6 437.001 775.4 Y
426.001 777.2 434.201 767 Y
445.001 754.2 442.001 751.4 Y
431.801 750.4 444.401 741.2 y
443.601 743.2 443.801 741.4 v
444.001 739.6 447.001 735.4 447.801 733.4 c
448.601 731.4 444.601 731.2 Y
445.201 721.6 429.801 725.8 y
429.801 725.8 428.201 725.6 v
426.601 725.4 415.401 726.2 409.601 728.4 c
403.801 730.6 397.001 730.6 y
393.001 728.8 385.4 729 v
377.8 729.2 369.8 726.4 Y
365.4 726.8 374 731.2 374.2 731 c
374.4 730.8 380 736.4 372 735.8 c
350.203 734.165 339.4 744.4 Y
337.4 745.8 334.8 748.6 Y
324.8 750.6 336.2 736.2 Y
337.4 734.8 336 733.8 Y
335.2 735.4 327.4 740.8 Y
324.589 741.773 323.226 743.107 320.895 745.593 C
f
0.2 0.55 0.85 0.5 k
1 J 2 w
297 757.2 m
308.6 751.6 311.2 748.8 v
313.8 746 327.8 734.6 y
322.4 736.6 319.8 738.4 v
317.2 740.2 306.4 748.4 y
302.6 754.4 297 757.2 v
f
0.4 0.2 0.8 0 k
0 J 1 w
238.991 788.397 m
239.328 788.545 238.804 791.257 238.6 791.8 c
237.578 794.526 228.6 796 y
228.373 794.635 228.318 793.039 228.424 791.401 c
233.292 785.882 238.991 788.397 v
f
0.4 0.2 0.8 0.2 k
238.991 788.597 m
238.542 788.439 238.976 791.331 238.8 791.8 c
237.778 794.526 228.6 796.1 y
228.373 794.735 228.318 793.139 228.424 791.501 c
232.692 786.382 238.991 788.597 v
f
0 g
234.6 788.454 m
233.975 788.454 233.469 789.594 233.469 791 c
233.469 792.405 233.975 793.545 234.6 793.545 c
235.225 793.545 235.732 792.405 235.732 791 c
235.732 789.594 235.225 788.454 234.6 788.454 c
f
234.6 791 m
F
189 690.399 m
183.4 680.399 208.2 686.399 V
222.2 687.599 224.6 689.999 V
225.8 689.199 234.166 686.266 237 685.599 c
243.8 683.999 252.2 694 y
256.8 704.5 259.6 704.5 v
262.4 704.5 259.2 702.9 y
252.6 692.799 253 691.199 V
247.8 671.199 231.8 670.399 V
215.65 669.449 217 663.599 V
225.8 665.999 228.2 663.599 V
239 663.999 231 657.599 V
224.2 645.999 l
224.34 642.081 214.2 645.599 v
204.4 648.999 194.1 661.899 y
178.15 676.449 189 690.399 V
f
0.1 0.4 0.4 0 k
187.8 686.399 m
185.8 676.799 222.6 687.199 V
227 687.199 229.4 686.399 v
231.8 685.599 243.8 682.799 245.8 683.999 C
238.6 670.399 227 671.999 V
213.8 670.399 214.2 665.599 V
218.2 658.399 223 655.999 V
225.8 653.599 225.4 650.399 v
225 647.199 222.2 645.599 220.2 644.799 c
218.2 643.999 215 647.199 213.4 647.199 c
211.8 647.199 203.4 653.599 199 658.399 c
194.6 663.199 186.2 675.199 186.6 677.999 c
187 680.799 187.8 686.399 Y
f
0.1 0.4 0.4 0.2 k
191 668.949 m
193.6 664.999 196.8 660.799 199 658.399 c
203.4 653.599 211.8 647.199 213.4 647.199 c
215 647.199 218.2 643.999 220.2 644.799 c
222.2 645.599 225 647.199 225.4 650.399 c
225.8 653.599 223 655.999 Y
219.934 657.532 217.194 661.024 215.615 663.347 C
215.8 660.799 210.6 661.599 v
205.4 662.399 200.2 665.199 198.6 668.399 c
197 671.599 194.6 673.999 196.2 670.399 c
197.8 666.799 200.2 663.199 201.8 662.799 c
203.4 662.399 203 661.199 200.6 661.599 c
198.2 661.999 195.4 662.399 191 667.599 c
F
0.1 0.55 0.85 0.3 k
188.4 689.999 m
190.2 703.6 191.4 707.6 V
190.6 714.4 193 718.6 v
195.4 722.8 197.4 729 200.4 734.4 c
203.4 739.8 203.6 743.8 207.6 745.4 c
211.6 747 217.6 755.6 220.4 756.6 c
223.2 757.6 223 756.8 y
229.8 771.6 243.4 767.6 V
227.2 770.4 243 779.8 V
238.2 778.7 241.5 785.7 v
243.701 790.368 243.2 783.6 232.2 771.8 C
227.2 763.2 222 760.2 v
216.8 757.2 204.8 750.2 203.6 746.4 c
202.4 742.6 199.2 736.8 197.2 735.2 c
195.2 733.6 192.4 729.4 192 726 C
190.8 722 189.4 720.8 v
188 719.6 187.8 716.4 187.8 714.4 c
187.8 712.4 185.8 709.6 186 707.2 C
186.8 688.199 186.4 686.199 V
188.4 689.999 L
f
1 g
179.8 685.399 m
177.8 686.799 173.4 680.799 V
180.7 647.799 180.7 646.399 V
181.8 648.499 180.5 655.699 v
179.2 662.899 178.3 675.599 y
179.8 685.399 l
f
0.1 0.55 0.85 0.3 k
201.4 746 m
183.8 742.8 184.2 713.6 V
183.4 688.799 l
182.2 714.4 181 716 v
179.8 717.6 183.8 728.8 180.6 722.8 C
166.6 708.8 174.6 687.599 V
176.1 684.299 173.1 688.899 V
168.5 701.5 169.6 707.9 V
169.8 710.1 171.7 712.9 V
180.3 724.6 183 726.9 V
184.8 741.3 200.2 746.5 V
205.9 748.8 201.4 746 V
f
0 g
340.8 812.2 m
341.46 812.554 341.451 813.524 342.031 813.697 c
343.18 814.041 343.344 815.108 343.862 815.892 c
344.735 817.211 344.928 818.744 345.51 820.235 c
345.782 820.935 345.809 821.89 345.496 822.55 c
344.322 825.031 343.62 827.48 342.178 829.906 c
341.91 830.356 341.648 831.15 341.447 831.748 c
340.984 833.132 339.727 834.123 338.867 835.443 c
338.579 835.884 339.104 836.809 338.388 836.893 c
337.491 836.998 336.042 837.578 335.809 836.552 c
335.221 833.965 336.232 831.442 337.2 829 C
336.418 828.308 336.752 827.387 336.904 826.62 c
337.614 823.014 336.416 819.662 335.655 816.188 c
335.632 816.084 335.974 815.886 335.946 815.824 c
334.724 813.138 333.272 810.693 331.453 808.312 c
330.695 807.32 329.823 806.404 329.326 805.341 c
328.958 804.554 328.55 803.588 328.8 802.6 C
325.365 799.82 323.115 795.975 320.504 792.129 c
320.042 791.449 320.333 790.24 320.884 789.971 c
321.697 789.573 322.653 790.597 323.123 791.443 c
323.512 792.141 323.865 792.791 324.356 793.434 c
324.489 793.609 324.31 794.028 324.445 794.149 c
327.078 796.496 328.747 799.432 331.2 801.8 C
333.15 802.129 334.687 803.127 336.435 804.14 c
336.743 804.319 337.267 804.07 337.557 804.265 c
339.31 805.442 339.308 807.478 339.414 809.388 c
339.464 810.272 339.66 811.589 340.8 812.2 c
f
331.959 816.666 m
332.083 816.743 331.928 817.166 332.037 817.382 c
332.199 817.706 332.602 817.894 332.764 818.218 c
332.873 818.434 332.71 818.814 332.846 818.956 c
335.179 821.403 335.436 824.427 334.4 827.4 C
335.424 828.02 335.485 829.282 335.06 830.129 c
334.207 831.829 334.014 833.755 333.039 835.298 c
332.237 836.567 330.659 837.811 329.288 836.508 c
328.867 836.108 328.546 835.321 328.824 834.609 c
328.888 834.446 329.173 834.3 329.146 834.218 c
329.039 833.894 328.493 833.67 328.487 833.398 c
328.457 831.902 327.503 830.391 328.133 829.062 c
328.905 827.433 329.724 825.576 330.4 823.8 C
329.166 821.684 330.199 819.235 328.446 817.358 c
328.31 817.212 328.319 816.826 328.441 816.624 c
328.733 816.138 329.139 815.732 329.625 815.44 c
329.827 815.319 330.175 815.317 330.375 815.441 c
330.953 815.803 331.351 816.29 331.959 816.666 c
f
394.771 826.977 m
396.16 825.185 396.45 822.39 394.401 821 C
394.951 817.691 398.302 819.67 400.401 820.2 C
400.292 820.588 400.519 820.932 400.802 820.937 c
401.859 820.952 402.539 821.984 403.601 821.8 C
404.035 823.357 405.673 824.059 406.317 825.439 c
408.043 829.134 407.452 833.407 404.868 836.653 c
404.666 836.907 404.883 837.424 404.759 837.786 c
404.003 839.997 401.935 840.312 400.001 841 C
398.824 844.875 398.163 848.906 396.401 852.6 C
394.787 852.85 394.089 854.589 392.752 855.309 c
391.419 856.028 390.851 854.449 390.892 853.403 c
390.899 853.198 391.351 852.974 391.181 852.609 c
391.105 852.445 390.845 852.334 390.845 852.2 c
390.846 852.065 391.067 851.934 391.201 851.8 C
390.283 850.98 388.86 850.503 388.565 849.358 c
387.611 845.648 390.184 842.523 391.852 839.322 c
392.443 838.187 391.707 836.916 390.947 835.708 c
390.509 835.013 390.617 833.886 390.893 833.03 c
391.645 830.699 393.236 828.96 394.771 826.977 c
f
357.611 808.591 m
356.124 806.74 352.712 804.171 355.629 802.243 c
355.823 802.114 356.193 802.11 356.366 802.244 c
358.387 803.809 360.39 804.712 362.826 805.294 c
362.95 805.323 363.224 804.856 363.593 805.017 c
365.206 805.72 367.216 805.662 368.4 807 C
372.167 806.776 375.732 807.892 379.123 809.2 c
380.284 809.648 381.554 810.207 382.755 810.709 c
384.131 811.285 385.335 812.213 386.447 813.354 c
386.58 813.49 386.934 813.4 387.201 813.4 C
387.161 814.263 388.123 814.39 388.37 815.012 c
388.462 815.244 388.312 815.64 388.445 815.742 c
390.583 817.372 391.503 819.39 390.334 821.767 c
390.049 822.345 389.8 822.963 389.234 823.439 c
388.149 824.35 387.047 823.496 386 823.8 C
385.841 823.172 385.112 823.344 384.726 823.146 c
383.867 822.707 382.534 823.292 381.675 822.854 c
380.313 822.159 379.072 821.99 377.65 821.613 c
377.338 821.531 376.56 821.627 376.4 821 C
376.266 821.134 376.118 821.368 376.012 821.346 c
374.104 820.95 372.844 820.736 371.543 819.044 c
371.44 818.911 370.998 819.09 370.839 818.955 c
369.882 818.147 369.477 816.913 368.376 816.241 c
368.175 816.118 367.823 816.286 367.629 816.157 c
366.983 815.726 366.616 815.085 365.974 814.638 c
365.645 814.409 365.245 814.734 365.277 814.99 c
365.522 816.937 366.175 818.724 365.6 820.6 C
367.677 823.12 370.194 825.069 372 827.8 C
372.015 829.966 372.707 832.112 372.594 834.189 c
372.584 834.382 372.296 835.115 372.17 835.462 c
371.858 836.316 372.764 837.382 371.92 838.106 c
370.516 839.309 369.224 838.433 368.4 837 C
366.562 836.61 364.496 835.917 362.918 837.151 c
361.911 837.938 361.333 838.844 360.534 839.9 c
359.549 841.202 359.884 842.638 359.954 844.202 c
359.96 844.33 359.645 844.466 359.645 844.6 c
359.646 844.735 359.866 844.866 360 845 C
359.294 845.626 359.019 846.684 358 847 C
358.305 848.092 357.629 848.976 356.758 849.278 c
354.763 849.969 353.086 848.057 351.194 847.984 c
350.68 847.965 350.213 849.003 349.564 849.328 c
349.132 849.544 348.428 849.577 348.066 849.311 c
347.378 848.807 346.789 848.693 346.031 848.488 c
344.414 848.052 343.136 846.958 341.656 846.103 c
340.171 845.246 339.216 843.809 338.136 842.489 c
337.195 841.337 337.059 838.923 338.479 838.423 c
340.322 837.773 341.626 840.476 343.592 840.15 c
343.904 840.099 344.11 839.788 344 839.4 C
344.389 839.291 344.607 839.52 344.8 839.8 C
345.658 838.781 346.822 838.444 347.76 837.571 c
348.73 836.667 350.476 837.085 351.491 836.088 c
353.02 834.586 352.461 831.905 354.4 830.6 C
353.814 829.287 353.207 828.01 352.872 826.583 c
352.59 825.377 353.584 824.18 354.795 824.271 c
356.053 824.365 356.315 825.124 356.8 826.2 C
357.067 825.933 357.536 825.636 357.495 825.42 c
357.038 823.033 356.011 821.04 355.553 818.609 c
355.494 818.292 355.189 818.09 354.8 818.2 C
354.332 814.051 350.28 811.657 347.735 808.492 c
347.332 807.99 347.328 806.741 347.737 806.338 c
349.14 804.951 351.1 806.497 352.8 807 C
353.013 808.206 353.872 809.148 355.204 809.092 c
355.46 809.082 355.695 809.624 356.019 809.754 c
356.367 809.892 356.869 809.668 357.155 809.866 c
358.884 811.061 360.292 812.167 362.03 813.356 c
362.222 813.487 362.566 813.328 362.782 813.436 c
363.107 813.598 363.294 813.985 363.617 814.17 c
363.965 814.37 364.207 814.08 364.4 813.8 C
363.754 813.451 363.75 812.494 363.168 812.292 c
362.393 812.024 361.832 811.511 361.158 811.064 c
360.866 810.871 360.207 811.119 360.103 810.94 c
359.505 809.912 358.321 809.474 357.611 808.591 c
f
302.2 858 m
292.962 860.872 281.8 835.2 V
279.4 830 277 828 v
274.6 826 263.4 822.4 261.4 818.4 C
251 802.4 L
265.8 818.4 269 820.8 V
277 829.2 273.8 822.4 V
259.8 811.6 261 802.4 V
255.4 788 254.6 786 V
270.6 818 273 819.2 v
275.4 820.4 276.6 820.4 275.4 816.8 c
274.2 813.2 273.8 796.8 271 794.8 C
279 815.2 278.2 818.4 V
281.4 822 283.8 816.8 V
282.6 800.8 l
287 788.8 l
284.6 800 286.2 815.6 V
284.2 826 288.2 820.4 v
292.2 814.8 301.8 808.8 301.8 804 C
296.6 821.6 287.4 826.4 V
283.4 820.4 l
282.2 822.4 l
278.6 823.2 283 830 v
287.4 836.8 287 837.6 y
293.4 830.4 295 830.4 V
308.2 838 309.4 813.6 V
316.2 828 307 834.8 V
292.2 836.8 293.4 842 V
300.6 854.4 L
304.2 859.6 302.6 856.8 y
F
282.2 841.6 m
269.4 841.6 266.2 836.4 V
259 826.8 l
276.2 836.8 280.2 838 v
284.2 839.2 282.2 841.6 Y
f
242.2 835.2 m
240.2 834 239.8 831.2 v
239.4 828.4 237 828 237.8 825.2 c
238.6 822.4 240.6 820 240.6 824 c
240.6 828 242.2 830 243 831.2 c
243.8 832.4 245.4 836.8 242.2 835.2 c
f
233.4 774 m
225 778 221.8 781.6 v
218.6 785.2 219.052 780.034 214.2 780.4 c
208.353 780.841 209.4 796.8 y
205.4 789.2 l
204.2 774.8 212.2 777.2 v
216.107 778.372 217.4 776.8 215.8 776 c
214.2 775.2 221.4 774.8 218.6 773.2 c
215.8 771.6 230.2 776.8 227.8 766.4 C
233.4 774 L
f
220.8 759.6 m
205.4 755.2 201.8 764.8 V
197 762.4 199.2 759.4 v
201.4 756.4 202.6 756 y
208 754.8 207.4 754 v
206.8 753.2 204.4 749.8 y
214.6 755.8 220.8 759.6 v
f
1 g
449.201 681.399 m
448.774 679.265 447.103 678.464 445.201 677.799 C
443.284 678.757 440.686 681.863 438.801 679.799 C
438.327 680.279 437.548 680.339 437.204 681.001 c
436.739 681.899 437.011 682.945 436.669 683.743 c
436.124 685.015 435.415 686.381 435.601 687.799 C
437.407 688.511 438.002 690.417 437.528 692.18 c
437.459 692.437 437.03 692.634 437.23 692.983 c
437.416 693.306 437.734 693.533 438.001 693.8 C
437.866 693.665 437.721 693.432 437.61 693.452 c
437 693.558 437.124 694.195 437.254 694.582 c
437.839 696.328 439.853 696.592 441.201 695.4 C
441.457 695.965 441.966 695.771 442.401 695.8 C
442.351 696.379 442.759 696.906 442.957 697.326 c
443.475 698.424 445.104 697.318 445.901 697.93 c
446.977 698.755 448.04 699.454 449.118 698.851 c
450.927 697.838 452.636 696.626 453.835 694.885 c
454.41 694.051 454.65 692.77 454.592 691.812 c
454.554 691.165 453.173 691.517 452.83 690.588 c
452.185 688.84 454.016 688.321 454.772 686.983 c
454.97 686.634 454.706 686.33 454.391 686.232 c
453.98 686.104 453.196 686.293 453.334 685.84 c
454.306 682.647 451.55 681.969 449.201 681.399 C
f
439.6 661.799 m
439.593 663.537 437.992 665.293 439.201 666.999 C
439.336 666.865 439.467 666.644 439.601 666.644 c
439.736 666.644 439.867 666.865 440.001 666.999 C
441.496 664.783 445.148 663.855 445.006 661.009 c
444.984 660.562 443.897 659.644 444.801 658.999 C
442.988 657.651 442.933 655.281 442.001 653.399 C
440.763 653.685 439.551 654.048 438.401 654.599 C
438.753 656.085 438.636 657.769 439.456 659.089 c
439.89 659.787 439.603 660.866 439.6 661.799 c
f
0.8 g
273.4 670.799 m
256.542 660.663 270.6 675.999 v
279.4 685.599 289.4 691.199 y
299.8 695.6 303.4 696.8 v
307 698 322.2 703.2 325.4 703.6 c
328.6 704 338.2 708 345 704 c
351.8 700 359.8 695.6 y
343.4 704 339.8 701.6 v
336.2 699.2 329 699.6 323 696.4 C
308.2 691.999 305 689.999 v
301.8 687.999 291.4 676.399 289.8 677.199 c
288.2 677.999 290.2 678.399 291.4 681.199 c
292.6 683.999 290.6 685.599 282.6 679.199 c
274.6 672.799 273.4 670.799 Y
f
0 g
280.805 676.766 m
282.215 689.806 290.693 688.141 V
298.919 692.311 301.641 694.279 V
309.78 695.981 311.09 696.598 v
329.569 705.298 344.288 700.779 344.835 701.899 c
345.381 703.018 365.006 695.901 368.615 691.815 c
369.006 691.372 358.384 697.412 348.686 699.303 c
340.413 700.917 318.811 699.056 307.905 693.52 c
304.932 692.011 295.987 686.227 293.456 686.338 c
290.925 686.45 280.805 676.766 Y
f
0.8 g
277 651.199 m
261.8 653.599 278.6 655.199 V
296.6 657.199 300.6 662.399 V
314.2 671.599 317 671.999 v
319.8 672.399 349.8 679.599 350.2 681.999 c
350.6 684.399 356.2 684.399 357.8 683.599 c
359.4 682.799 358.6 681.599 355.8 680.799 c
353 679.999 321.8 663.599 315.4 662.399 c
309 661.199 297.4 653.599 292.6 652.399 c
287.8 651.199 277 651.199 Y
f
0 g
296.52 658.597 m
287.938 659.426 296.539 660.245 V
305.355 663.669 307.403 666.332 V
314.367 671.043 315.8 671.247 v
317.234 671.452 331.194 675.139 331.399 676.367 c
331.604 677.596 365.67 690.177 370.09 686.987 c
373.001 684.886 363.1 686.563 353.466 682.153 c
352.111 681.533 318.258 666.946 314.981 666.332 c
311.704 665.717 305.765 661.826 303.307 661.212 c
300.85 660.597 296.52 658.597 Y
f
288.6 656.399 m
293.8 656.799 292.6 655.199 v
291.4 653.599 289 654.399 y
288.6 656.399 l
f
281.4 654.799 m
286.6 655.199 285.4 653.599 v
284.2 651.999 281.8 652.799 y
281.4 654.799 l
f
271 653.199 m
276.2 653.599 275 651.999 v
273.8 650.399 271.4 651.199 y
271 653.199 l
f
263.4 652.399 m
268.6 652.799 267.4 651.199 v
266.2 649.599 263.8 650.399 y
263.4 652.399 l
f
301.8 691.999 m
306.2 691.999 305 690.399 v
303.8 688.799 300.6 689.199 y
301.8 691.999 l
f
291.8 686.399 m
298.306 688.54 295.8 685.199 v
294.6 683.599 292.2 684.399 y
291.8 686.399 l
f
280.6 681.599 m
285.8 681.999 284.6 680.399 v
283.4 678.799 281 679.599 y
280.6 681.599 l
f
273 675.599 m
278.2 675.999 277 674.399 v
275.8 672.799 273.4 673.599 y
273 675.599 l
f
266.2 670.799 m
271.4 671.199 270.2 669.599 v
269 667.999 266.6 668.799 y
266.2 670.799 l
f
305.282 664.402 m
312.203 664.934 310.606 662.805 v
309.009 660.675 305.814 661.74 y
305.282 664.402 l
f
315.682 669.202 m
322.603 669.734 321.006 667.605 v
319.409 665.475 316.214 666.54 y
315.682 669.202 l
f
326.482 673.602 m
333.403 674.134 331.806 672.005 v
330.209 669.875 327.014 670.94 y
326.482 673.602 l
f
336.882 678.402 m
343.803 678.934 342.206 676.805 v
340.609 674.675 337.414 675.74 y
336.882 678.402 l
f
309.282 696.402 m
316.203 696.934 314.606 694.805 v
313.009 692.675 309.014 692.94 y
309.282 696.402 l
f
319.282 699.602 m
326.203 700.134 324.606 698.005 v
323.009 695.875 318.614 696.14 y
319.282 699.602 l
f
296.6 659.599 m
301.8 659.999 300.6 658.399 v
299.4 656.799 297 657.599 y
296.6 659.599 l
f
0.1 0.55 0.85 0.3 k
223.4 758.8 m
219 750 218.6 746.8 V
219.4 755.6 220.6 757.6 v
221.8 759.6 223.4 758.8 y
f
205 744.8 m
201.8 730.4 202.2 727.6 V
201 739.2 201.4 740.4 v
201.8 741.6 205 744.8 y
f
0.8 g
225.8 819.4 m
225.6 816.2 l
223.4 816 l
237.6 803.4 238.2 795.8 V
239 804 225.8 819.4 V
f
0 g
229.784 818.135 m
229.353 818.551 229.572 819.296 229.164 819.556 c
228.355 820.072 230.462 820.129 230.234 820.845 c
229.851 822.051 230.038 822.072 229.916 823.348 c
229.859 823.946 230.447 825.486 230.832 825.926 c
232.278 827.578 230.954 830.51 232.594 832.061 c
232.898 832.35 233.274 832.902 233.559 833.32 c
234.218 834.283 235.402 834.771 236.352 835.599 c
236.67 835.875 236.469 836.702 237.038 836.61 c
237.752 836.495 238.993 836.625 238.948 835.784 c
238.835 833.664 237.506 831.944 236.226 830.276 C
236.677 829.572 236.219 828.937 235.935 828.38 c
234.6 825.76 234.789 822.919 234.615 820.079 c
234.61 819.994 234.303 819.916 234.311 819.863 c
234.664 817.528 235.248 815.329 236.127 813.1 c
236.493 812.17 236.964 811.275 237.114 810.348 c
237.225 809.662 237.328 808.829 236.92 808.124 C
238.955 805.234 237.646 802.583 238.815 799.052 c
239.022 798.427 240.714 796.513 240.251 796.674 c
237.738 797.545 237.626 797.943 237.449 798.696 c
237.303 799.319 236.973 800.696 236.736 801.298 c
236.672 801.462 236.501 803.346 236.423 803.468 c
234.91 805.85 236.268 805.674 234.898 808.032 C
233.47 808.712 232.504 809.816 231.381 810.978 c
231.183 811.182 232.326 811.906 232.145 812.119 c
231.053 813.408 229.9 814.175 230.236 815.668 c
230.391 816.358 230.528 817.415 229.784 818.135 c
f
226.2 816.4 m
226.6 809.6 229 808 v
231.4 806.4 230.2 807.2 227 808.4 c
223.8 809.6 225 810.4 y
222.2 810 224.6 808 v
227 806 230.6 803.6 229 803.6 c
227.4 803.6 219.8 807.6 219.8 810.4 c
219.8 813.2 218.8 817.3 y
219.9 818.1 224.7 818 V
226.1 817.3 226.2 816.4 V
f
1 g
1 J 0.1 w
225.4 797.8 m
216.88 800.591 198.4 797.2 V
207.431 799.278 226.2 797 v
236.5 795.75 225.4 797.8 Y
b
227.498 797.871 m
219.252 801.389 200.547 799.608 V
209.725 800.897 228.226 797.005 v
238.38 794.869 227.498 797.871 Y
b
229.286 797.778 m
221.324 801.899 202.539 801.514 V
211.787 802.118 229.948 796.86 v
239.914 793.975 229.286 797.778 Y
b
230.556 797.555 m
223.732 801.862 206.858 802.96 V
215.197 802.79 231.078 796.681 v
239.794 793.328 230.556 797.555 Y
b
345.84 787.039 m
344.91 786.395 345.124 787.576 v
345.339 788.757 373.547 801.927 377.161 801.677 C
346.913 788.471 345.84 787.039 V
b
342.446 786.4 m
341.57 785.685 341.691 786.879 v
341.812 788.073 368.899 803.418 372.521 803.452 C
343.404 787.911 342.446 786.4 V
b
339.16 785.025 m
338.332 784.253 338.374 785.453 v
338.416 786.652 358.233 802.149 368.045 804.023 C
350.015 795.896 339.16 785.025 V
b
336.284 783.162 m
335.539 782.468 335.577 783.547 v
335.615 784.627 353.449 798.574 362.28 800.26 C
346.054 792.946 336.284 783.162 V
b
0.8 g
0 J 1 w
304.6 635.199 m
289.4 637.599 306.2 639.199 V
324.2 641.199 328.2 646.399 V
341.8 655.599 344.6 655.999 v
347.4 656.399 363.8 659.999 364.2 662.399 c
364.6 664.799 370.6 667.199 372.2 666.399 c
373.8 665.599 373.8 656.399 371 655.599 c
368.2 654.799 349.4 647.599 343 646.399 c
336.6 645.199 325 637.599 320.2 636.399 c
315.4 635.199 304.6 635.199 Y
f
0 g
377.6 672.599 m
374.6 670.999 373.4 668.399 V
367 657.799 352.8 654.599 V
329.8 645.599 322 643.599 V
308.6 638.599 301.2 639.399 V
294.2 639.199 300.4 637.599 V
320.6 639.599 324 641.399 V
339.6 646.599 342.6 649.199 v
345.6 651.799 363.8 656.799 366 658.799 c
368.2 660.799 378 669.199 377.6 672.599 C
f
318.882 641.089 m
324.111 641.315 322.958 639.766 v
321.805 638.216 319.357 639.09 y
318.882 641.089 l
f
311.68 639.737 m
316.908 639.963 315.756 638.414 v
314.603 636.864 312.155 637.737 y
311.68 639.737 l
f
301.251 638.489 m
306.48 638.716 305.327 637.166 v
304.174 635.617 301.726 636.49 y
301.251 638.489 l
f
293.617 637.945 m
298.846 638.171 297.693 636.622 v
296.54 635.072 294.092 635.946 y
293.617 637.945 l
f
335.415 648.487 m
342.375 648.788 340.84 646.726 v
339.306 644.664 336.047 645.826 y
335.415 648.487 l
f
345.73 652.912 m
351.689 656.213 351.155 651.151 v
350.885 648.595 346.362 650.251 y
345.73 652.912 l
f
354.862 655.726 m
362.021 659.427 360.287 653.965 v
359.509 651.515 355.493 653.065 y
354.862 655.726 l
f
364.376 660.551 m
368.735 665.452 369.801 658.79 v
370.207 656.252 365.008 657.89 y
364.376 660.551 l
f
326.834 644.003 m
332.062 644.23 330.91 642.68 v
329.757 641.131 327.308 642.004 y
326.834 644.003 l
f
1 g
1 J 0.1 w
362.434 765.397 m
361.708 764.732 361.707 765.803 v
361.707 766.873 379.191 780.137 388.034 781.521 C
371.935 774.792 362.434 765.397 V
b
0 g
0 J 1 w
365.4 701.6 m
387.401 679.199 396.601 675.599 V
405.801 664.399 401.801 638.399 V
398.601 630.799 395.401 651.599 V
398.601 676.799 387.401 660.799 V
379 670.699 385.4 670.399 V
388.601 668.399 389.001 669.999 v
389.401 671.599 381.4 685.199 364.2 699.6 c
347 714 365.4 701.6 Y
f
1 g
1 J 0.1 w
307 662.799 m
306.8 664.599 308.6 663.799 v
310.4 662.999 404.601 656.799 436.201 632.799 C
391.001 655.999 307 662.799 V
b
317.4 667.199 m
317.2 668.999 319 668.199 v
320.8 667.399 457.401 668.399 481.001 635.999 C
459.001 661.199 317.4 667.199 V
b
329 671.199 m
328.8 672.999 330.6 672.199 v
332.4 671.399 505.801 684.399 529.401 651.999 C
519.801 677.599 329 671.199 V
b
339 675.999 m
338.8 677.799 340.6 676.999 v
342.4 676.199 464.601 714.8 488.201 682.399 C
474.801 707 339 675.999 V
b
281 653.199 m
280.8 654.999 282.6 654.199 v
284.4 653.399 302.2 651.199 304.2 612.399 C
297 654.399 281 653.199 V
b
272.2 651.599 m
272 653.399 273.8 652.599 v
275.6 651.799 289.8 656.399 287 617.599 C
288.2 652.799 272.2 651.599 V
b
264.2 651.199 m
264 652.999 265.8 652.199 v
267.6 651.399 283 650.799 270.6 628.399 C
280.2 652.399 264.2 651.199 V
b
311.526 695.535 m
311.082 693.536 312.631 694.753 v
328.699 707.378 361.141 766.28 416.826 771.914 C
378.518 784.024 311.526 695.535 V
b
322.726 697.335 m
321.363 698.528 323.231 699.153 v
325.099 699.778 437.541 772.28 476.826 764.314 C
449.719 771.824 322.726 697.335 V
b
301.885 691.233 m
301.376 689.634 303.087 690.61 v
312.062 695.73 315.677 752.941 359.254 754.196 C
326.843 768.91 301.885 691.233 V
b
281.962 680.207 m
280.885 678.921 282.838 679.175 v
293.084 680.507 314.489 721.778 358.928 716.699 C
326.962 731.045 281.962 680.207 V
b
293.2 686.333 m
292.389 684.864 294.258 685.489 v
304.057 688.763 317.141 733.375 361.729 736.922 C
327.603 744.865 293.2 686.333 V
b
274.922 675.088 m
274.049 674.046 275.631 674.252 v
283.93 675.331 301.268 708.76 337.264 704.646 C
311.371 716.266 274.922 675.088 V
b
267.323 669.179 m
266.318 668.134 267.909 668.252 v
272.077 668.561 302.715 701.64 321.183 686.138 C
309.168 704.861 267.323 669.179 V
b
336.855 701.102 m
335.654 702.457 337.586 702.842 v
339.518 703.226 460.221 760.939 498.184 748.073 C
472.243 758.947 336.855 701.102 V
b
303.4 636.799 m
303.2 638.599 305 637.799 v
306.8 636.999 322.2 636.399 309.8 613.999 C
319.4 637.999 303.4 636.799 V
b
313.8 638.399 m
313.6 640.199 315.4 639.399 v
317.2 638.599 335 636.399 337 597.599 C
329.8 639.599 313.8 638.399 V
b
320.6 639.999 m
320.4 641.799 322.2 640.999 v
324 640.199 348.6 636.799 372.2 604.399 C
336.6 641.199 320.6 639.999 V
b
328.225 642.028 m
327.788 643.786 329.678 643.232 v
331.568 642.678 352.002 644.577 390.099 610.401 C
343.924 645.344 328.225 642.028 V
b
338.625 646.428 m
338.188 648.186 340.078 647.632 v
341.968 647.078 376.802 642.577 428.499 607.601 C
354.324 649.744 338.625 646.428 V
b
298.2 657.999 m
298 659.799 299.8 658.999 v
301.6 658.199 355 655.599 385.4 628.799 C
350.499 653.574 298.2 657.999 V
b
288.2 653.999 m
288 655.799 289.8 654.999 v
291.6 654.199 316.2 650.799 339.8 618.399 C
304.2 655.199 288.2 653.999 V
b
349.503 651.038 m
348.938 652.759 350.864 652.345 v
352.79 651.932 387.86 649.996 441.981 618.902 C
364.317 653.296 349.503 651.038 V
b
357.903 653.438 m
357.338 655.159 359.264 654.745 v
361.19 654.332 396.26 652.396 450.381 621.302 C
373.317 656.096 357.903 653.438 V
b
367.503 658.438 m
366.938 660.159 368.864 659.745 v
370.79 659.332 413.86 654.996 503.582 620.702 C
382.917 661.096 367.503 658.438 V
b
0 g
0 J 1 w
256.2 651.599 m
261.4 651.999 260.2 650.399 v
259 648.799 256.6 649.599 y
256.2 651.599 l
f
287 637.599 m
292.2 637.999 291 636.399 v
289.8 634.799 287.4 635.599 y
287 637.599 l
f
278.2 637.999 m
283.4 638.399 282.2 636.799 v
281 635.199 278.6 635.999 y
278.2 637.999 l
f
182.831 649.818 m
187.876 648.495 186.218 647.376 v
184.561 646.256 182.554 647.798 y
182.831 649.818 l
f
184.831 659.418 m
189.876 658.095 188.218 656.976 v
186.561 655.856 184.554 657.398 y
184.831 659.418 l
f
177.631 663.818 m
182.676 662.495 181.018 661.376 v
179.361 660.256 177.354 661.798 y
177.631 663.818 l
f
0.8 g
1 J 0.1 w
257.4 588.799 m
255.8 588.799 251.8 586.799 V
249.8 586.799 238.6 583.199 233 573.199 C
245.4 582.799 257.4 588.799 V
f
345.116 496.153 m
345.257 495.895 345.312 495.475 345.604 495.458 c
346.262 495.418 347.495 495.117 347.37 495.753 c
346.522 500.059 345.648 504.996 341.515 506.803 c
340.876 507.082 339.434 506.669 339.36 505.785 c
339.233 504.261 339.116 502.912 339.425 501.446 c
339.725 500.025 341.883 500.015 342.8 501.399 C
343.736 499.727 344.168 497.884 345.116 496.153 c
f
334.038 491.419 m
334.786 490.006 334.659 488.147 336.074 487.584 c
336.814 487.29 338.664 488.265 338.246 489.339 c
337.444 491.4 337.056 493.639 335.667 495.45 c
335.467 495.712 335.707 496.245 335.547 496.573 c
334.953 497.793 333.808 498.528 332.4 498.199 C
331.285 495.996 332.433 493.867 333.955 492.158 c
334.091 492.006 333.925 491.63 334.038 491.419 c
f
294.436 496.609 m
294.328 496.986 294.29 497.449 294.455 497.77 c
294.986 498.803 295.779 499.925 295.442 500.947 c
295.094 502.003 293.978 501.821 293.328 501.252 c
292.193 500.258 292.144 498.432 291.453 497.073 c
291.257 496.687 291.308 496.114 290.867 495.723 c
290.393 495.302 289.953 493.778 290.049 493.207 c
290.102 492.894 289.919 482.986 290.141 483.249 c
290.76 483.982 293.81 493.716 293.879 494.608 c
293.936 495.339 294.668 495.804 294.436 496.609 c
f
268.798 503.401 m
271.432 505.9 274.222 508.861 273.78 512.573 c
273.664 513.549 271.889 513.022 271.702 512.176 c
270.9 508.551 268.861 505.89 266.293 503.498 c
264.097 501.451 262.235 495.107 262 494.599 C
265.697 499.855 267.954 502.601 268.798 503.401 c
f
255.224 509.365 m
255.747 509.735 255.445 510.226 255.662 510.558 c
256.615 512.016 257.916 513.262 257.934 515 c
257.937 515.277 257.559 515.586 257.224 515.362 c
256.947 515.178 256.605 515.048 256.497 514.918 c
254.467 512.469 253.067 509.798 251.624 506.986 c
251.441 506.629 250.297 502.138 250.61 502.027 c
250.849 501.942 252.569 506.123 252.779 506.237 c
254.042 506.923 254.054 508.538 255.224 509.365 c
f
271.957 489.821 m
272.401 490.69 273.977 491.892 273.864 492.781 c
273.746 493.709 274.214 495.152 273.302 494.464 c
272.045 493.516 268.596 492.167 268.326 486.359 c
268.3 485.788 271.274 488.481 271.957 489.821 c
f
286.4 506.999 m
286.8 507.667 287.508 507.194 287.967 507.457 c
288.615 507.829 289.226 508.387 289.518 509.036 c
290.488 511.185 292.257 513.005 292.4 515.399 C
290.909 516.804 290.23 514.764 289.6 513.799 C
288.277 515.446 287.278 513.572 285.978 513.053 c
285.908 513.025 285.695 513.372 285.62 513.345 c
284.443 512.905 283.763 511.824 282.765 511.043 c
282.594 510.909 282.189 511.089 282.042 510.953 c
281.39 510.35 280.417 510.025 280.137 509.343 c
279.027 506.636 275.887 504.541 274 496.999 C
274.381 496.09 278.512 503.641 278.999 504.339 c
279.835 505.535 279.953 502.678 281.229 503.344 c
281.28 503.371 281.466 503.133 281.6 502.999 C
281.794 503.279 282.012 503.508 282.4 503.399 C
282.4 503.799 282.266 504.355 282.467 504.514 c
283.704 505.491 283.62 506.559 284.4 507.799 C
284.858 507.01 285.919 507.729 286.4 506.999 C
f
346.2 452.599 m
353.6 472.999 349.2 484.199 V
360.6 462.599 356 451.399 V
355.6 461.799 351.6 466.799 V
347.6 453.999 346.2 452.599 V
f
331.4 455.199 m
336.8 463.999 328.8 482.399 V
328 461.999 321.2 450.999 V
335.4 471.199 331.4 455.199 V
f
321.4 457.199 m
321.2 477.199 321.6 480.199 V
317.8 463.599 307.6 453.999 V
322 465.999 321.4 457.199 V
f
311.8 489.199 m
317.8 475.599 307.8 457.199 V
314.2 469.399 309.4 476.399 V
312 479.799 311.8 489.199 V
f
292.6 457.599 m
291.6 473.199 293.4 475.399 V
293.6 481.799 293.2 482.799 V
297.2 488.999 297.4 481.599 V
298.8 473.799 301.6 469.199 V
305.2 463.799 305 457.399 V
295 487.599 292.6 457.599 V
f
289 485.199 m
282.4 474.399 280.6 455.399 V
279.2 461.599 283 475.999 V
287.2 491.399 289 485.199 V
f
267.2 465.399 m
272.2 470.799 273.6 475.799 V
277.2 491.599 270.8 482.999 V
271 474.999 262.8 467.599 V
267.6 469.999 267.2 465.399 V
f
261.4 470.399 m
264.8 487.799 265.6 488.599 V
267.4 491.999 264.6 488.799 V
255.8 469.599 251.8 462.999 V
259.8 472.199 261.4 470.399 V
f
255.6 486.999 m
267.2 509.399 245.4 483.599 V
256.4 493.399 255.6 486.999 V
f
240.2 501.599 m
245 520.399 247.6 520.199 V
255.8 529.199 249.2 518.599 V
243.2 508.999 243.8 499.199 V
243.2 508.799 240.2 501.599 V
f
570.5 513 m
558.5 523 556 526.5 V
569.5 508 569.5 501 V
572 508.5 570.5 513 V
f
576 535 m
555 550 551.5 557.5 V
578 528 578 523.5 V
578.5 532.5 576 535 V
f
593 689 m
581 697 579.5 695 V
590 688.5 592.5 680 V
591 689 593 689 V
f
601.5 608.5 m
584 620.5 l
603 603.5 603.5 599.5 V
601.5 608.5 L
f
0 g
1 w
210.75 631 m
232.75 626.25 l
S
261 469 m
260.5 472.5 251.5 462 v
S
266.5 464 m
268.5 470.5 262 466 v
S
320.5 455.5 m
322 466.5 310.5 453.5 v
S

showpage

% Modification Denis GIROU (CNRS/IDRIS - France) <Denis.Girou@idris.fr> - 18 Dec. 1997
%% %%Trailer
countdictstack InitDictCount sub { end } repeat
cleartomark
restore
grestore

%%EndDocument
 @endspecial 5022 3450 a
tx@Dict begin  PutEnd  end
 5022 3450 a 4500 6000 a
tx@Dict begin -90 Rot  end
 4500
6000 a eop end
%%Page: 3 3
TeXDict begin 3 2 bop -600 -600 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -600 -600 a -1211 -1817
a
SDict begin H.S end
 -1211 -1817 a -1211 -1817 a
SDict begin H.R end
 -1211 -1817 a -1211 -1817
a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -1211 -1817 a -600 -600 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 -600 -600 a 4500 6000 a
tx@Dict begin 90 Rot  end
 4500
6000 a 5022 5222 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true -56.90549 -56.90549 11.38092 256.07469
.5 Frame  gsave 0.6 0.8 0.6 setrgbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true 0.0 213.39557 142.26372 256.07469 .5
Frame  gsave 0.6 0.8 0.6 setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   25.60728 213.39557 2 copy moveto 14.22636 .5
CLW mul sub dup 0 rmoveto 0 360 arc closepath  gsave 1. setgray  1.
.setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true 25.60728 213.11119 153.92944 227.62195
.5 Frame  gsave 1. setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   -2.84544 193.47873 2 copy moveto 5.69046 .5 CLW
mul sub dup 0 rmoveto 0 360 arc closepath  gsave 0. 0.2 0.4 setrgbcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true -2.84544 187.78827 267.45561 199.1692
.5 Frame  gsave 0. 0.2 0.4 setrgbcolor  1. .setopacityalpha  fill 
grestore end
 
@endspecial 5022 5222 a
tx@Dict begin { -48.36957 177.82964 } PutCoor PutBegin  end
 5022 5222 a 5022
5222 a
0. 0.2 0.4 setrgbcolor
 5022 5222 a 5022 5273 a
SDict begin H.S end
 5022 5273 a -1 x Fd(\273)12
b(T\355tulo)21 b(do)e(slide)6002 5222 y
SDict begin H.R end
 6002 5222 a 6002
5272 a
SDict begin [ /Page 1 /Border [0 0 0] /View [/XYZ null null null] H.B
/LNK pdfmark end
 6002 5272 a 5022 5383 a
SDict begin H.S end
 5022 5383 a -1 x Fd(\273)12
b(T)-8 b(abela)6002 5333 y
SDict begin H.R end
 6002 5333 a 6002 5382 a
SDict begin [ /Page 2 /Border [0 0 0] /View [/XYZ null null null] H.B
/LNK pdfmark end
 6002
5382 a 5022 5494 a
SDict begin H.S end
 5022 5494 a -1 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. 0.2 0.4 setrgbcolor  0. true 1.42271 neg 1.50468 neg 58.32822
4.3647 .5 Frame  gsave 0. 0.2 0.4 setrgbcolor  1. .setopacityalpha
 fill  grestore end


@endspecial 5022 5442 a
1. 1. 1. setrgbcolor
 5022 5442 a 51 x Fd(\273)12
b(Outline)20 b(of)g(the)g(talk)5607 5493 y
0. 0.2 0.4 setrgbcolor
 5607 5493
a 6002 5442 a
SDict begin H.R end
 6002 5442 a 6002 5493 a
SDict begin [ /Page 3 /Border [0 0 0] /View [/XYZ null null null] H.B
/LNK pdfmark end
 6002 5493 a 5022
5494 a
0 setgray
 5022 5494 a 5022 5222 a
tx@Dict begin  PutEnd  end
 5022 5222 a 5022 5222
a
tx@Dict begin { -46.94684 -25.60728 } PutCoor PutBegin  end
 5022 5222 a 5022 5222 a
0. 0.2 0.4 setrgbcolor
 5022 5222 a 5022 5222 a
0 setgray
 5022
5222 a 5022 5222 a
tx@Dict begin  PutEnd  end
 5022 5222 a 5022 5222 a
tx@Dict begin { 322.93881 -25.60728 } PutCoor PutBegin  end
 5022 5222
a 4849 5271 a
0. 0.2 0.4 setrgbcolor
 4849 5271 a 19 w Fd(-)f(p)n(.)g(3)5022
5271 y
0 setgray
 5022 5271 a 5022 5222 a
tx@Dict begin  PutEnd  end
 5022 5222 a 5022 5222
a
tx@Dict begin   tx@ovlDict begin InitOL end /TheOL 0 def  end
 5022 5222 a 5022 5222 a
tx@Dict begin 0  tx@ovlDict begin BOL end  end
 5022 5222 a 5022 3450 a
tx@Dict begin { 17.07181 102.43004 } PutCoor PutBegin  end
 5022
3450 a 5022 3266 a
0. 0.4 0.4 setrgbcolor
 5022 3266 a 5022 3266 a
0. 0.4 0.4 setrgbcolor
 5022 3266
a 181 x Fc(Outline)69 b(of)g(the)g(talk)7117 3447 y
0 setgray
 7117
3447 a 7117 3447 a
0 setgray
 7117 3447 a 5022 3450 a
tx@Dict begin  PutEnd  end
 5022 3450
a 5022 3450 a
tx@Dict begin { 33.28966 76.82231 } PutCoor PutBegin  end
 5022 3450 a 5022 4052 a
0 setgray
 5022 4052 a 5022
3450 a
0. 0.2 0.4 setrgbcolor
 5022 3450 a 5022 3450 a
SDict begin H.S end
 5022 3450 a 5022 3450
a
SDict begin 11.79993 H.A end
 5022 3450 a 5022 3450 a
SDict begin [/View [/XYZ H.V]/Dest (overlay.1) cvn /DEST pdfmark end
 5022 3450 a 5022 3450 a
tx@Dict begin  1  tx@ovlDict begin BOL end  end
 5022
3450 a 5022 3450 a
tx@Dict begin 0  tx@ovlDict begin BOL end  end
 5022 3450 a 105 x Fa(\004)5206 3573
y Fb(Introduction)5022 3804 y Fa(\004)5206 3821 y Fb(Statement)47
b(of)g(the)g(main)h(theorem)5022 4052 y Fa(\004)5206
4069 y Fb(T)-21 b(echnical)48 b(lemmata)5022 4300 y Fa(\004)5206
4317 y Fb(Proof)g(of)f(the)g(main)h(theorem)5022 4548
y Fa(\004)5206 4565 y Fb(Conclusions)5022 3450 y
tx@Dict begin  PutEnd  end
 5022
3450 a 10266 5222 a
tx@Dict begin -1  tx@ovlDict begin BOL end  end
 10266 5222 a 4500 6000 a
tx@Dict begin -90 Rot  end
 4500 6000
a eop end
%%Page: 3 4
TeXDict begin 3 3 bop -600 -600 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -600 -600 a -1211 -1817
a
SDict begin H.S end
 -1211 -1817 a -1211 -1817 a
SDict begin H.R end
 -1211 -1817 a -1211 -1817
a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -1211 -1817 a -600 -600 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 -600 -600 a 4500 6000 a
tx@Dict begin 90 Rot  end
 4500
6000 a 5022 5222 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true -56.90549 -56.90549 11.38092 256.07469
.5 Frame  gsave 0.6 0.8 0.6 setrgbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true 0.0 213.39557 142.26372 256.07469 .5
Frame  gsave 0.6 0.8 0.6 setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   25.60728 213.39557 2 copy moveto 14.22636 .5
CLW mul sub dup 0 rmoveto 0 360 arc closepath  gsave 1. setgray  1.
.setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true 25.60728 213.11119 153.92944 227.62195
.5 Frame  gsave 1. setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   -2.84544 193.47873 2 copy moveto 5.69046 .5 CLW
mul sub dup 0 rmoveto 0 360 arc closepath  gsave 0. 0.2 0.4 setrgbcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true -2.84544 187.78827 267.45561 199.1692
.5 Frame  gsave 0. 0.2 0.4 setrgbcolor  1. .setopacityalpha  fill 
grestore end
 
@endspecial 5022 5222 a
tx@Dict begin { -48.36957 177.82964 } PutCoor PutBegin  end
 5022 5222 a 5022
5222 a
0. 0.2 0.4 setrgbcolor
 5022 5222 a 5022 5273 a
SDict begin H.S end
 5022 5273 a -1 x Fd(\273)12
b(T\355tulo)21 b(do)e(slide)6002 5222 y
SDict begin H.R end
 6002 5222 a 6002
5272 a
SDict begin [ /Page 1 /Border [0 0 0] /View [/XYZ null null null] H.B
/LNK pdfmark end
 6002 5272 a 5022 5383 a
SDict begin H.S end
 5022 5383 a -1 x Fd(\273)12
b(T)-8 b(abela)6002 5333 y
SDict begin H.R end
 6002 5333 a 6002 5382 a
SDict begin [ /Page 2 /Border [0 0 0] /View [/XYZ null null null] H.B
/LNK pdfmark end
 6002
5382 a 5022 5494 a
SDict begin H.S end
 5022 5494 a -1 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. 0.2 0.4 setrgbcolor  0. true 1.42271 neg 1.50468 neg 58.32822
4.3647 .5 Frame  gsave 0. 0.2 0.4 setrgbcolor  1. .setopacityalpha
 fill  grestore end


@endspecial 5022 5442 a
1. 1. 1. setrgbcolor
 5022 5442 a 51 x Fd(\273)12
b(Outline)20 b(of)g(the)g(talk)5607 5493 y
0. 0.2 0.4 setrgbcolor
 5607 5493
a 6002 5442 a
SDict begin H.R end
 6002 5442 a 6002 5493 a
SDict begin [ /Page 3 /Border [0 0 0] /View [/XYZ null null null] H.B
/LNK pdfmark end
 6002 5493 a 5022
5494 a
0 setgray
 5022 5494 a 5022 5222 a
tx@Dict begin  PutEnd  end
 5022 5222 a 5022 5222
a
tx@Dict begin { -46.94684 -25.60728 } PutCoor PutBegin  end
 5022 5222 a 5022 5222 a
0. 0.2 0.4 setrgbcolor
 5022 5222 a 5022 5222 a
0 setgray
 5022
5222 a 5022 5222 a
tx@Dict begin  PutEnd  end
 5022 5222 a 5022 5222 a
tx@Dict begin { 322.93881 -25.60728 } PutCoor PutBegin  end
 5022 5222
a 4849 5271 a
0. 0.2 0.4 setrgbcolor
 4849 5271 a 19 w Fd(-)f(p)n(.)g(3)5022
5271 y
0 setgray
 5022 5271 a 5022 5222 a
tx@Dict begin  PutEnd  end
 5022 5222 a 5022 5222
a
tx@Dict begin   tx@ovlDict begin InitOL end /TheOL 0 def  end
 5022 5222 a 5022 5222 a
tx@Dict begin 0  tx@ovlDict begin BOL end  end
 5022 5222 a 5022 3450 a
tx@Dict begin { 17.07181 102.43004 } PutCoor PutBegin  end
 5022
3450 a 5022 3266 a
0. 0.4 0.4 setrgbcolor
 5022 3266 a 5022 3266 a
0. 0.4 0.4 setrgbcolor
 5022 3266
a 181 x Fc(Outline)69 b(of)g(the)g(talk)7117 3447 y
0 setgray
 7117
3447 a 7117 3447 a
0 setgray
 7117 3447 a 5022 3450 a
tx@Dict begin  PutEnd  end
 5022 3450
a 5022 3450 a
tx@Dict begin { 33.28966 76.82231 } PutCoor PutBegin  end
 5022 3450 a 5022 4052 a
0 setgray
 5022 4052 a 5022
3450 a
0. 0.2 0.4 setrgbcolor
 5022 3450 a 5022 3450 a
SDict begin H.S end
 5022 3450 a 5022 3450
a
SDict begin 11.79993 H.A end
 5022 3450 a 5022 3450 a
SDict begin [/View [/XYZ H.V]/Dest (overlay.1) cvn /DEST pdfmark end
 5022 3450 a 5022 3450 a
tx@Dict begin  1  tx@ovlDict begin BOL end  end
 5022
3450 a 5022 3450 a
tx@Dict begin 0  tx@ovlDict begin BOL end  end
 5022 3450 a 105 x Fa(\004)5206 3573
y Fb(Introduction)5022 3804 y Fa(\004)5206 3821 y Fb(Statement)47
b(of)g(the)g(main)h(theorem)5022 4052 y Fa(\004)5206
4069 y Fb(T)-21 b(echnical)48 b(lemmata)5022 4300 y Fa(\004)5206
4317 y Fb(Proof)g(of)f(the)g(main)h(theorem)5022 4548
y Fa(\004)5206 4565 y Fb(Conclusions)5022 3450 y
tx@Dict begin  PutEnd  end
 5022
3450 a 10266 5222 a
tx@Dict begin -1  tx@ovlDict begin BOL end  end
 10266 5222 a 4500 6000 a
tx@Dict begin -90 Rot  end
 4500 6000
a eop end
%%Page: 3 5
TeXDict begin 3 4 bop -600 -600 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -600 -600 a -1211 -1817
a
SDict begin H.S end
 -1211 -1817 a -1211 -1817 a
SDict begin H.R end
 -1211 -1817 a -1211 -1817
a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -1211 -1817 a -600 -600 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 -600 -600 a 4500 6000 a
tx@Dict begin 90 Rot  end
 4500
6000 a 5022 5222 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true -56.90549 -56.90549 11.38092 256.07469
.5 Frame  gsave 0.6 0.8 0.6 setrgbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true 0.0 213.39557 142.26372 256.07469 .5
Frame  gsave 0.6 0.8 0.6 setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   25.60728 213.39557 2 copy moveto 14.22636 .5
CLW mul sub dup 0 rmoveto 0 360 arc closepath  gsave 1. setgray  1.
.setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true 25.60728 213.11119 153.92944 227.62195
.5 Frame  gsave 1. setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   -2.84544 193.47873 2 copy moveto 5.69046 .5 CLW
mul sub dup 0 rmoveto 0 360 arc closepath  gsave 0. 0.2 0.4 setrgbcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true -2.84544 187.78827 267.45561 199.1692
.5 Frame  gsave 0. 0.2 0.4 setrgbcolor  1. .setopacityalpha  fill 
grestore end
 
@endspecial 5022 5222 a
tx@Dict begin { -48.36957 177.82964 } PutCoor PutBegin  end
 5022 5222 a 5022
5222 a
0. 0.2 0.4 setrgbcolor
 5022 5222 a 5022 5273 a
SDict begin H.S end
 5022 5273 a -1 x Fd(\273)12
b(T\355tulo)21 b(do)e(slide)6002 5222 y
SDict begin H.R end
 6002 5222 a 6002
5272 a
SDict begin [ /Page 1 /Border [0 0 0] /View [/XYZ null null null] H.B
/LNK pdfmark end
 6002 5272 a 5022 5383 a
SDict begin H.S end
 5022 5383 a -1 x Fd(\273)12
b(T)-8 b(abela)6002 5333 y
SDict begin H.R end
 6002 5333 a 6002 5382 a
SDict begin [ /Page 2 /Border [0 0 0] /View [/XYZ null null null] H.B
/LNK pdfmark end
 6002
5382 a 5022 5494 a
SDict begin H.S end
 5022 5494 a -1 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. 0.2 0.4 setrgbcolor  0. true 1.42271 neg 1.50468 neg 58.32822
4.3647 .5 Frame  gsave 0. 0.2 0.4 setrgbcolor  1. .setopacityalpha
 fill  grestore end


@endspecial 5022 5442 a
1. 1. 1. setrgbcolor
 5022 5442 a 51 x Fd(\273)12
b(Outline)20 b(of)g(the)g(talk)5607 5493 y
0. 0.2 0.4 setrgbcolor
 5607 5493
a 6002 5442 a
SDict begin H.R end
 6002 5442 a 6002 5493 a
SDict begin [ /Page 3 /Border [0 0 0] /View [/XYZ null null null] H.B
/LNK pdfmark end
 6002 5493 a 5022
5494 a
0 setgray
 5022 5494 a 5022 5222 a
tx@Dict begin  PutEnd  end
 5022 5222 a 5022 5222
a
tx@Dict begin { -46.94684 -25.60728 } PutCoor PutBegin  end
 5022 5222 a 5022 5222 a
0. 0.2 0.4 setrgbcolor
 5022 5222 a 5022 5222 a
0 setgray
 5022
5222 a 5022 5222 a
tx@Dict begin  PutEnd  end
 5022 5222 a 5022 5222 a
tx@Dict begin { 322.93881 -25.60728 } PutCoor PutBegin  end
 5022 5222
a 4849 5271 a
0. 0.2 0.4 setrgbcolor
 4849 5271 a 19 w Fd(-)f(p)n(.)g(3)5022
5271 y
0 setgray
 5022 5271 a 5022 5222 a
tx@Dict begin  PutEnd  end
 5022 5222 a 5022 5222
a
tx@Dict begin   tx@ovlDict begin InitOL end /TheOL 0 def  end
 5022 5222 a 5022 5222 a
tx@Dict begin 0  tx@ovlDict begin BOL end  end
 5022 5222 a 5022 3450 a
tx@Dict begin { 17.07181 102.43004 } PutCoor PutBegin  end
 5022
3450 a 5022 3266 a
0. 0.4 0.4 setrgbcolor
 5022 3266 a 5022 3266 a
0. 0.4 0.4 setrgbcolor
 5022 3266
a 181 x Fc(Outline)69 b(of)g(the)g(talk)7117 3447 y
0 setgray
 7117
3447 a 7117 3447 a
0 setgray
 7117 3447 a 5022 3450 a
tx@Dict begin  PutEnd  end
 5022 3450
a 5022 3450 a
tx@Dict begin { 33.28966 76.82231 } PutCoor PutBegin  end
 5022 3450 a 5022 4052 a
0 setgray
 5022 4052 a 5022
3450 a
0. 0.2 0.4 setrgbcolor
 5022 3450 a 5022 3450 a
SDict begin H.S end
 5022 3450 a 5022 3450
a
SDict begin 11.79993 H.A end
 5022 3450 a 5022 3450 a
SDict begin [/View [/XYZ H.V]/Dest (overlay.1) cvn /DEST pdfmark end
 5022 3450 a 5022 3450 a
tx@Dict begin  1  tx@ovlDict begin BOL end  end
 5022
3450 a 5022 3450 a
tx@Dict begin 0  tx@ovlDict begin BOL end  end
 5022 3450 a 105 x Fa(\004)5206 3573
y Fb(Introduction)5022 3804 y Fa(\004)5206 3821 y Fb(Statement)47
b(of)g(the)g(main)h(theorem)5022 4052 y Fa(\004)5206
4069 y Fb(T)-21 b(echnical)48 b(lemmata)5022 4300 y Fa(\004)5206
4317 y Fb(Proof)g(of)f(the)g(main)h(theorem)5022 4548
y Fa(\004)5206 4565 y Fb(Conclusions)5022 3450 y
tx@Dict begin  PutEnd  end
 5022
3450 a 10266 5222 a
tx@Dict begin -1  tx@ovlDict begin BOL end  end
 10266 5222 a 4500 6000 a
tx@Dict begin -90 Rot  end
 4500 6000
a eop end
%%Page: 3 6
TeXDict begin 3 5 bop -600 -600 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -600 -600 a -1211 -1817
a
SDict begin H.S end
 -1211 -1817 a -1211 -1817 a
SDict begin H.R end
 -1211 -1817 a -1211 -1817
a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -1211 -1817 a -600 -600 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 -600 -600 a 4500 6000 a
tx@Dict begin 90 Rot  end
 4500
6000 a 5022 5222 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true -56.90549 -56.90549 11.38092 256.07469
.5 Frame  gsave 0.6 0.8 0.6 setrgbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true 0.0 213.39557 142.26372 256.07469 .5
Frame  gsave 0.6 0.8 0.6 setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   25.60728 213.39557 2 copy moveto 14.22636 .5
CLW mul sub dup 0 rmoveto 0 360 arc closepath  gsave 1. setgray  1.
.setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true 25.60728 213.11119 153.92944 227.62195
.5 Frame  gsave 1. setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   -2.84544 193.47873 2 copy moveto 5.69046 .5 CLW
mul sub dup 0 rmoveto 0 360 arc closepath  gsave 0. 0.2 0.4 setrgbcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true -2.84544 187.78827 267.45561 199.1692
.5 Frame  gsave 0. 0.2 0.4 setrgbcolor  1. .setopacityalpha  fill 
grestore end
 
@endspecial 5022 5222 a
tx@Dict begin { -48.36957 177.82964 } PutCoor PutBegin  end
 5022 5222 a 5022
5222 a
0. 0.2 0.4 setrgbcolor
 5022 5222 a 5022 5273 a
SDict begin H.S end
 5022 5273 a -1 x Fd(\273)12
b(T\355tulo)21 b(do)e(slide)6002 5222 y
SDict begin H.R end
 6002 5222 a 6002
5272 a
SDict begin [ /Page 1 /Border [0 0 0] /View [/XYZ null null null] H.B
/LNK pdfmark end
 6002 5272 a 5022 5383 a
SDict begin H.S end
 5022 5383 a -1 x Fd(\273)12
b(T)-8 b(abela)6002 5333 y
SDict begin H.R end
 6002 5333 a 6002 5382 a
SDict begin [ /Page 2 /Border [0 0 0] /View [/XYZ null null null] H.B
/LNK pdfmark end
 6002
5382 a 5022 5494 a
SDict begin H.S end
 5022 5494 a -1 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. 0.2 0.4 setrgbcolor  0. true 1.42271 neg 1.50468 neg 58.32822
4.3647 .5 Frame  gsave 0. 0.2 0.4 setrgbcolor  1. .setopacityalpha
 fill  grestore end


@endspecial 5022 5442 a
1. 1. 1. setrgbcolor
 5022 5442 a 51 x Fd(\273)12
b(Outline)20 b(of)g(the)g(talk)5607 5493 y
0. 0.2 0.4 setrgbcolor
 5607 5493
a 6002 5442 a
SDict begin H.R end
 6002 5442 a 6002 5493 a
SDict begin [ /Page 3 /Border [0 0 0] /View [/XYZ null null null] H.B
/LNK pdfmark end
 6002 5493 a 5022
5494 a
0 setgray
 5022 5494 a 5022 5222 a
tx@Dict begin  PutEnd  end
 5022 5222 a 5022 5222
a
tx@Dict begin { -46.94684 -25.60728 } PutCoor PutBegin  end
 5022 5222 a 5022 5222 a
0. 0.2 0.4 setrgbcolor
 5022 5222 a 5022 5222 a
0 setgray
 5022
5222 a 5022 5222 a
tx@Dict begin  PutEnd  end
 5022 5222 a 5022 5222 a
tx@Dict begin { 322.93881 -25.60728 } PutCoor PutBegin  end
 5022 5222
a 4849 5271 a
0. 0.2 0.4 setrgbcolor
 4849 5271 a 19 w Fd(-)f(p)n(.)g(3)5022
5271 y
0 setgray
 5022 5271 a 5022 5222 a
tx@Dict begin  PutEnd  end
 5022 5222 a 5022 5222
a
tx@Dict begin   tx@ovlDict begin InitOL end /TheOL 0 def  end
 5022 5222 a 5022 5222 a
tx@Dict begin 0  tx@ovlDict begin BOL end  end
 5022 5222 a 5022 3450 a
tx@Dict begin { 17.07181 102.43004 } PutCoor PutBegin  end
 5022
3450 a 5022 3266 a
0. 0.4 0.4 setrgbcolor
 5022 3266 a 5022 3266 a
0. 0.4 0.4 setrgbcolor
 5022 3266
a 181 x Fc(Outline)69 b(of)g(the)g(talk)7117 3447 y
0 setgray
 7117
3447 a 7117 3447 a
0 setgray
 7117 3447 a 5022 3450 a
tx@Dict begin  PutEnd  end
 5022 3450
a 5022 3450 a
tx@Dict begin { 33.28966 76.82231 } PutCoor PutBegin  end
 5022 3450 a 5022 4052 a
0 setgray
 5022 4052 a 5022
3450 a
0. 0.2 0.4 setrgbcolor
 5022 3450 a 5022 3450 a
SDict begin H.S end
 5022 3450 a 5022 3450
a
SDict begin 11.79993 H.A end
 5022 3450 a 5022 3450 a
SDict begin [/View [/XYZ H.V]/Dest (overlay.1) cvn /DEST pdfmark end
 5022 3450 a 5022 3450 a
tx@Dict begin  1  tx@ovlDict begin BOL end  end
 5022
3450 a 5022 3450 a
tx@Dict begin 0  tx@ovlDict begin BOL end  end
 5022 3450 a 105 x Fa(\004)5206 3573
y Fb(Introduction)5022 3804 y Fa(\004)5206 3821 y Fb(Statement)47
b(of)g(the)g(main)h(theorem)5022 4052 y Fa(\004)5206
4069 y Fb(T)-21 b(echnical)48 b(lemmata)5022 4300 y Fa(\004)5206
4317 y Fb(Proof)g(of)f(the)g(main)h(theorem)5022 4548
y Fa(\004)5206 4565 y Fb(Conclusions)5022 3450 y
tx@Dict begin  PutEnd  end
 5022
3450 a 10266 5222 a
tx@Dict begin -1  tx@ovlDict begin BOL end  end
 10266 5222 a 4500 6000 a
tx@Dict begin -90 Rot  end
 4500 6000
a eop end
%%Page: 3 7
TeXDict begin 3 6 bop -600 -600 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -600 -600 a -1211 -1817
a
SDict begin H.S end
 -1211 -1817 a -1211 -1817 a
SDict begin H.R end
 -1211 -1817 a -1211 -1817
a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -1211 -1817 a -600 -600 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 -600 -600 a 4500 6000 a
tx@Dict begin 90 Rot  end
 4500
6000 a 5022 5222 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true -56.90549 -56.90549 11.38092 256.07469
.5 Frame  gsave 0.6 0.8 0.6 setrgbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true 0.0 213.39557 142.26372 256.07469 .5
Frame  gsave 0.6 0.8 0.6 setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   25.60728 213.39557 2 copy moveto 14.22636 .5
CLW mul sub dup 0 rmoveto 0 360 arc closepath  gsave 1. setgray  1.
.setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true 25.60728 213.11119 153.92944 227.62195
.5 Frame  gsave 1. setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   -2.84544 193.47873 2 copy moveto 5.69046 .5 CLW
mul sub dup 0 rmoveto 0 360 arc closepath  gsave 0. 0.2 0.4 setrgbcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. setgray   0. true -2.84544 187.78827 267.45561 199.1692
.5 Frame  gsave 0. 0.2 0.4 setrgbcolor  1. .setopacityalpha  fill 
grestore end
 
@endspecial 5022 5222 a
tx@Dict begin { -48.36957 177.82964 } PutCoor PutBegin  end
 5022 5222 a 5022
5222 a
0. 0.2 0.4 setrgbcolor
 5022 5222 a 5022 5273 a
SDict begin H.S end
 5022 5273 a -1 x Fd(\273)12
b(T\355tulo)21 b(do)e(slide)6002 5222 y
SDict begin H.R end
 6002 5222 a 6002
5272 a
SDict begin [ /Page 1 /Border [0 0 0] /View [/XYZ null null null] H.B
/LNK pdfmark end
 6002 5272 a 5022 5383 a
SDict begin H.S end
 5022 5383 a -1 x Fd(\273)12
b(T)-8 b(abela)6002 5333 y
SDict begin H.R end
 6002 5333 a 6002 5382 a
SDict begin [ /Page 2 /Border [0 0 0] /View [/XYZ null null null] H.B
/LNK pdfmark end
 6002
5382 a 5022 5494 a
SDict begin H.S end
 5022 5494 a -1 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0. 0.2 0.4 setrgbcolor  0. true 1.42271 neg 1.50468 neg 58.32822
4.3647 .5 Frame  gsave 0. 0.2 0.4 setrgbcolor  1. .setopacityalpha
 fill  grestore end


@endspecial 5022 5442 a
1. 1. 1. setrgbcolor
 5022 5442 a 51 x Fd(\273)12
b(Outline)20 b(of)g(the)g(talk)5607 5493 y
0. 0.2 0.4 setrgbcolor
 5607 5493
a 6002 5442 a
SDict begin H.R end
 6002 5442 a 6002 5493 a
SDict begin [ /Page 3 /Border [0 0 0] /View [/XYZ null null null] H.B
/LNK pdfmark end
 6002 5493 a 5022
5494 a
0 setgray
 5022 5494 a 5022 5222 a
tx@Dict begin  PutEnd  end
 5022 5222 a 5022 5222
a
tx@Dict begin { -46.94684 -25.60728 } PutCoor PutBegin  end
 5022 5222 a 5022 5222 a
0. 0.2 0.4 setrgbcolor
 5022 5222 a 5022 5222 a
0 setgray
 5022
5222 a 5022 5222 a
tx@Dict begin  PutEnd  end
 5022 5222 a 5022 5222 a
tx@Dict begin { 322.93881 -25.60728 } PutCoor PutBegin  end
 5022 5222
a 4849 5271 a
0. 0.2 0.4 setrgbcolor
 4849 5271 a 19 w Fd(-)f(p)n(.)g(3)5022
5271 y
0 setgray
 5022 5271 a 5022 5222 a
tx@Dict begin  PutEnd  end
 5022 5222 a 5022 5222
a
tx@Dict begin   tx@ovlDict begin InitOL end /TheOL 0 def  end
 5022 5222 a 5022 5222 a
tx@Dict begin 0  tx@ovlDict begin BOL end  end
 5022 5222 a 5022 3450 a
tx@Dict begin { 17.07181 102.43004 } PutCoor PutBegin  end
 5022
3450 a 5022 3266 a
0. 0.4 0.4 setrgbcolor
 5022 3266 a 5022 3266 a
0. 0.4 0.4 setrgbcolor
 5022 3266
a 181 x Fc(Outline)69 b(of)g(the)g(talk)7117 3447 y
0 setgray
 7117
3447 a 7117 3447 a
0 setgray
 7117 3447 a 5022 3450 a
tx@Dict begin  PutEnd  end
 5022 3450
a 5022 3450 a
tx@Dict begin { 33.28966 76.82231 } PutCoor PutBegin  end
 5022 3450 a 5022 4052 a
0 setgray
 5022 4052 a 5022
3450 a
0. 0.2 0.4 setrgbcolor
 5022 3450 a 5022 3450 a
SDict begin H.S end
 5022 3450 a 5022 3450
a
SDict begin 11.79993 H.A end
 5022 3450 a 5022 3450 a
SDict begin [/View [/XYZ H.V]/Dest (overlay.1) cvn /DEST pdfmark end
 5022 3450 a 5022 3450 a
tx@Dict begin  1  tx@ovlDict begin BOL end  end
 5022
3450 a 5022 3450 a
tx@Dict begin 0  tx@ovlDict begin BOL end  end
 5022 3450 a 105 x Fa(\004)5206 3573
y Fb(Introduction)5022 3804 y Fa(\004)5206 3821 y Fb(Statement)47
b(of)g(the)g(main)h(theorem)5022 4052 y Fa(\004)5206
4069 y Fb(T)-21 b(echnical)48 b(lemmata)5022 4300 y Fa(\004)5206
4317 y Fb(Proof)g(of)f(the)g(main)h(theorem)5022 4548
y Fa(\004)5206 4565 y Fb(Conclusions)5022 3450 y
tx@Dict begin  PutEnd  end
 5022
3450 a 10266 5222 a
tx@Dict begin -1  tx@ovlDict begin BOL end  end
 10266 5222 a 4500 6000 a
tx@Dict begin -90 Rot  end
 4500 6000
a eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
