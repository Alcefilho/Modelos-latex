%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: teste_powerdot.dvi
%%CreationDate: Mon Nov 18 17:43:27 2013
%%Pages: 4
%%PageOrder: Ascend
%%Orientation: Landscape
%%BoundingBox: 0 0 594 792
%%DocumentFonts: NimbusSanL-Regu NimbusSanL-Bold Dingbats
%%+ NimbusSanL-BoldItal
%%DocumentPaperSizes: Screen
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /usr/bin/dvips -o teste_powerdot.ps
%+ teste_powerdot.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.11.18:1743
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.17, 2013/07/08
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def

    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 

  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 801 2013-07-09 18:10:41Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.04, 2011/10/21
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 713 2012-10-16 14:25:00Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.03, 2012/10/16
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { 
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get 32 ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ rightTrim psStringwidth } bind def

%/show { rightTrim psShow } bind def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

/landplus90 true store

%%BeginPaperSize: letter 
letter
%%EndPaperSize

 /landplus90 true store
 
@fedspecial end
%%BeginFont: NimbusSanL-BoldItal
%!PS-AdobeFont-1.0: NimbusSanL-BoldItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold Italic) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle -12.0 def
/isFixedPitch false def
/UnderlinePosition -111 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-BoldItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-177 -309 1107 953} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8CB756BFBA4D5AECF4BE5E
CD4699C683E5E6E065CEDD296F8EEF1D3836662A861996EE78FD9D22FF3AFF04
47A8B7FD0FDD2F2867810E1559355E99439DEFA982006CB3C153627A15770AD3
9B9DEFFC210261733003C864223974E842F5C50DC4466F905B826F103F09117D
A18CAD1CD1C450EDBC35A1DDB1411A6B70DD82C6D263F9668A53A8D5BE4523E4
310D3C300046B7ED546245ED686428447BD857D2FC5D2F7C13359F95FBDBF0C8
65FE137C5706D12E3756C2E2722EE193DCB95928742FF603D2F8DCAC9381C8A6
93C435D832691D9F03E2D49FA26C67CE66F45C0097819521128F868EC3DC1848
830DC53D7ACDEADD8DB05EDA4C465B0FA706A05E17091D994579C89890897F2F
847729712FDDCD476D4122751B5485A0292278490A7F09E311F6188F2AC426A6
8702FBCFBC3BE34A3F6B57D45EE25F3332FF220108296B151895D06BED1D9B82
1C9EB7946197ACA04E7EF6F89DF820042478B5146078201573D3E0C5CBA457CF
17E17C8CE317F8047C0A8941039B7255CF90F60D51E1ABE0CCD86BE3F28B1F64
F6DDB25DB89A6A408985414BD11EEC5DE5200200999929ABABD227CEA73D9A47
75083D96B0469B6CBA06BE5ABB69368254BA6A28520DF69BEB167A68E5FD9F55
79139771FF3CEA9690EBC0759A11CCC3FCD5501A83B2624A5E8BC33B04E27901
EF48523C4779D9317A295FCC99B62A4BC9C8DAEE06FDE9B482A53B7D889A9FA0
379669AD9D9DFE63D85FB36204B0C56B563C813D8FE5F96EC166CBCA4110D1F8
197928ED01932308A1C9F4C8CA95E5EDC2BFF60C929F02AE87F5D62290D83B30
45AE7B8381255F8C39C370F9E9B0E4820B4185F2DB8FDFA795D4E0F57AF743C4
A1453AF3FFC96A7F864470FEE912C7A16BA596C8D1286A8B9D15CAA534860B07
AA63CC8D12DCF1F26DB6592515EBD6F73A7F35FE4A39D446D9A1DBD506B3AB71
5F5D607CF07E8D1473EA7C297F544EE73EF6325002CB5D72BD92E6CA68CE057C
C38194BD297ECFAAE5B7CEB07C82E1DE1E43A042E4D7193F90BC0CB3045F8AE6
4A629F07C1D9511B1C94088CDE1323C6040FB8F2D25253C4FC094C977A0E0253
2671082D805DB8A97697501B6A40A3AE9D5DD8786EFEB0341790224929C26CD5
771AE5B8DF1546675AE16824DD84B6CA375598B6C439A2E9080DF52F752A1A31
2D0D8462C9389D0D7275D2BAF230974301B03EADCF209219746A94A779EE401A
8ABFC9439A37411A466AF67E5372FE007CDC6DD09BAC36B73CE97C83E306D223
CE7774FA5AF973D985C510ACB27DA792815D9824F41E81BB30EA67F5A9C6A15F
5941D6326BFD00F8E2C46B4C975ACACB7A8A5A254D0256ED62F1BB2FFFE276DB
12DF81F103DAC3E3782B5D2F897CEF40BDB87367D2BBF7925050F10F1BD5052D
5A147F0A784F0C5A4E1934FBA251CA55B73D71DCCE571E2D40180A087B0A5E2A
061E3881605DC027E32D9B04AB97510C130D8B0F9E0F9119FAC6A3957734F06C
046670BF3272A4D0BE62811BBE508DC0A9589D680157607838F4C4E1B0003D1F
84E8AE202EEC56923F247467259BADF061BF5F70E4BA0CD7D2227F59C9F15F90
00E546E4D972CAA80BDB3B8DE0E5509ADAA7E4CF249C4D6BE413BB4D85E540A2
DBD430F2E132E498A333D20D4CD01885C2AF1FA17CD5DC6C38DBE45A07EAD837
166627BCFFAD92E81D09228398FCDA1672F107191BD84EACA3B6BB0E0B6F65BE
4FFEC813191E6ECB0057E4133240C63B1F4469685B58774F0C9603A69578745B
5D0A6C4A66782250CD711EAC252F6BFB5CBEC411EEBD07899B755DAC1126CE5C
F71C5BC87FBCE94F16964E6C441331B58C90BEDA80A20AFD465BBEF379A1F1FE
5E41BDF8E59075D83082AB0165E1ABE3BBE8E8134F7F93A3B0759E3C725F8934
D93522395D3A6E168B7BC85A1F6D3F7CDA424750AF8261DC431EE9DEFABD0DB4
DB4CBD2908537122BFBCD3D6428CEA94605EF6283222A4FE45E411657A641435
55666C8D90A399CBD792FE3855F316DC33187662B519FBA3F4A99F6455C16804
35B965ACFF8567327FCE6E1DAABD585F3561FC58B2580B83DC0102166269AB6A
4B11167C0322F52C3B92C29F8FD050130FF7C7D8E436E7AAAD7EEB1D3A316488
8AFBB114923D8E28FC591F57EAB89E23E9B06A948F46D6E175C5B6F56199CC18
BAC2394BC9355CD59870B8C57F2F7EEB6B877B917E045BD9FB3F8086075CAFAA
40CDA782878DCD1076B689744712F5F7235A497AC316B10038C608B4DDD70D18
756D0FADC205A0A26BCB8C098ACA6C8E1A94F6DC022954AD5D7484716FFDE7B8
82CADC56552345D6918FB26913EA6DF16B0DC337D4C5A33C6F9166B40073D812
FAA296FFA024D08E5035473CFDA53A98C95121DC506F9AF778B4A8AC4B74D356
F94193EE7169D5E49A40350056C19A1856B9B2EF42FDEE525DA4029769A97FE6
64D88B56E6F9CEAE61FBB850C398377A8B3FD9AE351314503CFFFCE5CCF041A0
2877B76050B071A91E08E1C53C079B8BEAA3E0F907086AA23BCD6FADDD94D102
67153A360C9C94BD89DFADB57108933733B21B7083CFA90832EB06617471F083
99B1453DFBE89D65A3FB2AE20A0FB0174DCA76C3D68D88D2F2935BA717B9867B
FA5919E89D2FCC64BF35AFFF0049771DDF87261D9362D178064525829DAC0742
8DE60AB7D64516D85E36EB815ED98DF3323EB26FECFB33D497038A1F42082A5A
ED5538D460D3D8BD57CC16B87F75A33EFEF432A1E2A8E5FC47B8C07627DA6D9B
428EC87CBB3C562FFEF9B2331C9C08200C68004FBBD05EAB603FD46909A3D892
F83A2264C4FF6698453B144FDC93E5DD2F33705FA9D7CFB97ECCA41098851C43
48C3109D0671951505993DFCEFAA29D975C05EF8A7BB32F7D29BB5955814EA22
6DAFAD36D8E12B42C07DC2A43FAAC36B2BE303195268BE490C9E1F0C7960159D
5B6A6B2C99639E5503225D0455FB1AF8BC56D7731B980EF3C793B89AD3612894
309F1DD1EA834AA6EAAA6AC1C3C44CD71E21CC2C1E619079CAF0DAD562E249FC
2F1392F7F378BB1754A2E80DE0DEF3D4AE8A51341B0180318EA687E26C2C2596
1B1FC747CB9FFA793EB3D7BA51638B64D8051BFE07F6ACE30051D6E7D675585F
E40608490B7D805D2C1338585613C51CA8C182C1D459885849D2908B2DA4B491
536CEF9D619E02598F7B8F34DF89EBFA1327FCFA6AD3E3CBF947734D938D1D0C
1CA599D7AB0E92E04D408557F33FB87AAC08C131179F91F4A95B7228F433886B
EBDCB27E2EBD7D2BAF2EA0654CCFCC38BDC904EC6DFDDB7DBD23D243207A77C6
232F3867C1EAAA0C480B9E90024BF68A2E3A6FB154D9950842DDC0F079661CC8
05A1C802536EB02D8A38145D448FE5AC54C636EB03A9E366815E24C1ED04230F
C96AC01FBDF1F303FCAC7ACC65374A9B26C3AEDB5A74D6143EEAFA6D48E16F42
70FDF0A6FEB65DCA7F35251DF39CEE0E8E6608F2C9138172583CA3BFA6981B90
E048354FD3B412D1FC57969FC673E530557FA2D3AFACF9E9C512CA317372060A
ACB1AA7D7D6159E8D91210F088F6B1523DB565BBC3A1EE19170598C4E94B5A82
4C94585627073E848B2EC0BCAF8A92EA62C79C0B1A000558AE86E26AF1BD5E59
D2A7C1C28E6E823E0E6CD2F435AA4F6E1226A5379E5BDA5B7C80281E3B8177E3
0458C0E8F57E41C25DAE52553D82942B1302FD3BADDE29F623EF50C9B12A357D
33588CC643C22513C6F69FDE343CE33E17013D44C3A601C49F3450F08A2F61C1
9EE2E4F1055A0440994BA63C5B8BFC1812A1DFA94AB358DDA188EE1CA33568D4
14E6E4D92A5FC32F5BAC912C731F1A77DBFF85F253CCA5959665E40FE323256A
366A45877CF940C0059301D87997A1B6DE54F405706C2C4248C626E64E16033E
C03304518C35E55502546E62683AA356366E9EAD1F056CEC4952227A4ED3148A
A8F2010F195C2FF5BF9007CD86D2AA045ED8F5B22144D82C90F5D0FF22661F2A
720B37C4B2DCB7F7A15864E73339C9C226315FA06F66D2F6C2A3A0DC33461633
5E5AF1AE9BAE0E79154801E7BC5E2DADABDA6E00AE7B6B014EAE4E5530E48A62
0A297B211C3996726C2BD5AA99752F7D421418D3F7BEB8183EA2211316C0CAAF
127E30074617CCAE2C565E841B4098228FC912FAE8BF0A3850A62EEE6A848998
66CE0533B63DFA6C31BFB9631331E3B76A28306EB1C400E3A42F6FEFF2E16181
F1AE6A191FE3705106F31FF5EB40404D4E4A705DA97205FA28F08125F8A50D16
8E91C696A57C7221C60815E15F95430E5ABE51E434C7AD76309AAC913C024151
0A754D9AEC6023939F56F9162BA8B3204BA1E5446B31CE005A995647F750508B
0076DF1F1607FC773FA937A248D6B91A6FB05DCC02A67AFFD8C3D3D4D5A4075E
0BC6F094E99242400E3949DA8E00269B97CA0C9CA56A7EF0A03152F97C5DDE33
31323D52A2914E2DC4C43379B38C4E7AC73BDE3CE7AE45AB1C54FA98757E333B
931841CD3E758C9EA30B0A6A13825F7E788509654E582DF756C4F771A8190167
1639EBA642676E2F82623A3B8CF48D6D2A02D293F7C944AA011567446042C0D6
0734A574F7C11E351D7188B94FB572FE62F4703AB966DEFE4DB94747995F8D49
12C3360844AD12B1F289EFFE384B94A8A7F314CDC0E477C500A7DEAD963F25CD
4405C722B00404D43FDFBF3FD11EFC363DB28AE5EB4C67812757A1EF9C33F572
F221C6167E73E9B60B21CA26538AC36481229891A689CB8855AC2016EF05B726
099ABBA1F76ED06C85C5B8042D50FD4A7194CCAAE06B7836A0A8E68CFFA780DF
EC1B2DE27EBAD1BAAB063D48C7A4A0E3C623E41D496A78F5CF34B3DDB307AEAA
4DB64383828603A74672FE40570960B94730BEE4FCEAE8B1418E0A2ACDAA1CEA
6D6C4484B051300C269B20CA239ABF00DB7D8E1A7DB1E86B93187E885AE2C67A
85AA05E8C629A51895DDE3615B9F1E6134534A315CF63227EF736D80890C9DA4
E53930BB5B91FF2778A1F6862557AB5F1B0A2DB919877CDA6FDCC8CCDEF2831F
90683DFFE131B046790AFD792C551BA0BEA5DA5691605EE9FACC763141BB17A9
6BCFC81274142D452C210D2B963D495490F7D4F3C059CECBFBF7F20EC5431691
AB8317D0A30CB45AFFCA8482A6D3614B221905B483955991F3BDB7177AD13913
7E1E992023356C5C546DEE5401E27E8F48B33D4A2CB9347E2251CA8F23E262B3
7BE40BB7564DAA2B4C8C83C3AD69E73F91225BD1B2620C33BFFBA32C764E0B6B
9844982548010F674CE76B84958B2A9201A9C1F64911B8B8DA857D94656FC7C0
EB5FDB7B8E943044C70A2ADCC530D0730C0D910444968FBB354F9117B279DC95
95481C820777384E88716DAEE2D51079D9B1FD41E30A5D2EE095EAC9AAAF3616
C49C07BEDA6A2349283F0AF62704F47A95484799C58A664D4ADEDF7B74E13E6D
85E03E615A60A2A9EB5034DACDEA2AE6C8D0C0CBAF7A73BF883DD295D925026D
BA3AB39FC05FA6C191F7A83C324AF0629A269BC6AE9386B024738B7B93D0E760
1F1419BF36A9CBBBDF300434181D07BB156DE7712A41673F44DA2E1E7D41DA67
67F681A94BDE6B38446C79B1116608A0A6190D8FA1521F3278B0A63B0039BE04
F565F97B92089729FAB0CA8DC89590EA860E366E61FAC5397F2A5132DBF20C70
EFFB0132D5F48E5D9673E98CDC86FE98754DC46E05CC3C00192FB2E31537681D
B0EA2EC41EDB1D6838ED5265271E6E9F502C749448A02A8D2141EC362EDFCF15
18F09618562CDB8262AA047D0135F17DE0552ADA3E14BC8FE41B9C89C798801C
81A60D0ACACD80CD55F783DD5619D3FEB7C0ACA919D8916EC55B12B4B2B162B1
5E46D115F7368F92809754E1B38FAA86361206311A82EA9304004C0CD834413E
D97E3AFFDC5ED20E44F1A3B80EFEC1A068C16DF069C6AFF859510C38F1649B16
7324C7F50DE7357D59508879AA861D21E3DEE62C9AFF56E24FE5EF7E183F380D
97B4006DC4527CBFC2A38B92C3CBC8498CF1AED08B2CFD632B028F5043378F2C
EE2FD3A5F958A84085FBCFD19DFD282B79BC3FA1308AE4D972D368412B3F534C
19C4FC06AE956E9BBCAD2750F950A97CCACB16184927600DDE0400E25D70A165
C41C963ADD3C16C08B047148E29DF352ED5CF75BDDDDC5C657C30412851F384D
58441E7C47409F9955A5F986792A9A532A927B8F2E8DC422C9522EBFB01EDDCA
CAAC4689E0EE6B6610ED08D818D0AD31CED9C5DEF28287EC1B5E8CAB530416EC
A7370CA120A0932B65C1FF7709A37CF8A6D01A6F5E3DD5933FC255145D67DF63
8A304040D98B791A736B17F10612B0E213E0D954CB01316D68838425740331F1
85D635725F33631B371D6993074040D1BFC0B8FF6F39128546B40BDEF5AF5FBC
76D0EC5285820EC0A5C1C51C45D1ABC9A5E5DB0F5ED8762FDB9D9480A3EA27E9
E29F66ED8DA272ACA728AFA9154FCA457A7AE998377A8B68926E22A468A264C5
DA1248ADB3D9C7183B8E3DC47D0EF16ABE6C8DD2ED04937499431E43BC5D5599
0C0F153BDBF3E53E51B2E390EBA3EE6E42094C9CEA50E5C61274F88D21E1BA9B
4C0C0FE29E6DD2F4C9A97ABEA032D04CA0243AF9A2F8B81D3F90F7C8C207A206
4614874CD382F8CFC66CCCEFCA1939FE879B7833FDEF832EB1D63D56999C746D
BD11DE3CC8F425FBC4776DAA4FBF05D414788D82080DCC46A9885F8570C9A8EE
4B6869E8F9F5DE7DA88E145721296959F483F5FABA7A03BF1C3904DF7601CA43
1969CE24728D273067DE07B958812CEC6B9DA76B6805FF4FA0E8D4B5AA1CA2A8
D8004ED91C00B8706C035BB797DD74DCA8EF33DE988FD370B0498F22E85D64FF
74FC6AEEC1C267FF9BA15607A87E84868EEFA3A80DA3C6A20FC530C27E5FDC28
7B032041259ACA2D42FCC78C30FA81BC81C7B1E4411FFE5336EE2AC3707060C9
24A8DD20871C57E08D6CF69B490E801D30B1357C343280C6AED441B83227CC2A
A88C049D2D3B44BB161014EEA4DCDF3E4AFB32361ACA7D8E7FC8E2BA0BFB39C6
27A145429FDC16D9EC57C16EB364ECEA4E7DDD253666519294BC83B2343A4A4D
C1C5E048BDCCBD4F3CC69E5A89353C1329F91FF6E05ECF3F0ECC90BB04D1C99E
696C46418498010844F3A3313B50A003F51598755C433D4E18A02ABAFD583B6A
ED4991A36B8546CE2B9ED2E690C3B5F15AF0D165DE3D94B97579D351D721B4B3
420B3A67F326830CAA3B8CEF92D1A967922AB0930B4FF5075BC4DF7C639F175E
EBDD6E63EBC4579B17277509BA69D1E1CFBF01185D0FF73D7A4757AE6442B176
D3794428C3BC8C59D8CC070E584DE6D4BFBC9E9E30ECCF2E29E754951A669502
11321C290310DDF8C50183446B34535D7B61CB982B7516FE7385E281570AE73D
35C710E2591790CA9315308368
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Dingbats
%!PS-AdobeFont-1.0: Dingbats 001.005
%%CreationDate: Tue Oct 19 1999
% Copyright URW Software, Copyright 1997 by URW
% URW Software, Copyright 1997 by URW
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (001.005) readonly def
/Notice (URW Software, Copyright 1997 by URW. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright URW Software, Copyright 1997 by URW) readonly def
/FullName (Dingbats ) readonly def
/FamilyName (Dingbats) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -72 def
/UnderlineThickness 36 def
end readonly def
/FontName /Dingbats def
/PaintType 0 def
/WMode 0 def
/FontBBox {-1 -143 981 819} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 118 /a79 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB737CF9024F3D038DF9A0002D
8FB689C5F5000C3ADDAFE55EDCBC4E54B36A58190743E32FDCA7A24B64F5E7F9
DC901DE44A25E99E322B3D3CBC10C0412B0531B14E81134FD1DEC47BCB7514E4
64E7550B900404A017C92336BC792744F6F38904282AFE8C998D4B9DB7893830
A6A01872E9D6AABF66C4B08716A39BD9E5ACC0641E506B70430524E780517E59
81EAECFCF9798A634318B8D160438435B65CC6910E609F13A4963AEF2B2540DA
DDD64E0E1D15EFDD5D36D4FCD9E4D81E21D52784DD3DBB741AB5FC052F481B1A
A701AB81CF4EB85075726F3FEC0872C02EBF4D62F5DFB8990C1A0CC8161F83A2
D01108B6C4AEC3845BB4F61288F733429B7B558A225D582AC04BEBF127E8DB14
B59F027502AF59E46E0063B792D35B2DA4EE7DC3F2A64DB325318C1CB1A57504
3527B10BDC733305E18032A64A1002439BE13D163AEE778CAAF5A7A8D00CCCCA
673B8FA9A99551594E85F21580733527E4E19743F4C932D443625DB353CA959B
FBB3BC7996F1F3559E8738D7B3FF1FC8AAFD28CE8C9CDF3CC10A8E7DCE003893
8BB497D690310A0380F290601BE482029578B45097DBD56F52352D7F931A1A1C
735A74CA33FC62A04E1D1E1B023877B96EA2AE6E5E42682E9F4BABD109F039E3
CDCC6B0F9404DA157F91B61905B34C39BD0543872FEBA04FADF1DD613E1E9822
560851385E512B3754A099D21B332D2C9547EEE2B94EBC03B2D954DE0D64D28B
5C0305C968BF1EA14529BE16F9E7F147B08D71B9332ABB7B5EF1B8B60A8D19F5
22B497164EA1A20E17E9B45FE94A09D54FA74709C83B0824F96BC972F4FD728A
B2D047A3443B11FC9A0751C986E879F8C4717D2947A3FB6132A0F2D7A05A762D
5743C7C4F85F25EB6435F15668EFDEE4DF029C456CA629D71EF785BA7AF5E7C0
F3BCC254B61FF3AA6CCECC5D930E5956E54ABFCA4A52FE92CDE08588376DB431
ED9FDB05901DE8C76D0D6FD86D9E102C4FDE3027DBAE20C5F55918DFB99CA7E4
4B6E83F6C96384D58F8206078ABFBB941D9DA29C220E44FABC8BF7115CD3916A
738CC3EDD793D135136E7D1D115579FA254432CB3BEF1920842586EDC17C89DA
D63A360EAF9EFFDE2E64F9EB637C2BB55E3443F87265F2EC34F697FDCFB7A7CE
AE841210D237074AFFCD37C420
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/UniqueID 5020902 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748077
007FD438B06DDAB3FFB1F9D7B6EB9CD9CB93AFEB623CD88FAC90AB5CA2103CC4
1D7FD19120E08EB1F262505F3044B5DF2B54470365EF430A4DB803E6E32DE2FE
CF6C0E46C648C69264CC247ECC61EE8662CD6468E1F016AADC734D41446B78E8
9DD68A904FAAFF589F75C1C940C0650B54BACE7FA6FD2D17F9376A31CE067C60
5AF162AEBEA0EBC4C4EBD6F1B8CFD1429C72E269A2B8FBA0D207B75B05774BDD
3F1E05A2048535A3660E391EBFA7E582B050E80CB8400C3750001FDB7D481008
6B2F93321EC7414C5F2359E372DF28BB7DB86376BC7F7708D9DCA3407608EA78
E1DD6F6FE07328946228E1675EC90CFFBEFF821A680102B56ACC59E2A7FA5588
BF49CCF91470374D96BDAF0BD36479D9E9468E90DBC4237103679C2C1FB7F8AC
E22442DA0908A3F1385E241369A92590DD216531BC2351FADCEB206618D0756F
7391B9C97AD6CDC897F26F8277E28BD46A2FAB292E1E83326540226643E619D5
8FDBD331C9F459A557AD41F0DCA7EF476FBA5467D359020C43A00570AAEBD3DB
F637154F7199BE30B111CA08D0AC4BFA35BD39E31382EB2FA5E5B3FA8F6257B4
AF5E637CFF0164B61172F6E763B32394BA9CBB3AB0F969475F70DE15FF67FD9F
8598AD4F75196AA0AF078126540BD2D435D0AD6CA9233144A052FFCAAA3A6EBB
0C27F6B3D45356DFBEB0F12864B22FD9C760DE72B50F3E8A04A6D73FD8F2419C
A77C367C0970BFE676E222680B650AD1EF413954B09A7402E724FADC918118BA
EBFCC470CB2B1AA768889CB1BC2FE4324E5A9BD83553BE76BD6D6379C14C46A1
ACCBBC65BDE83925BA1476C86CF33CFC5DB27F25B2A1ED6907A13B9CF1E9A236
4920DA4C2739E423290FF87FAB4FE536189E5E8444B2EDC59D1456A8B281FCA4
A75BDC614D857A5B5128DEB2158D284F2D0E9F033D4E0935F7EB95A03FF6AA38
33DF8715FB1BCB017B181806B100A61039332B4D567645EE4D2FC299C7CB4049
CD82E6890F7A6EDD29D38959A64D14ADA3A12409DEF0C48E8E77FF6F775ECFDA
9A49A2713BB0F9DC56013746795492F388E736F563700D485C022AF66E032F1B
0D4946162CDA9AFE10B495B3E9C405202E47705B8C653E9AED3AE51F6833D00E
C0BCDB65EACFBAE3237890EB1987D64A008E458232C792C4470BEDAC06B24D7A
570A0371CEA5F6A88974097A0F3E30F4C371EFFBF4F9B878D9110BCE84E2C90B
5FEBA3A613AE78AD3581FB238F34F5877CB14DB9E5E56D83E3998777AAEADB1F
18EDE1E065677B67746580F317D6EA21D8BAF03715FC56EB16FFD94C02E1F9C9
51B41B523A39D335E489396350F17D01EB3012C24B426C404EB2DE1436F4D5CE
86D6985A9FB65EBA5E7DA72EE9E3D4F778D8802781AD3E55034617F20F29A954
E30E004A8C904C7F3C5DFDF7CABB6D04CFCA6738ADBE8AE3408EBB6A4F79EC84
D410AEA95847C7DAB93011AAA40596B3085C3EF3540FFB2CDD395B29044005DE
5B45FFEB9BE81630C673E4900ACD628933083F0AFA538336611868129C118613
0E2DFFFE8F95F43B4B6695EDA33E19A4A7E61F818AAF7966EC96004C09C4DEFB
94058F2B8CA0CF190BB8B893C1C1CF3FBFF392EA1ECD562BA8E943EFC02ED8BD
1AF09AC4E8A0BD65C37BB90F845F7845A9A2364BD94EDDDB45CE58783B41E18C
52BB7B201D053025A68118D8FAC8B22B497F57630ED0ECBE9814BD19184B2C0F
3B04B2D3ADE2358EE9542EE86C72A3EF8A138E760F4241574033C78F342D11FD
A4C818B0A3812B714D9025814369FE71C396049C4CE22205C8F61EE2068824B4
AAE5F3D674ADA907DD9830B8CDC1E183BBCFBB2C11CDEDF020EE04641FC7F1CE
AF8AF6CEF034B7EEB0D96A5EE961480A47E065C063768ED394770CF076756575
87CB8A56596F2B9B6C6BED420903E8E6F7ED6DF88D83C945299505C8D1E6E9E3
3908A7598180A59384FB9886470BBC5B0243457FCE6F9FA6A2A1882A7FFB5B4D
9BA7FA24A309C30D11A17D3E0E4A85E5A7A48A556A316E658082A5973712FCDC
3DA44930D2941EA611C2B095F2A702EDDF78A8BE1E16BBECB55CFF813A7164BB
65E2B117E7D391BCF1DAC8E37A418437603F5EC1471BC7DB0848812309769A8E
3FA1971E684EEB1FFC061B07DD513F699DA0CAC0C3DA98E90ADEA19D4D9E4CB2
2E3E6EEDD28CDFC30F1AA3CDD7EAAEF6AA2BD732F8041F072A20EEA0F8A53597
1E9624553B339859FBDEEB258CFDF929134A6C4C51A291D2E32334B2D3B30F38
BC1237502191EC77DB413782319287C00EAE6FA149C4D239BF3D16D39C897C5A
702580C51B023D31937C75AF89D4989F4379EF11A27769227E0B30E99B6F1155
1147621EAB82B055272AEC88A4E2D9F3CBB1430BA452189F21E8FA8917B5E00A
44186B4CA8E3CDA8B9A115BB4E61848C94C80B1AF1644FDD65C8066A4EBE41F3
845EEF490131652647220E31EA785C5D927DB1DABDE5A2924FFA29003518D9CB
B29EC5A12FF7FE762B9C046FA4DCA68E72C6D3D43355B19DC9DA11442A3A87FB
C79C55898C36292DAB4D680AC75D4C6E4FF94C3A754C4A5BF596F61A7A13AEAC
9D8DBEDCD006F5D0E603A5F87E331ABC2470444F79A5051061186277047AFDA4
55AFFBF5438464B2E407AB93B595F3BB2AFDBBA6BB4AC103519B1C022D639898
8CB948E3837570790C950CD72F3FC3F5594ADAB0611B32E9EA239E9167BED159
77AB1FDB5CBEAB76607B2E02EA022C7F51B82D25EAA8E5CE318BF8B16C7DFB14
CB85B8518311FB665111E6D9411532A073BEC11BE102F279746367508B0B28E3
144E333238EE77F35365EFFB3AE678EFBDAE57091301275AA4024FE592AAA91B
424C4476F99F4746E77047A37AF3040DC6BDBBF473F9C4328B9CE1346341A9E7
E45CE3D2679144BA8E667F09D1C72CCE7662C61E595D12FF070E1707636AB57C
CC36258A9A41E98B54BEE53C13FD49FB50151F1A12135DAD1D6353346EEBCCA1
21E26C45732C9DB90EC439D5DD7A0F9CE5AC04E40AD3BECFEEE0B80F6D0E2624
6F2CBAAE3D1F877322B94937C087926DE9E7772E82E7BA1A42BCBC8CDBE1BC9D
76AA343F2F92EA5351ECF311541A404DAB7F4658B0E38957AABFC403D98BD4B2
59B8D224453991D6CFDBE19FBF843388CA7B6F00583B8F5A17CD3E9AB91FE74F
7AFAC0275AA1E7E0FCA7615E203D4D9C23347CEB53690376EB3C728E389317BA
6BAA2F007E868A5BA8797A66EC76881A301E64A179F212BCF7B1CE59C4EB7A83
D3F6F793C40242C171F796D7041AE35E50ABFD69245B99A887698E306E9D3E3A
020CC334CE168EA1A8FC2588AE31F1BB12A0943422296CF15CD9ACE83D5AFF50
4A0D1C677D9153C7668F9814952994E6015241B6AD4ED2636584E75E728E2A3A
3E6136ADEC5BB463520EB0CB0D4B89F35D76DD83B554E0CC42ACAF8B8B4F0801
3AC7E96ECB2C75D0448591302341CAC682418FF8A0CDB358CAEB0F30AA3343B1
EB7ADB6123BA21E8980CF8FE0C79B4611BA5DE6AD860EBECF4DBEB4D5E579549
5513FB275E06AE218360EBC0F71DB7814640CDE9A05B6C716B59970C308892F7
F273D7753AA3C4686E40A566C16CAE2136574E9E8813A20B9DAA55BB23C3507F
53961F8A2A37125D9E117CE2FA8695EF5473B0BA11ADF00F5983D400A550988C
3F2D79516642C1928AD531EFA59CCC18B9C592E4ABE5A09F535AA75FE4061FF1
38159B425EF95413397B533AD36BD3ED9D77FC505596B551FBB7E52C53783D5A
CCEFFA74F0EDD1C3143E2E9F117D2CE6541F49CB785C3CA96A21D299761EC951
6E739A1092CBEEDF67F43F6C813C5DD49A35E51BEBB4D74DC898B9D3CF1EE5ED
C7A9F49257790B9427B159D4F18D005D35C548E4DE53611283572CC3B038C81B
2901B418B6317F5716A73F7D5DFD46541BC6DD924B2FA23CCEF8B46FBEBD117F
21A1B617B05552DAFAB887646BA1E8488A5FFAF9F42D96089A767603F5229151
93670CD46A54DFE080859F5B0D91AEF5417A6BE96066A17FF2FE00F56DAA790C
8F3BB0BFA54413A616C37B196F912CE0B11DEBCBC20355114F1CAE908A2D5FED
FF05591BA80D7584F056CB95EA5D66C56B4719E4EBC5F1EF7169F6EA764E3391
2AA795F96A5697C53FEF148D691354A961728C4619A64210677D8D2A1E482D0F
2FB2E7F7ADFC0F275C9EDF39DB28ACBCF147F0FE391F58D467DE3BFE7CF5CAD6
91F5D440FCC350B2A7630B86B2EE7A83C19E8F30B2115CCFF4D989D7A0BF150E
372B3BB9DAC51C1BE0F481EAE7ABFB3D993007CCA49A7A6369D3250DE999E084
F1D14CCAE666992D6F7E6731CEFA9CF72A73672752E77474AF0A7C60B4A2EF61
B06CA003D1C6B6E7317EB3ED7F48335DCB827481401D29E98DB94E57E43547BD
C4607BE492ACEA446978256E1F91F928E4C66CCEDFA3E79B2FA52D2858723961
CB43EFBFFBA49FD1ECEFC94C973EF686218F33EEA979FF775C30B504B6382209
E7F07F4F7E98740444E556ADE5F166A7892CCB78BAFBFEDB1E3092E61804CFE9
A0B2794E5F0B238479854E880EF5878D0533C635AE46F69E720A02CF284F2394
6B3D6512E09679EABA25F6B81543E07798850B3C295FEF1E1D7D927D2D33DED8
658C6925287026B85F649F21322E04B7EEFD1F7009784FB506DD8A6E13F979C2
8672C47583CC8BEE33D183C1A22AFD2AA522AD80AF86551E6A2E43A872B5AE1F
CF44513B85F864C43B304B38ED9E7AEB5E93F0F1929523E2AD4D876338464B69
529239503A42FD622397AB02FB324B244DC6E82F81D19445D5ACBA7E93C23D08
C092CF44D7D2192BD5DFA83FFF39ABAA41A77E23D81A853872F5AD122BCDF331
8F727131FFAD28273E3B608075ABB1616224615C595DD6A33281609829CC16B1
21677511FF0A332B03D36EA3D387F21D5C7AA554201B65A16D253AF0F108432B
C13BBFC60AEB9917EEEF36430C58A390BB731592248E0E6830E91E1AF260EAD0
B980D630FA17EDA929225918BAEEF764E893A46B3FF168F8215E069D1EA120D0
ECE37B795A9BC397DDC69A9720C4AC637A37AFC685599A7B9E54C1EB35149F68
0812683E99737631A4EDA7E0B58E7063D70D76A62701DB7BF3814EAD984AAFE2
FFFFB0C619B26BC245F7C0457B987A17F6BEF9ACEF09C1067A3BC051BB39CA71
87C462982E9D2E6F092CE5F3AB43695CA8CEDDB0D73D7A92C8D4A2F8C527703C
93CFBFD8AA89C78C2ADE4AE8AAE0AB411217D5D01204D7869693F3DBD0B357A1
39BCAE48156DE25537B4EB0DF5F6F29F04489C7BFD4F267688FE70A922210D32
B231EBBFDF04CE9EF796283703DD6393251041CAC2711C4F02B92EB030DCD522
0F8D1C95141A5F87FB01F3912A84FD3D464B6FF6165407447B07C4AB8DCBFC98
6C589C75CEC794E38BCB3252E9129293AF4CEBB0D8A2E0B5749296D2E625D9C4
3898EA044D662CD049911F81A2F9DB661EA2B9C3F1265E2425E31A8C926BD4B4
270D00418B46BABD905BF687009B9E19054929D1E6CFF872918BB9775387C67D
8B0CA683C2AA86D7CEB209C3F989AF705A1B2308097F51ADDFD0548D467E8E1C
2F58325CC8ACEF598D1379FD79EB0317894CBBE8F1CFA08FAE77B9FC1DC7CAF2
7E30331E125E1ED0D42DEC952E6532A41945CFABBC27C2F85F83B378C8181053
1A104F9D50D3EC3BDE49AE1A7604E13C999464BBAA0DE32EB204787D47C5F3D0
7DB75B08AFE00B71BEB463292FBC96E0877C837FB0F87DE491BA5C70F72E6FA9
D56801762245C78C0BC2F2E0A5EAB681A003790449A54608658AEB65B234F9B5
11386A3DD51DABD35B477E6E620C40E6EEA1D9D829F52897015B14485A9F9CD0
12F5294866C2BF5477FABEBB9C9F4E80ECEB0A3CCA24128E64BF9626116CE85C
6FC810E5167D7D546BF532B616F954C0E66E60F0AF19D9DCE287140C2B23CEB1
DC9AC0460996649DCC92E63DC961A82B266D08104F10E01B8FEFD26E341C859E
38B1ED25DD17BA4EE51E7A8D29AA1BFDF8E33EC30F4545D9503168AA0EB4B49C
26870771C3DF2F7979EB60666BEBAE3FD63B03955AAC0AC02DE7A6DC0CF52B15
A13491EAC901AB4C5360AE462546B110125E027F0CF287AB3692E6F1ABD4E63F
EAE407D806124AD8923B4C2A4B4F8E209CB20F27D2B764F4D200F95BA6A0BFCC
7305D2C1F9FB7E7E93BC968ADEE4BC739CADD78432F1CBA305A171DFA12FE1EC
768215D49B2F39EB3D0F87115E8EEE13493645AA86AD0ED2835FBB5FE0F845EF
A8C15C987CD62AA24B585F0D0C4CE1B55393F30CF66C356AD645197627BE883F
55C7274235DF04B6FD59807EEA587631C9A47312B85195097C66AF4C51D82DFD
EEB70727463DC1856D7C5C5B35EBF04032ECA02C4B8EE8BC18278AE6EC373304
D2C69B7DCCE85A3026A1BE7B5043F5D61104140EF99F74EE1D9F4383F7D44EB5
D16130DCC97F2C208EE163A86982B5E74487CACADC267F333098D394854DF5C5
8D41D87CABD63E482F88BDCB02A816239200EE65696FFFADE0DA5B2EF18364AB
0853E59171E35190F9205EAFC26C25DC591A8649217A93ACE920F4F02747BD55
14E71A2EC882D2F5508E28EE45730DF5DC8818F18F4127B27813DBDCDE6BCE2F
2700EFB1D45C4B56E4F13A2A73E05DB981D1FD21408FC3239A4E56D22E4DE719
3869E714026A466BD44BC045DF8B71BCBFE0715292C460B144DBE97828A0D4BB
67D83A7D7CB780D9D40ADA80FB4B72F6D7C9DE9CFB1FE26A3CB17CCCA267F1FA
6C89807FAC27C81CC47332664C4A625D00CE96E76138CCEB86B969BD1B2E0985
BF6D071DA3455F14A8F2D01C4625317A8DDC12DACDBA8FFEEC116CFEEDE3A830
BEDB0AABE316BAF03AA0CA21291556B3C57566BE8144BEFA1E64E828F2671846
002E52ACB4B956F2ABFACE1D38EFA6879ACCABE32692C0D73702828A0E33C3B9
113C84F28B51DE104BACDC0D277DA9AC4CFE6699EF4485D03D1A3EB73B5E3123
63E25FCA81C60164F4070740AB74C66D55C0FC136B9C772E5AD23609E879A5F6
7163151D69E53763BC0D432D327EDB16047B7893AA7FE134288972E5F490C31A
67837002B635322548D4BA59DB8265E81990EF94D39341A98138ED1A4F742119
33E2DA64A256E5C6447898A2B62E7BE7BC093A4A305A4A21
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC13F154032A
A1C45D1A3DD9230A4903FE5523D6EE9BC66EF49B2617BE3C1AEBFE2BE26C3778
EE778AB577C5B9E476CBB0EF69EEE350BBEA9712CD97BB2821612964B30B01E7
B08AE39BC8B715A5C11A351E060C8ACCC73F7D8B3B33CB35844961E68842CFC3
601BD2FED84DC32546F5EEEFA423BBAEE305AFA3FB216983DF61299A86F51A67
1DB10D74D95084ACE3907DCC79E6B2C358D53D1A83C0538DF2F8252B6B963B85
BB230DFCCE6BFD3D847DA4F518B81FADA81814332B622EBE6848AE6001554502
7C5D6643ED9E898E52F229400B725F50C0CC1C0B40C04D1680D51033154CDEFA
C137858D49BA7B27E4904BF8D855940AF0DF3BEEA126AB8ACC2E93B1551E750D
B24390D7F0804F28A5DD460DFAA537CC1DD8B32132A2E7C1B93BF1A2C1CFF129
1DC961C949F1641B11368B8A426B97CCCA4FE1A799E07290CC69337450707969
8C07A7B9A821AE7CAC799DDC5C6C5A4AC9E21CE0ACF1C02A9B72F3C264E40D31
BCFEBE729C666E929DD2CC04C4F66493A56A4D7F7C59675EEAF84F33556BA9EF
15C92469A7666520B873ADBFA7CB2C670B71BDEDA9725503C98440DE5CE23DAC
7D1D4D52E872037221E7F6EA9377730189C0D18861E5F87CDBD81FACC7DD8009
1F968191E7B7F96056299EA698C1A77EDC8CB025B10C08A5B355BFF415BE682F
55D46314BE428EAF295655A9E39C505CCF2C13C8343C21E274982FC4533EEA16
716151F6E7C2DC1E61D6FBF0894C659A61F005C6FCE1A0E97003656BDA248158
20A6A2C9C88C5EC3AE96CD02A7FBF8997251AFFBF5AB2C8A5AF1CB6DBF0B027A
DD1C24093D7542209AD8BFDAE064992A2C14B13F18D8048B24FFA89D3332B13D
2D991742FAB22D66F51581C9885CABC65D566003B04D0603504C04951290F43B
A455DEF16EC7B61BC71CB86A66D2262E4D10F3FF50620AB8D1B03AB1FD864727
0B7E6AB646A70F51417FC07D5961FE1D07277FA98A26B7A42CF88DACE64A3DC8
8377E3C53D675D7BE879FCE0B20A9CBB394F9D38159C8477FE6657943255D62F
0C84FE8A630204A8E64D8F940C3AC14F0D2FE83F60403C598F8E360AFD7C3A3F
37E7731C7732F29E2B36E8CFC932AF2DDA28D631C559BDADD6F03661719C6752
7EB25CCD9328283C9F0A171F71B8E45E3E72C373CBD756881C1853879EB79905
E1DDA6ED3C2D0B1B96D7F061EACDE498346A3CA6A77EE4BC6AB5DADCB2E3143D
95295E23EE37E497C4CE614D86C8FDAD35CA3EA60BE1E28418837CFC7209F4A2
CC29609451258BDE7360066362DB24465EFBADDE93ADA0486DF5FD63771F4A76
54C8FDC3A533E44F41CF4A8E138C7E1A68DBE739C01D6D3668122629F3C62E9F
19F7D23F8A75F6D1464A7A8025262B1C95F281E010852B75FC3219A3777E7F26
C3A33D8BAE4628F7B46CD746AB60D080D6169F4E074CE9936241784D7319FE4D
314A6009F314570BD06FB2DB7DEFA96E27867413D8D875C0891D278710086114
F4032A0E6A1BB6392E2BA87A65F8949BFCC47BAE194E00795BA85A4BBE4135A6
9B6BC8F53B9CEB3C10D5DD1C88FF8EED5D2CDFE8AB2F7D3E3D0ABFBA825C7D22
DD53F1DD8402110BBEE55DC7F2AED544129333DDD269E32DEA342800BC711897
49B5BF63ACBD8E904BBB589CA901E79BBDB311C102F70F1D29326B72A26F7C5B
FB146E5B38643081A91DA1D968D167786E104B9D3B06490D129D34C2CAAD10F3
54EA175DFBA35B5D9288B8F54F0FB93B7AF74423F534302E6FD66D2B1C6378EB
A79DF5CB0D5BDDA62504A20E6EFB3906F211147BA146D78C62B62FBEA3A04583
F3C7DF8928BAA632825543D0F6A5C94630E63411A6ADBF87A178A35A25883EDF
8A78A8612E5D3F617DB098B888C0D9DB30324F35E3F41F7FCBEC699C2392CC42
09EDF150D2D5967C23313AD539D380C36FB9485E3BBEC88CBDD02406E220099E
4C1695FA437CA481C9C9D9EB9776F20005556CEDC6F685871A3AEE8036C88BFA
CD945C94F7AC39496E4DC03EDD9D6E5A9C488D8A50B858B23245E8CDDCF07D49
8DCE33C3135E19046110778937795DE1FBA80889E7B94F4C5A9660DC8654FBE4
824DD2A7076B25DC82FA7E209D6F735D7E7469C5CF3E741125619AF3715A0B90
48A498CA32ECBC58F0E7A8CE974C9EE38DE0D876AB8F642E0598C4E94B5A824D
42D41EE2F48F13943C8B81DBFA5C3092E0E82F217899518C38ED00FC5C77003D
22C3A1E82B87DC2C2C5108F74FA1B72C6FC4C10EEEE3A3B686AEAF7630595743
053DFB264188186301575FE6C2D37D8F90B509EC41200E62765CB57ECA2162BD
29F0E926A1042B12AB5EA65496CA662DD5E4E73A3ECF8471A5E819CC19F87E99
4B31A6E70BB982DE2C8C9866B0758ACA2BDB19D3727A150797203C142323DFFD
EFCB57D418F7FE00E9E4413584CD0A7000071D6D6062165B9EE0BAFE99936274
6A33988A6DFAF89CCD67BFEA8C302420214AF5A2FF864710E1C9C313DCC0838B
8D797205EDA748F68D60940A1A7B10FF68B6E5250F368119DC6B3D5E477BA193
43DFBC637DC6139F238DA056D4779EF582304EC8E1BC52F7D90B37EA5DD5D907
242298E9B6C4AAE8FDCAE1FAB3B342BA23B91AC9734BA917C45EF25A4D7BD26C
7D04280B2956BD268608F80A2F66BF8B28CC148252E90F6E7536E42E562D8031
44365AC1B832D55382E1223B42A1C367FAAFB12FEE392B0360A20360880286CF
5A98C68FB3334814C8AD8122EA6503B560C49D125450C406CB538A784024EBEA
D7A848EF0CCFC2AEA3B4E400B3FE2ECE4185779062AAB3C348B3BFFA10EA4B6F
445C258ED3837918E4FE0D105200D2E0BF5C948D54F6CA61D139EE770820AE93
BB7B4078A373700E6B343EA266EFE6538E4412D35AB6B8E9C6D52F83C3AB2B7B
3287E46329F04AFF907683E33AC6A1C254F7603D57440FD0C45FF8C51A91A9EC
E26A7A50DEE4ACA130DD76A67920DBBC87EE684E50997A09BCF819BDA0F55646
0AA7F620AE3C793AC884E8B42640338CADF35AFFC8E11C3503F9D8ADD60AA8F5
B2BE8C21D7344CD8E8A6C73664ABF9340B497820F95E037B1BDB69A80423137F
D09BD2E8EB22A110A9C528A198B8EC862B243954C82957EA55B1B2E78A9364BA
6446D5B1CCAF4741F3310EBD4306E2D9D15640E2EC18A8CF49D7D8DB5859B22A
2D9AE9ED489FFE6FE624DE57FD2236FF7A4C3EB4627AF8A7656CFDB1A631DFD8
AB02B2EB5924AFA2DFE8EC7F01279A1B3D4A6980717AEAC27CA39974BF5E5473
07453BCDF2C7898477AC8B51122A9165F32E7FF72DC5293A19B70D1EA14E7B8E
A8A5BD31E2FD4A3C65E04F45CFAFF9191D09A98AF806357C6C56099EA374BBF2
CE56A340317060CB54C640DCDD7CE47338B92353B26F0CD678EA121005DB4BDC
978A8BE4D86E59B51793EFE0A4C95CACA1C98CC87E8404F41256B3DF22C3C0E1
65028087EF2A58C54D8AB7580EE3ED58AEB83B72CB902061D69FF23D50EC5BEE
2FB95A44F2B2E2DD94C933D1FBA0EA4CF0DD9598A9036B749049229902B646FE
1EDD3B449B4A055214DF69D0218549440B1C5F19476822C4F261DECB1C4B4EEE
54C6A9D14DC90A39B3E3C839DB500BBC0F9E152C30059054EE92951E4A202ABC
99933A7CFC60FB3DEBD2430D668B3D174C7CD69638A514750E89A9B75373FD96
87F338923606C2DD6B0DEC736EFD9518E318B8C06D63F1ADD1728EB34CC9007A
8DE527B103A5B9734541824A760282014795FDA2F0DA1F222E2CD4FF98DC8F99
14EF13269DBE83FD4AD57B48531069ACBEB5E73EDD77ED27BC7DAFF0B786652B
9615EBE68CE55AEFABEF1A86732F2F9FA7C45786B43A59416DA4550DB20C261A
A5D1C8F68939B28C0A8D519A948A5E54879DD21E460301D87A44CEA6B6B8371E
23402A6FF4FB7565D2ABEF88561B9020D4D1DA9D11F02FC0F1215FA6B79DE04D
5E3E9E2911DEC2AD7EC8EF6144CF09C21E85600DCB72A0F08AE2E67A3969715E
C49103C8F9081A6F5180FD9B068E3B5301D2364F8D27CB10CE60603870583723
D31EE2512EC850AAADBF76038BDA161449E3408E20B02476EF44055967843FA5
44CE9A54D7F05833A764D2BCF786A735A59C49585CB5223AED43CFDD209828B4
873032E5ABD6F1CE4C08EB2BD4FE1694E85F448CCC6F61BF47D2A88430CF6BBF
E50AD9721C9480B2D66A5BDFBB62DAAC2E0AEBD3348B4369F1CA802CFB7D9916
9BEEEC408EF21244BAF6607726442BD46B2794EE5AF5100F689251FCBE002906
3125377560239E2680CE30980032EE6FDA39E63D4CE3674D6FBBBA507E376A8D
10E5629DB262BBC3C0CF7CA40DC2E74D8128BCE99950D7B0A8D309F0BE6EAF45
83791B212691A7F4F3061E53EC671A5D0BF938A75C79F71AE3EFEAA24DE1BE94
BB27F85B0C8BE3ED8F1783C4257D8758153E4C2D0977265870EAC015A3096905
876A0043A11F9C5F9001F9E7A0149021C1BCFC9D55F2E695999A710A4D4409A7
890B8CC0A361197BE3ECC35934343FFF76BC81F2E3E87ECD69BA7F5C543DB407
3E5CFFCA707078EA85C43F4DA1EB1535CF420A936629294C9D7ED3D61DDC74E4
FB0BE7354958E53CA7CC6FD6300D2D09D337AA1E47A08C5A40B108AC669CDE8F
23699C402150BCA1F672C91795F0A0CC67460A7B82B7B40EAF7DAB0FD09ABD9A
75856C0485CD976FCC99FF82B4A73B2620156E64A88F5A6753BB9B857B24EC11
AFD13D92CD7D8E5D749C1EC8B0A623BD35418A3FFC6882551FF6C31B9ED5E4F6
62AA2B647AFF05722E88E6320A422C7025D4DEA14C0CF952EA0D9C4176D5ACFB
C48D8A48074357B1B114F11E2EDC39FF4DBC037FDEEC19CFB7C208155161B696
6442CB14BD2C5658C938BC685FADEC8C6514A72AA843413E6D78388251FFE0BF
86DCB132C9BC7D2FF011683226340B9F9D22F16E40184A3697C368E4E09A0E26
584682A66030D729C4DCF2E9E0ED2A8A24A32CADD00CD685CB31CD1C2B9AEE66
36A10F7BC4E7EC1B7ED0E2E219317AFEBD9F116385726E908BAB7D1357504048
C0F0B81FFAF4E898D4A73E482019551D32755EE7FE0A326E7B804C0BF9AF326F
201D889F40D7AB654F3C24E9BC90C6CA2A26A141370CA486620AADDBCF844B48
7004DD8DAD1C64AB2F20E7735CFD4B13C2A8CBBE519A8F57C66B9DBBA983D7B5
A446BF526A58DA4682C9F22549FE68EC50BD88BAAD3DBC74CF2C7FBF0C76FAA4
EB347390DD0D3CFE3F4115AB6ACFF86C5B057FBA8A473CF7B639728CD1070D57
8CBBC23C7B47CFE6CFD6EBAE3E24A85D00263E280088B9E7E3262FB036E1F51B
26BFCAC3915932A9CA7B47A2EB5562F40D56A25209C262DA698BA0D13DBF4462
A4E70BE9D053F69949A8E464ED478A8E037FB13580B6B2A800B0FD20B684C574
58BD2527808DCC5C70B1287710891FBD126D8627CBB5FBB831F4A5450D820289
1C92B9A6782233D6F448097850B430FD504D95C93432E094543B9231FA169175
574A1D3C64F8596225B79620669CDEA550ADDF32B22DF58CE12B9596B8456A8C
A4C2AB4C1F39F5AEC8B42F7E0773A65BC5DCA196E285B74F45F4B968A5AFF69C
B191E2F8FCFFB31A75636750E962E9E8CAD4E3F619A88BF9A16E2D2D4C6899CC
62948C0EE02C1A0ABE9A1E91E7BDAA99ACF855F69CA9BD2CDAF7853C4733D982
A1B334D6215F73C904A6C6B7CD75CE8EECC0AC0606C3B023CD9CA47C563A7E9A
F8610D777F17033913996D11AF173AD624EC0D3812E37F4CC7431C216D1A74EF
9C325EF41A2D3F2197226B502E6CB2BEDDA0E3A9903397AD5DC6ECC02F161746
A07968A0934B32AE08F586F9441C89EF85E11B4798664BFC89854C6244F2801F
6E0B1F89A65876759F0BD0AB0F6418DB37CB0ADD82436FEB29E12D9FE6D850BF
A8A11DBE0004B2DDF649FC411A02DE1C04D3D6909AB868C598104FC90A8833CA
626AFC556EF3EF98695EC8CAFC4E9D082B8088A3765150783607A93A0E3DE655
92A7BD9B0BE86FA9E713BBCFAC25C493BC5ADF2F3236198D4EDF15C93A74F435
5ECBEE1A22503EB6346A2A2F91CEADEF4AF470F3F78EC1165E48770862C92ECD
77E44A086B60383FA083F39CC89898359C1C6F4B30EDB787509646D2F9877623
6B88EB97430F2FA968F255A97A0569842D9F31587CEA3DFFB38C628859E48556
1EBCF74DD0AA78A0EF2F92DBED4E1B4D630C19098045DE82D0189AB40F3312FF
E826D8AC6ED4B07C2D70A884C870F8A8A5AEA6E5A141B3C133D13919BA719C14
D8A93800113F03F4F1B0EDE091A566DC6B33A0BEE3ADE365A118251C02B01799
4049F3473F86C9E861031D0885B9D793C62265F3328CEC82626E632067D83692
F9E18EB89D55B58F9E414924CADA402129AA4FD004A7C862F509ABBBF2B6712F
FC1EF76FA2A69C37A09D946CCD24E19B79D064AFFD33BC5373CF52C83547CBF8
7418C83553E224F33335095490B825B4DB2C03F4E1284A3CA71CF64E47F9C5C1
5ADC4983DCC3E6DCD816978C3362ECC1F124882AFC69A9EA2E3F992223FADE65
FF7D35562BDD6D5FC38A11D0712F2D9E395E9A920796376866BA8B4AA98C523F
4BD6A278D326650B6387EB41E019C818E9DD96166F7947D66D9AEE31D1799F38
1E78CA00FD26A124B98FFFE1F62FB2B5821889919DBB6AF551F49C2745029485
588E91F32531ADD54B1681EB325913195A5C47
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 52099151 39074365 2000 600 600 (teste_powerdot.dvi)
@start /Fa 75[80 62[146 80 133 3[146 2[66 2[66 3[133
146 1[146 133 12[146 66[66 17[{ TeXBase1Encoding ReEncodeFont }13
239.103 /NimbusSanL-BoldItal rf /Fb 137[78 118[{}1 99.6264
/Dingbats rf /Fc 71[61 3[61 27[61 31[91 1[91 101 51 91
61 101 101 101 101 151 40 91 40 40 101 101 1[101 101
91 101 101 12[111 121 6[101 10[121 6[51 8[101 2[51 46[{
 TeXBase1Encoding ReEncodeFont }32 181.818 /NimbusSanL-Regu
rf /Fd 71[80 31[80 35[80 133 93 2[146 1[213 3[66 3[133
1[133 1[133 11[173 4[159 80[{ TeXBase1Encoding ReEncodeFont }13
239.103 /NimbusSanL-Bold rf /Fe 71[33 3[33 27[33 34[55
28 50 33 2[55 1[83 22 2[22 3[55 55 50 55 55 12[61 3[66
27[55 55 55 55 1[28 29[28 17[{ TeXBase1Encoding ReEncodeFont }24
99.6264 /NimbusSanL-Regu rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Screen
/setpagedevice where
{ pop << /PageSize [594 792] >> setpagedevice }
if
%%EndPaperSize
 @landscape end
%%EndSetup
%%Page: 1 1
TeXDict begin @landscape 1 0 bop 600 417 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with powerdot class)/Author ()/Keywords () /DOCINFO pdfmark
end
 600 417 a
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.17 0.31 0.44 TeXcolorrgb Black
-600 4167 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -600 4167 a -600 4167 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -600 4167 a -600
4167 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -600 4167 a 0 TeXcolorgray -600 4167 a
SDict begin [/PageMode /UseNone/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -600 4167
a -600 4167 a
SDict begin [/CropBox [0 0 594 842] /PAGES pdfmark end
 -600 4167 a -600 4167 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -600 4167 a -600
4167 a
SDict begin H.S end
 -600 4167 a -600 4167 a
SDict begin 13.6 H.A end
 -600 4167 a -600 4167
a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -600 4167 a 0.17 0.31 0.44 TeXcolorrgb -600 4167 a
SDict begin [/Count 2/Dest (slide.2) cvn/View [/XYZ null null null]/Title
(Primeira se\347\343o) /OUT pdfmark end

-600 4167 a -600 4167 a
SDict begin [/Count 0/Dest (slide.3) cvn/View [/XYZ null null null]/Title
(T\355tulo do slide) /OUT pdfmark end
 -600 4167 a -600 4167 a
SDict begin [/Count 0/Dest (slide.4) cvn/View [/XYZ null null null]/Title
(Tabela) /OUT pdfmark end
 -600
4167 a -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600 4167
a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.96 0.94 0.89  setrgbcolor   0. true 0.0 253.39848 397.48499
0.0 .5 Frame  gsave 0.96 0.94 0.89  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.51 0.13 0.16  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ } def  [ 397.48499 253.39848 0.0 253.39848    /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0.51 0.13 0.16  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.51 0.13 0.16  setrgbcolor   0 360 278.23827 39.75092 .5
CLW mul dup 4 -1 roll sub neg 3 1 roll sub 198.7425 0.0  0 Ellipse
closepath  gsave 0.89 0.85 0.69  setrgbcolor  1. .setopacityalpha 
fill  grestore gsave 0.8 SLW 0.51 0.13 0.16  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
-600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a -600 4350 a
SDict begin H.S end
 -600 4350 a -600
4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600 4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.1) cvn /DEST pdfmark end
 -600 4350 a 5608 4152
a Fe(1)28 b(/)g(4)p 0.51 0.13 0.16 TeXcolorrgb 2195 1304
a Fd(Um)66 b(teste)p 0.17 0.31 0.44 TeXcolorrgb 2013
1893 a Fc(Salviano)52 b(A.)e(Le)3205 1890 y(\230)3185
1893 y(ao)p 0.17 0.31 0.44 TeXcolorrgb 0.17 0.31 0.44
TeXcolorrgb eop end
%%Page: 2 2
TeXDict begin @landscape 2 1 bop 0.17 0.31 0.44 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.17 0.31 0.44 TeXcolorrgb 0.17 0.31 0.44
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0  setgray   0. true 0.0 268.30054 99.37125 22.35762 .5 Frame
 gsave false 1 0.0 0.0  gsave 0.96 0.94 0.89  setrgbcolor currentrgbcolor
grestore gsave 1  setgray currentrgbcolor grestore 300 0. 0. false
tx@GradientDict begin GradientFill end grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1  setgray   0 360 29.81015 208.6787 .5 CLW mul dup 4 -1 roll
sub neg 3 1 roll sub 99.37125 178.87006  0 Ellipse closepath  gsave
1  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.89 0.85 0.69  setrgbcolor   0. true 0.0 0.0 397.48499 22.35762
.5 Frame  gsave 0.89 0.85 0.69  setrgbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0.51 0.13 0.16  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ } def  [ 397.48499 22.35762 0.0 22.35762    /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.5 SLW 0.51 0.13 0.16  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600
4350 a -600 4350 a
SDict begin H.S end
 -600 4350 a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350
a -600 4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.2) cvn /DEST pdfmark end
 -600 4350 a 0.51 0.13 0.16 TeXcolorrgb
2344 1687 a Fd(Primeira)68 b(sec)-106 b(\270)3793 1684
y(\230)3767 1687 y(ao)p 0.17 0.31 0.44 TeXcolorrgb -501
315 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0.51 0.13 0.16  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ } def  [ 56.84248 -1.42271 -1.42271 -1.42271    /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.5 SLW 0.51 0.13 0.16  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial -501 338
a
SDict begin H.S end
 -501 338 a 0.17 0.31 0.44 TeXcolorrgb -23 x @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.51 0.13 0.16  setrgbcolor  0. true 1.42262 neg 2.7576 neg
57.07027 5.86853 .5 Frame  gsave 0.51 0.13 0.16  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 1 TeXcolorgray Fe(Pr)q(imeir)o(a)30
b(sec)-42 b(\270)64 313 y(\230)53 315 y(ao)p 0.17 0.31 0.44
TeXcolorrgb 0.17 0.31 0.44 TeXcolorrgb 423 242 a
SDict begin H.R end
 423
242 a 423 315 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.2) cvn H.B /ANN pdfmark end
 423 315 a -501 475 a
SDict begin H.S end
 -501 475 a 0.17 0.31 0.44
TeXcolorrgb 0.17 0.31 0.44 TeXcolorrgb -2 x Fb(v)17 b
Fe(T)m(\264)-30 b(\021tulo)28 b(do)g(slide)p 0.17 0.31 0.44
TeXcolorrgb 0.17 0.31 0.44 TeXcolorrgb 423 400 a
SDict begin H.R end
 423
400 a 423 473 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.3) cvn H.B /ANN pdfmark end
 423 473 a -501 633 a
SDict begin H.S end
 -501 633 a 0.17 0.31 0.44
TeXcolorrgb 0.17 0.31 0.44 TeXcolorrgb -2 x Fb(v)17 b
Fe(T)-12 b(abela)p 0.17 0.31 0.44 TeXcolorrgb 0.17 0.31 0.44
TeXcolorrgb 423 559 a
SDict begin H.R end
 423 559 a 423 631 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.4) cvn H.B /ANN pdfmark end
 423 631 a 5608
4152 a Fe(2)28 b(/)g(4)p 0.17 0.31 0.44 TeXcolorrgb 0.17 0.31 0.44
TeXcolorrgb eop end
%%Page: 3 3
TeXDict begin @landscape 3 2 bop 0.17 0.31 0.44 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.17 0.31 0.44 TeXcolorrgb 0.17 0.31 0.44
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0  setgray   0. true 0.0 268.30054 99.37125 22.35762 .5 Frame
 gsave false 1 0.0 0.0  gsave 0.96 0.94 0.89  setrgbcolor currentrgbcolor
grestore gsave 1  setgray currentrgbcolor grestore 300 0. 0. false
tx@GradientDict begin GradientFill end grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1  setgray   0 360 29.81015 208.6787 .5 CLW mul dup 4 -1 roll
sub neg 3 1 roll sub 99.37125 178.87006  0 Ellipse closepath  gsave
1  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.89 0.85 0.69  setrgbcolor   0. true 0.0 0.0 397.48499 22.35762
.5 Frame  gsave 0.89 0.85 0.69  setrgbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0.51 0.13 0.16  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ } def  [ 397.48499 22.35762 0.0 22.35762    /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.5 SLW 0.51 0.13 0.16  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600
4350 a -600 4350 a
SDict begin H.S end
 -600 4350 a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350
a -600 4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.3) cvn /DEST pdfmark end
 -600 4350 a 0.51 0.13 0.16 TeXcolorrgb
720 -239 a Fa(T)-7 b(\264)-73 b(\021tulo)67 b(do)g(slide)p
0.17 0.31 0.44 TeXcolorrgb -501 315 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0.51 0.13 0.16  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ } def  [ 56.84248 -1.42271 -1.42271 -1.42271    /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.5 SLW 0.51 0.13 0.16  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end


@endspecial -501 338 a
SDict begin H.S end
 -501 338 a 0.17 0.31 0.44 TeXcolorrgb
0.17 0.31 0.44 TeXcolorrgb -23 x Fe(Pr)q(imeir)o(a)30
b(sec)-42 b(\270)64 313 y(\230)53 315 y(ao)p 0.17 0.31 0.44
TeXcolorrgb 0.17 0.31 0.44 TeXcolorrgb 423 242 a
SDict begin H.R end
 423
242 a 423 315 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.2) cvn H.B /ANN pdfmark end
 423 315 a -501 475 a
SDict begin H.S end
 -501 475 a 0.17 0.31 0.44
TeXcolorrgb -2 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.51 0.13 0.16  setrgbcolor  0. true 1.42262 neg 1.52156 neg
57.07027 5.81158 .5 Frame  gsave 0.51 0.13 0.16  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
1 TeXcolorgray Fb(v)17 b Fe(T)m(\264)-30 b(\021tulo)28
b(do)g(slide)p 0.17 0.31 0.44 TeXcolorrgb 0.17 0.31 0.44
TeXcolorrgb 423 400 a
SDict begin H.R end
 423 400 a 423 473 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.3) cvn H.B /ANN pdfmark end
 423 473 a -501
633 a
SDict begin H.S end
 -501 633 a 0.17 0.31 0.44 TeXcolorrgb 0.17 0.31 0.44
TeXcolorrgb -2 x Fb(v)17 b Fe(T)-12 b(abela)p 0.17 0.31 0.44
TeXcolorrgb 0.17 0.31 0.44 TeXcolorrgb 423 559 a
SDict begin H.R end
 423
559 a 423 631 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.4) cvn H.B /ANN pdfmark end
 423 631 a 5608 4152 a Fe(3)28 b(/)g(4)720
373 y Fc(Aqui)51 b(v)-5 b(em)52 b(o)e(te)-5 b(xto)50
b(do)g(slide)p 0.17 0.31 0.44 TeXcolorrgb 0.17 0.31 0.44
TeXcolorrgb eop end
%%Page: 4 4
TeXDict begin @landscape 4 3 bop 0.17 0.31 0.44 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.17 0.31 0.44 TeXcolorrgb 0.17 0.31 0.44
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0  setgray   0. true 0.0 268.30054 99.37125 22.35762 .5 Frame
 gsave false 1 0.0 0.0  gsave 0.96 0.94 0.89  setrgbcolor currentrgbcolor
grestore gsave 1  setgray currentrgbcolor grestore 300 0. 0. false
tx@GradientDict begin GradientFill end grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1  setgray   0 360 29.81015 208.6787 .5 CLW mul dup 4 -1 roll
sub neg 3 1 roll sub 99.37125 178.87006  0 Ellipse closepath  gsave
1  setgray  1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.89 0.85 0.69  setrgbcolor   0. true 0.0 0.0 397.48499 22.35762
.5 Frame  gsave 0.89 0.85 0.69  setrgbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0.51 0.13 0.16  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ } def  [ 397.48499 22.35762 0.0 22.35762    /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.5 SLW 0.51 0.13 0.16  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600
4350 a -600 4350 a
SDict begin H.S end
 -600 4350 a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350
a -600 4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.4) cvn /DEST pdfmark end
 -600 4350 a 0.51 0.13 0.16 TeXcolorrgb
720 -239 a Fa(T)-19 b(abela)p 0.17 0.31 0.44 TeXcolorrgb
-501 315 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0.51 0.13 0.16  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ } def  [ 56.84248 -1.42271 -1.42271 -1.42271    /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.5 SLW 0.51 0.13 0.16  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial -501
338 a
SDict begin H.S end
 -501 338 a 0.17 0.31 0.44 TeXcolorrgb 0.17 0.31 0.44
TeXcolorrgb -23 x Fe(Pr)q(imeir)o(a)30 b(sec)-42 b(\270)64
313 y(\230)53 315 y(ao)p 0.17 0.31 0.44 TeXcolorrgb 0.17 0.31 0.44
TeXcolorrgb 423 242 a
SDict begin H.R end
 423 242 a 423 315 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.2) cvn H.B /ANN pdfmark end
 423 315 a -501
475 a
SDict begin H.S end
 -501 475 a 0.17 0.31 0.44 TeXcolorrgb 0.17 0.31 0.44
TeXcolorrgb -2 x Fb(v)17 b Fe(T)m(\264)-30 b(\021tulo)28
b(do)g(slide)p 0.17 0.31 0.44 TeXcolorrgb 0.17 0.31 0.44
TeXcolorrgb 423 400 a
SDict begin H.R end
 423 400 a 423 473 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.3) cvn H.B /ANN pdfmark end
 423 473 a -501
633 a
SDict begin H.S end
 -501 633 a 0.17 0.31 0.44 TeXcolorrgb -2 x @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.51 0.13 0.16  setrgbcolor  0. true 1.42262 neg 1.52156 neg
57.07027 5.75757 .5 Frame  gsave 0.51 0.13 0.16  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 1 TeXcolorgray Fb(v)17 b Fe(T)-12
b(abela)p 0.17 0.31 0.44 TeXcolorrgb 0.17 0.31 0.44 TeXcolorrgb
423 559 a
SDict begin H.R end
 423 559 a 423 631 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.4) cvn H.B /ANN pdfmark end
 423 631 a 5608 4152 a Fe(4)28
b(/)g(4)720 95 y
tx@Dict begin (1) BOL end
 720 95 a 0.17 0.31 0.44 TeXcolorrgb
720 95 a
tx@Dict begin (0) BOL end
 720 95 a 0.17 0.31 0.44 TeXcolorrgb 0.17 0.31 0.44
TeXcolorrgb 721 x Fc(T)-22 b(abela)90 b(1:)1633 816 y
SDict begin H.S end

1633 816 a 1633 816 a
SDict begin H.R end
 1633 816 a 1633 816 a
SDict begin [/View [/XYZ H.V]/Dest (table.1) cvn /DEST pdfmark end
 1633 816
a Fc(A)f(tabela)g(a)g(seguir)720 1042 y(mostr)n(a)p 0.17 0.31 0.44
TeXcolorrgb 720 1045 a
tx@Dict begin (0) BOL end
 720 1045 a 0.17 0.31 0.44 TeXcolorrgb
0.17 0.31 0.44 TeXcolorrgb 881 1561 2121 7 v 878 1787
7 226 v 981 1719 a Fc(gato)p 1481 1787 V 389 w(hoje)p
2304 1787 V 340 w(ir)2528 1716 y(\264)2508 1719 y(a)p
2998 1787 V 881 1793 2121 7 v 878 2019 7 226 v 981 1951
a(ac)-76 b(\270)1193 1948 y(\230)1173 1951 y(ao)p 1481
2019 V 324 w(boca)p 2304 2019 V 314 w(cacho)p 2998 2019
V 878 2245 V 981 2177 a(dado)p 1481 2245 V 199 w(a)l(viac)g(\270)2025
2174 y(\230)2005 2177 y(ao)p 2304 2245 V 200 w(kappa)p
2998 2245 V 881 2251 2121 7 v 0.17 0.31 0.44 TeXcolorrgb
0.17 0.31 0.44 TeXcolorrgb 0.17 0.31 0.44 TeXcolorrgb
720 3237 a
tx@Dict begin (0) BOL end
 720 3237 a 0.17 0.31 0.44 TeXcolorrgb 0.17 0.31 0.44
TeXcolorrgb 0.17 0.31 0.44 TeXcolorrgb 0.17 0.31 0.44
TeXcolorrgb 3423 3030 a @beginspecial 1 @llx 2 @lly 611
@urx 792 @ury 1291 @rwi @setspecial
%%BeginDocument: tiger.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 1 2 611 792
%%BeginPreview: 611 791 1 791
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 000000000000000000000000000000000000000000000000000000000000000000000000001f0000000000000007ffff8000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabfffffeaaaaaaaaabffffffffeaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000000000000000000000000000000000000007fffffffc00000001fffffffffff0000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222ffffffffff22a222bfffffffffffffe2a222a222a222a222a222a222a222a222a222a222a222a222a220
% 000000000000000000000000000000000000000000000000000000000000000000000fffffffffffe00007fffffffffffffffc0000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabffffffffffffaaaffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000000000000000000000000000000003fffffffffffffe0ffffffffffffffffffff800000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222fffffffffffffffffffffffffffffffffffff22222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffd7ffffffe0000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabffffffffffffffffffffffffffffffeaaffffffaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000000000000000000000000000000fffffffffffdffffffffffffffffffffd55fffffe000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2bfffffffffeeaafffffffffffffffffffeaaabffffa2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000001ffffffffffc5454fffffffffffffffffffc54547ffe00000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabfffffffffffeaaaaafffffffffaaaaffffffaaaabfffaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000ffffffffffffffd55555ffffffd5555557fffff55557fff0000000000000000000000000000000000000000000000
% 222222222222222222222222222222222222222222222222222222222222ffffffffffffffffaaaaafffffaaaaaaaaafffffaaaaabffa222222222222222222222222222222222222222222220
% 00000000000000000000000000000000000000000000000000000000000fffffffffffffffffd45557fffe5554555455fffff455547fe000000000000000000ff0000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabffffffffffffffffffaaaabfffaaaaaaaaaaafffffeaaaaaffaaaaaaaaaaaaaaaaabffaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000fffffffffffffffffffd5555fff5557f5555557fffffd55555fc0000000000000001fffe000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a223fffffffffffffffffffeaaabffaabfffffeaaabffffffaaaaabfa222a222a222a223fffea222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000003ffffffffffffffffffffc54fff4fffffffff454fffffff45454f800000000000000fffff000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaafffffffffffffffffffffeaafffffffffffffaaabffffffeaaaabeaaaaaaaaaaaaabfebffaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000000000000000000000003fffffffffd55ffffffffffd7ffffffffffffffd55fffffff55555700000000000007fc7ff000000000000000000000000
% 222222222222222222222222222222222222222222222222222222227ffaaffffaaaabfffffffffeffffffffffffffffaafffffffeaaaabe222222222223ff07ffa22222222222222222222220
% 00000000000000000000000000000000000000000000000000000000fff7ffffff5455fffffffffffffffffc57fffffff55fffffffd4555e00000000000ffe07ff800000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabffbfffffffaaaabfffffffffffffffaaabfffffffeabffffffeaaaafaaaaaaaafffffa0bffaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000000000000000000003ffffffffffd5555ffffffffffffffd55557fffffff555ffffffd5555c01fffffffffd007ff800000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2affbfffffffffeaaabfffffffffffeaaaaaabfffffffaaaabfffffaaaefffffffffffea00fffa2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000001fffffffffffff45457ffffffffff545454545ffffffe54545fffffffffffffffffff4000fff800000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabfffffffffffffaaaabfffffffffffffaaaaaafffffffaaaaafffffffffffffffffe80000fffaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000000000000000000000ffffffffffffffd55557fffffffffffff555555555fffd55557ffffffffffffffff400000fff800000000000000000000000
% 222222222222222222222222222222222222222222222222222223fffffffffffffffeaaaaffffffffffffffaaaaaaaabffeaaaaaffffeffffffffffa000000fffa22222222222222222222220
% 000000000000000000000000000000000000000000000000000007fffff5547ffffffff5547fffffffffffffffd554555fffd45557ffffffffffffff0000000fff800000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaffffeaaaaafffffffffeabffffffffffffffffaaaaaaaffeaaaabfffffffffffffe0000000fffaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000000000000000001ffff55555fffffffffffd7ffffffffffffffffd5555557ff55555fffffffffffffc0000000fff800000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a27fffaaaabfffffffffffffffffffffffffffffffaaaaaabffeaaaafffffffffffff80000000fffa222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000fffd4545ffffffffffffffffffffffffffffffffc5454547ffc545fffffffffffff00000000fff800000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabffeaaafffffffffffffffffffffffffffffffffffeaaaaaaffeaaaffffffffffffe00000000fffaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000007ff5555ffffffffffffffffffffffffffffffffffffd555557ff555ffffffffffffc00000001fff800000000000000000000000
% 222222222222222222222222222222222222222222222222223ffaaaaffffffffffffffffffffffffffffffffffffffaaaaaaffeabffffffffffff800000002fffa22222222222222222222220
% 000000000000000000000000000000000000000000000000003ff5547ffffff47fffffffffffffffffffffffffffffffd55457fe57ffffffffffffc00000001fff800000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaafeaaabfffffaaaabfffffffffffffffffffffffffffffffaaaabffafffffffffffff800000003fffaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000000000000003fd555fffff5555557ffffffffffffffffffffffffffffffff555ffffffffffffffff000000001fff800000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2afaaaaffffbaaaaaaaafffffffffffffeaaaaafffffffffffffffffffffffffffffffe000000003fffa2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000003d4545fffd47ff454545fffffffffffffd454545fffffffffffffffffffffffffffffe000000003fff800000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaafffeaffffaaaaaabfffffffffffffaaaaaabffffffffffffffffffffffffffffe000000003fffaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000000000000355555fff55fffff555557fffffffffffffd5555555fffffffffffffff7fffffffffffc000000007fff000000000000000000000000
% 222222222222222222222222222222222222222222222226aaaabffaaffffffaaaaafffffffffffffffaaaaaaabfffffffffffffeffffffffffffe00000000ffff222222222222222222222220
% 00000000000000000000000000000000000000000000001d5455fff57ffffffd56557ffffffffffffffd54555457ffffffffffffd7fffffffffffc00000000ffff000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaafffaaffffffffafaabffffffffffffffeaaaaaaaaffffffffffffaffffffffffffe00000000ffffaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000d5555fff57ffffffffffd55fffffffffffffffd55555555fffffffffff5ffffffffffffc00000001ffff000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a223aaaabffabfffffffffffeabfffffffffffffffffeaaaaaaffffffffffebffffffffffffe00000000fffea222a222a222a222a222a220
% 00000000000000000000000000000000000000000000034545ffc57ffffffffffffdffffffffffffffffffff454545ffffffffff5ffffffffffffc00000001fffe000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaabfeabfffffffefffffffffffffffffffffffffffaaaaabffffffffebffffffffffff800000003fffeaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000000000000d555ffd5fffffffff7fffffffffffffffffffffffffffd5555ffffffffddffffffffffffc00000003fffc000000000000000000000000
% 222222222222222222222222222222222222222222223aaabffabffffffffebffffffffffffffffffffffffffffaaaabffffffffbffffffffffff800000003fffe222222222222222222222220
% 0000000000000000000000000000000000000000000035547ff5fffffffffd5ffffffffffffffffffffffffffffe5554ffffffff7ffffffffffffc00000007fffc000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaffaffffffffffaaaafffffffffffffffffffffffffffaaaabffffffebffffffffffff80000000bfffaaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000000000005555ff5fffffffd5555557ffffffffffffffffffffffffffd5555fffffff7ffffffffffffc0000000ffff8000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2eaabfeffffffffaaaaaaafffffffffffffffffffffffffffeaaaabfffffebffffffffffff80000000ffffaa2a2a2a2a2a2a2a2a2a2a2a0
% 00000000000000000000000000000000000000000000c54fe5ffffffff4545457fffffffffffffffffeffffffffff54545ffffff7ffffffffffffc0000001ffff8000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaabfefffffabfeaaaaabffffffffffffffffffebfffffffffaaaaafffffebffffffffffff80000003ffffaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000000001557fdfffff55d55555fffffffffffffffffffff5fffffffffd55555fffff7ffffffffffffc0000003ffff0000000000000000000000000
% 22222222222222222222222222222222222222222222aafebffffaaaaaaafffffffffffffffffffffffafffffffffeaaaaaffffebffffffffffff80000003ffff2222222222222222222222220
% 0000000000000000000000000000000000000000001f55fd7ffff455547ffffffffffffffffffffffffd7fffffffff555457ffff7ffffffffffffc0000007fffe0000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabfabfffaaaaaafffffffffffafffffffffffffabfffffffffaaaaaafffebffffffffffffa000000ffffeaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000005557f57fff55555ffffffffffffd5ffffffffffffd57ffffffffd555555fff5ffffffffffffc000000ffffc0000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222eaafebfffeaaaafffffffffffffeaafffffffffffeafffffffffeaaaaaabfebffffffffffffe000000ffffe2a222a222a222a222a222a220
% 000000000000000000000000000000000000000000454fc7fff54545fffffffffffffd457ffffffffffd47fffffffff5454545ff5ffffffffffffc000001ffff80000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeabfafffeaaabffffffffffffffeaabffffffffffeabfffffffffaaaaaaaffbffffffffffffe000002ffffaaaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000000000d57f7fffd555ffffffffffffffff555fffffffffff57fffff7fffd555555ff5ffffffffffffc000001ffff00000000000000000000000000
% 222222222222222222222222222222222222222222aafeffffaaafffffffffffffffffaaafffffffffffabfffffbfffeaaaaaaffbffffffffffffe000003ffff22222222222222222222222220
% 000000000000000000000000000000000000000000d4f5fffd547fffffffffffffffffd455ffffffffff55fffffcfffe555455ff5ffffffffffffe000007fffe00000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaababebfffaaaffffffffffffffffffeaaaffffffffffabfffffefffeaaaaabffaffffffffffffe00000ffffeaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000000157d7fff557fffffffffffffffffff555555fffffffd5fffffd7fff555557ffd7ffffffffffff00001ffffc00000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a3aeafffeabfffffffffffffffffffeaaaaaabffffffaafffffebfffaaaaabffaffffffffffffe80002ffffea2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000074d7fff45fffffffffffffffffffff54545457fffffc5ffffff4fff454547ffc7ffffffffffff40007ffff800000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaafffaabfffffffffffffffffffffaaaaaaaafffffeaffffffafffaaaaafffabffffffffffffa000bffffaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000000d55fff55fffffffffffffffffffffff55555555ffffd57fffff57ffd5555fffd7ffffffffffffc000fffff000000000000000000000000000
% 22222222222222222222222222222222222222223aabffaaffffffffffffffffffffffffeaaaaaaaffffeabfffffabffeaaaafffebffffffffffffe002ffffe222222222222222222222222220
% 00000000000000000000000000000000000000001457fe55fffffffffffffffffffffffffc5554557ffff47fffff55fff4555ffff5fffffffffffff007ffffe000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaffaaffffffffffffffffffffffffffeaaaaaabfffeabfffffaaffeaaaafffeaffffffffffffeaaaffffeaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000355ff55ffffffffffffff7ffffffffffffd555555ffff55fffffd57ff5555ffff5fffffffffffffddfffff8000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a26abfaabfffffffffffffebffffffffffffeaaaaaabfffabfffffaabffaaaaffffafffffffffffffeefffffa222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000457f45ffffffffffffffc5fffffffffffffd454545fff55fffff457ffd454ffffd7fffffffffffffffffff0000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeafeabffffffffffffffaafffffffffffffeaaaaaafffaaffffeaafffeaaaffffeffffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000001d5fd57ffffffffffffff557fffffffffffffd555557ff55ffffd55ffff555fffff7ffffffffffffffffffe0000000000000000000000000000
% 2222222222222222222222222222222222222222abfabffffffffffeeffeaabfffffffffffffeaaaaafffaaffffeaaffffaaafffffbffffffffffffffffffe2222222222222222222222222220
% 000000000000000000000000000000000000000c57d47ffffffffffcdffc557ffffffffffffff554557ff5577ffe557fffd457ffffdffffffffffffffffff80000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaafaaffffffffffebbffaaaaffffffffffffffeaaaabffaaabfffaabfffeaafffffeffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000155755ffffff7555557f7d5557ffffffffffffff55555ff5555fffd55ffff557fffffffffffffffffffffff00000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2aaaeabfffbfaaaaaaafeaaaaaabfffffffffffffaaaaaffaaabfffaaaffffaabffffffffffffffffffffffe2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 00000000000000000000000000000000000000455d4fffc545454545fd4545454fffffffffffffc54547f5455fffc54ffffd45ffffffffffffffffffffffc00000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeababffeaaaaaaaaabfaaaaaaaafffffffffffffeaaaabfaaaafffeaaffffeaaffffffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000d5757ff55555555557f555555557fffffd55fffff55555f5555ffff557ffff557fffffffffffffffffffff000000000000000000000000000000
% 22222222222222222222222222222222222222aaaaffeaaaaaaaaabfeaaaaaaaabffffeaaaaaabeaaaaaaaaaafffeaabfffeaaffffbffffffffffffffffe222222222222222222222222222220
% 00000000000000000000000000000000000000d554ffd455545554ffd455545554ffff55545554555455545557fff455ffff547fffd7fffffffffffffffc000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaabfeaaaaaaaaabfeaaaaaaaaaafffeaaaaaaaaaaaaaaaaaaabfffaaaffffaaabffabfffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000015557fd5555555557fd55555555003ff80111555555d555555557fffd557fffd5557fd5fffffffffffffff0000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a223aaaffaaaaaaaaaaffaaaaaaaaaa223222aaaaaaaabeaaaaaaaabfffeaabfffeaaaaaaabfffffffffffffe222a222a222a222a222a222a222a220
% 00000000000000000000000000000000000001454ff5454545455ff5454545400000000000454545fd45454547fffd455fffc54545455ffffffffffffd60000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabfeaafaaaaaabfeaaaaaaaa88000808082aaaaabfeaaaaaaaffffeaaafffeaaaaaaaafffffffffffeabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000003557fd57fd555557fd5555555000000000000015557fd55555557ffff555ffff555555557fffffffffd5558000000000000000000000000000000
% 22222222222222222222222222222222222222aaffffffaaaaaaffaaaaaaaaa2000000000222aaaffeaaaaaaafffffaaaffffaaaaaaaabffffffffeaaaae222222222222222222222222222220
% 0000000000000000000000000000000000000755ffffff545555ffd455545400000040000000555fff5455545fffff5457ffff54555457ffffffffd45557000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaffffffeaaaaabffaaaaaaaa800007e7c00002aaaffeaaaaaabfffffaaabffffaaaaaaabffffffffaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000055ffffffd555557ff5555555000001fffe00000155fff5555557fffffd555ffffd5555555ffffffffd55555c00000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2aefffffffaaaaaabfeaaaaaaaa00003ffff000002aaffeaaaaaabfffffeaabffffeaaaaaabfffffffffaaaaab2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000001dffffffe5454547fd4545454000007ffff800000547ff4545457fffffe545fffffd454545fffffffffd45454e0000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabfffffffeaaaaaaffeaaaaaaa00000fffff800000aafffaaaaaaffffffeaaafffffeaaaaaaffffffffffaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000005ff15fffd555555ffd555555000001fffff800000157ff5555557ffffff5557fffff555555fffd7ffffff555556000000000000000000000000000
% 222222222222222222222222222222222222bf22bfffaaaaaaaffaaaaaaa200003fffff8000022abffaaaaaafffffffaaafffffeaaaaaaffeaaffffffaaaaaba22222222222222222222222220
% 000000000000000000000000000000000001f8005fff5455545ff4555454000007fffff800000057ffd55455fffffffd547fffff5455547f5457fffffc55545c00000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabe800bffeaaaaafbffaaaaaaa00000ffffff800000aabffaaaaabfffffffaaabfffffaaaaaaaaaaaaffffffaaaaaeaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000380003ffd5557ff7ff555555000000ffffff800000155fff55557fffffffd555fffff5555555555557ffffff5555580000000000000000000000000
% 22a222a222a222a222a222a222a222a222a280003ffaaabfffbffaaaaaaa00000ffffffc000002aafffaaaabfffffffeaabfffffeaaaaaaaaaaabfffffeaaaaae2a222a222a222a222a222a220
% 00000000000000000000000000000000000300003ff5457fff7ffd45454000000407fffe00000045fffd4547ffffffff454ffffff545454545454ffffff5454560000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae80007ffaaafffaffffaaaaa000000001ffff01c002abfffeaaaffffffffeaaaffffffeaaaaaaaaaaaffffffaaaaabaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000504007ff555fff5f7fff5550000041c007fffc7c00015ffff555fffffffff555fffffff555555555557fffffd555558000000000000000000000000
% 22222222222222222222222222222222222a07007ffaabffebfbfffeaaa0001e3c001fffffc002abfffeaabfffffffffaaafffffffeaaaaaaaaaabfffffeaaaaae222222222222222222222220
% 00000000000000000000000000000000000c0f1c7ff457fe55f5fffff400003f3e000fffffe00015fffe557fffffffffd557fffffffc55545554fdfffffe555456000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaba1e3c7feaaffaabeafffffa80003f3e000fffffe000abffffaabfffffffffaaabfffffffeaaaaaaaafeffffffaaaaabaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000103e387ff55ff557d57ffff800003f3f0007ffffe00015ffff557fffffffffd557ffffffff555555557fffffffd55555800000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2b87c787feabfaaafeabffffe00003fbf0003ffffe0002affffaaffffffffffeaabffffffffaaaaaaaaffffffffeaaaaae2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000207c787fe57f454fc54ffffc00003f9f8003ffffe00005ffffc57fffffffffe545ffffffffc54545457fffffffc54545400000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa8f8f07feafeaabfaaaeabfe00003f9f8001ffffe0002affffaaffffffffffeaaafffffffaaaaaaaaabfffffffeaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000040f8e07ff5f5557f555555fe00003f8fc003ffffe000057fffd5fffffffffff5557ffffff5555555555ffffffff55555700000000000000000000000
% 222222222222222222222222222222222260f9e07eeaeaaabfaaaaaafe00003f8fc003ffffe0002abfffaafffffffffffaaabffffffaaaaaaaaaaffffffffaaaaaba2222222222222222222220
% 000000000000000000000000000000000041f1c0fe555455fe5554557f00003f9fe003ffffc000057fffd4fffffffffff4555ffffffd5455545557fffffffc55545c0000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1f3c0feaaaaabfeaaaaaabf00001fdfe007ffff80002abfffaafffffffffffaaaaffffffeaaaaaaaaaffffffffeaaaaaeaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000c1f3c0ff55555ffd5555557f00001fdff007ffff8000015fffd5fffffffffffd5557ffffff5555555557ffffffff5555570000000000000000000000
% 22a222a222a222a222a222a222a222a222a1f3c0feaaaabffeaeaaaabf00001fdff0073fff00002aafffaafffffffffffaaaabffffffaaaaaaaaabffffffffaaaaab22a222a222a222a222a220
% 000000000000000000000000000000000143f180fd45457ffd5f45455f00000fdff8003ffe0000054fff457ffffffffffd4545fffffff545454545fffffd4fc545458000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab83f181faaaabfbfebfaaaabf00000fdff8007ffc0001feaffeaafffffffffffaaaaafffffffeaaaaaaaafffffeaaeaaaaaeaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000103f081fd5557f7ff7ff5555f00000f9ffc007ff8001ffd5ffd557ffffffffff555557fffffff555555557ffffd557555556000000000000000000000
% 222222222222222222222222222222222383f003faaaafeffffffaaaaf00000f9ffc007ff006fffebffaaaffffffffffeaaaaabfffffffeaaaaaaabffffeaaaaaaaaa222222222222222222220
% 000000000000000000000000000000000103f007f5545fdffff7fd545f00001f1ffc00fff00ffffe5fd4557fffffffffd554555ffffffff45554555fffff555455545000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab87e007eaaabfbffffbfaaaae00001f1ff800fff03ffffebfeaaabfffffffffaaaaaaaffffffffaaaaaaaafffffaaaaaaaabaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000103e00ff5557f7dfdf5fd555e00001e1ff800fff07ffffe5555555fffffffffd555555ffffffff55555555fffffd55555555800000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2eba3e00feaaafefafafafeaaae00003e3ff001fff0fffffeaaaaaaaaffffffeaaaaaaaafffffffaaaaaaaaafffffeaaaaaaaaea2a2a2a2a2a2a2a2a2a0
% 000000000000000000000000000000037fc3e01fc545fdf5e5757f454600003c3ff003fff1fffff8454545455fffff454545fd47ffffff4545454547ffffe54545454600000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeffebf01feaabfbfaeafabfaaae0000183fe003fff7fffff8aaaaaaaaaffeaeaaabfffeabfffffeaaaaaaaaabfffffaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000c3fe3f03fd557f7f5f5755f55540000107fe007fffffffff81555555555fd555557ffff57fffffd5555555557fffff55555555700000000000000000000
% 2222222222222222222222222222222a3fe1f03feaafefeaeafaafaaae0000007fc007fffffffff02aaaaaaaaabaaaaaafffffabfffffaaaaaaaaaabfffffaaaaaaaab22222222222222222220
% 0000000000000000000000000000000c3fe1f87fd457dfd5d47557d554000000ff800fff7ffffff004555455d455545557ffff55fffff45554555455fffffc5554555480000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaab81feaf87faaafafabeafaabeaaa000000ff001ffcffffff802aaaaaafaaaaaaaaafffffaafffffaaaaaaaaaaafffffeaaaaaaaaeaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000301ff1fcffd55f5fd5d57555d554000001ff003ff9ffffff000555555fd55555555fffff55fffffd5555555555ffffff5555555540000000000000000000
% 22a222a222a222a222a222a222a222e01ff3feffaabebfabaafaaaeaaa000001fe007ffffffffc002aaaaabfaaaaaaaaaffffeaafffffaaaaaaaaaaafffffeaaaaaaaaa222a222a222a222a220
% 000000000000000000000000000000400ff87dffc57d7f45c575456544000003fe00fffffffff0000545457fc54545455ffffd45ffffff45454545457fffff4545454570000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaae00f7abdffaafafeabaafaaabaaa800007fc01fe3fffffe0000aaaaaffaaaaaaaabffffaaafffffffaaaaaaaaabfffffaaaaaaaabaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000400fbc1dff55757d5755f5555554000007fc01fc7fffe00000015555ffd55555557ffff5557fffffffd55555557ffffd5555555558000000000000000000
% 2222222222222222222222222222226003c02dffaaeafeabaafaaaaaaa00000ffc01f8fffe0000002aaaabffaaaaaaaabfffeaaafffffffffaaaaaaabffffaaaaaaaaeaa222222222222222220
% 0000000000000000000000000000002001e00dff55d47d5755f4555c5400000ffc01e1fff0000000055457ffd55455547fffd5547ffffffffd5455545ffffd5455545754000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaae800782efeabaafaaaaafaaaaaaa80001ff80001ff800000000aaabfffaaaaaaaaffffaaaafffffffffeaaaaaaaffffaaaaaaaabeeaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000040001806ff5755f55755f555555500001ff80001fc0c00000001557fffd55555557fff55557ffffffffd555557dffff5555555553e000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2afe0800006feaaaaeaaaaafaaaaaaa80003f800001e0382000002aaaffffaaaaaaaafffeaaaabffffffffaaaaaabefffeaaaaaaaaaaea2a2a2a2a2a2a2a2a0
% 000000000000000000000000000000fc000006ff4545e54545f545454500003f000000c0e1c000000545ffffc54545457ffd45457fffffffc5454547f7ffe54545454583000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaffffe80006ffaaaaeaaeaafaaaaaaa80007c00000007870300000aabffffaaaaaaaafffaaaaabfffffffaaaaaaabfbffeaaaaaaaaaeaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000007fdff8006ff5555d55555f55555550000f00000001e1c1e00000157ffff55555555fffd55557ffffffd55555557fdfff55555555560000000000000000000
% 2222222222222222222222222227ffe7ef6002ffaaabaaaaaafaaaaaaaa001e00000003c787000002affffffaaaaaaabfffaaaaabffffffaaaaaaaabffffeaaaaaaaaaa2222222222222222220
% 00000000000000000000000000000ffffffc037fd457d45d54755455540003e0000000f1e3c00000ffffffff54555457fff554557ffffff554555455fffff45554555450000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaafffffffff03ffeaabaaaaaafaaaaaaaa003c0000003cf9f000007ffffffffaaaaaaabffeaaaaabfffffeaaaaaaaaaffffeaaaaaaaaabaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000001803540fffc07fd5575555557555555500078000000736ec00003fffffffff55555557fff555557fffffd555555555ffd7f55555555558000000000000000000
% 22a222a222a222a222a222a222a227aaa3fbc03feaaeaabaaabaaaaaaaa00f0000001ecb700000ffffffffffaaaaaaafffeaaaaabfffffaaaaaaaaaaffebeaaaaaaaaaae22a222a222a222a220
% 0000000000000000000000000000074541f5784fe54745454575454545401e000000393d800003ffffffffff4545455fffc545457fffff45454545457fe5e54545454544000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaabaa80faa82beaaeaaaaaabaaaaaaaa03c000000e6e60000bfffffffffffaaaaaabfffaaaaaabfffffaaaaaaaaaabfeafaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000f5540f55415f55d55555555555555003c000001db980000ffffffffffff5555557fff5555557fffff55555555555ff5755555555557000000000000000000
% 22222222222222222222222222223faaa0faba2afaaaaaaaaabaaaaaaaa07c0000072e600227ffffffffffffaaaaabffffaaaaaabfffffaaaaaaaaaabffabaaaaaaaaaab222222222222222220
% 00000000000000000000000000001f5440f57714755455545554555455407000000ed980007fffe7ffffffffd55457ffff5455547fffffd4555455545ffc555455545555800000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaabfaaa87aba2ababaaaaaaabaaaaaaaa0200002bf6eaaabfffc02ffbfffffeaaaaffffeaaaaaabfffffaaaaaaaaaaaffaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000003f5550795515555555555555555555400000003fb0003fffe0017f5fffffd5555ffffd5555557fffffd55555555557fd555555555555400000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2bfaaa07aaa2aaaaaaaaaaaaaaaaaaaa0000022fee2a3fffe0002beafffffeaaabffffeaaaaaabfffffeaaaaaaaabaffeaaaaaaaaaaaae2a2a2a2a2a2a2a2a0
% 00000000000000000000000000003f45403c440545454545454545454540000001fbfffffff800614d47ffffe5457ffffd4545457ffffff545454547c7ff454545454545600000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaabfaaa83aaa2aaaeaaaaaaaaaaaaaaaa00000abffffffff8003feaaabffffeaaabffffaaaaaaabffffffaaaaaaaabfbfeaaaaaaaaaaaabaaaaaaaaaaaaaaaa0
% 00000000000000000000000000005f555039013555555555555555555540000007f5fffffe0007ff5555fdfff5557ffff55555557ffffffd55555555fdff555555555555500000000000000000
% 22222222222222222222222222227faaaa1eaa2aaaaaaaaaaaaaaaaaaaa000022faaaffff0000fffaaabfafffaaabffffaaaaaaabffffffeaaaaaaabffffaaaaaaaaaaaaaa2222222222222220
% 00000000000000000000000000005fd5541c44755455545554555455544000003f5757ffe0001ff55457fc5ff4555ffff45554555fffffff54555455ffffd455545554555c0000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaffaaaa1eaaaaaaaaaaaaaaaaaaaaaaa8000afaaaaaffc0003faaaaaffaaffaaaaffffaaaaaaabfffffffaaaaaaaaffffaaaaaaaaaaaaaeaaaaaaaaaaaaaaa0
% 0000000000000000000000000000dff57c0e0255555555555555555555400000f555557f80007e155557f517fd5557fff55555555fffffffd5555555ffffd55555555555540000000000000000
% 22a222a222a222a222a222a222a2affafeafaeaaaaaaaaaaaaaaaaaaaaa00003eaaea0bf8000febaaaaffaaffeaaabfffaaaaaaabfffffffaaaaaabeffffeaaaaaaaaaaaaaa222a222a222a220
% 0000000000000000000000000000cfffff47fdc5454545454545454545400003f57f707f8000f9e5455ff447fd4545fffd4545454fffffffc545457f7fffc54545454545460000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaafffffa3faaaaaaaaaaaaaaaaaaaaaa0002faaffa8af0001ffaaaabffaabfeaaabfffaaaaaaaafffffffeaaaaabfffffeaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000157ffffc1fbf5555555555555555555400007517fc10f0003ff55557ff501ff5555fffd5555555ffffffff555555fff7ff55555555555550000000000000000
% 2222222222222222222222222223afffffeaeaaaaaaaaaaaaaaaaaaaaaa0002eaaffeaaf0007faaaaafffaabfeaaabfffeaaaaaaaffffffffaaaaabffebffaaaaaaaaaaaab2222222222222220
% 000000000000000000000000000155f7fffc47d455545554555455545540001e44ffc44e0007c55455fff445fe5457fffd54555457fffffff554555fff57f55455545554558000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaabaaabfffeaaaaaaaaaaaaaaaaaaaaaaa000beaaffeaae001faaaaaffffaaafeaaaffffeaaaaaaafffffffeaaaaaaffeabfaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000015555ffff5f5555555555555555555540007c007f800e001f15555ffff500ff1fffffff55555557ffffffd555555fff55fd5555555555558000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a3aaaaffffeaaaaaaaaaaaaaaaaaaaaaa000feaaffaaae007faaaabffffaaafeaffffffeaaaaaaabffffffeaaaaaafffaafaaaaaaaaaaaaae2a2a2a2a2a2a2a0
% 000000000000000070000000000145457ffff5454545454545454545454001fc445e444c007e45455ffffd407e5fffffff45454547ffffffc545454fff457d4545454545454000000000000000
% aaaaaaaaaaaaaaaabeaaaaaaaaabaaaaaaffaaaaaaaaaaaaaaaaaaaaaaa003feaaaeaaac01feaaaabfffffaabebffffffeaaaaaaabffffffeaaaaaafffaabeaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000f00000000015555557ffd555555555555555555554007ff0101010c03ff55557fff80e01e1fffffff55555555fffffff5555557ffd55f5555555555578000000000000000
% 222222222222222223a222222223aaaaaabeaaaaaaaaaaaaaaaaaaaaaaa00ffeaaaaaaa807feaaaabfe01faa2e2fffffffaaaaaaaafffffffaaaaaafffeaaeaaaaaaaaaaaa2222222222222220
% 000000000000000000c0000000015455545fff55545554555455545554401ffe444444581fff54557e01fc40040fffffff55545554fffffffc555457ffd5575554555455570000000000000000
% aaaaaaaaaaaaaaaaaaeaaaaaaaabaaaaaabaaaaaaaaaaaaaaaaaaaaaaaa83fffaaaaaab03ffeaaaaf83ffaaa88afffffffaaaaaaaafffffffeaaaaabffeaabaaaaaaaaaaabaaaaaaaaaaaaaaa0
% 00000000000000000050000000015555555ff5555555555555555555554077ff800000607fff5555c3fffd500007ffffffd5555555fffffffffd5557fff5555555555555550000000000000000
% 22a222a222a222a222b222a222a3aaaaaabaaaaaaaaaaaaaaaaaaaaaaaa0efffeaaaaac0ffffaaae1ffffaaa2223ffffffaaaaaaaaffffffffffaaabfffaaaaaaaaaaaaaaba222a222a222a220
% 0000000000000000001800000003454545574545454545454545454545463ffffc444581ffffe5507ffffd400001ffffffc54545457fffffffffc545fffd454545454545458000000000000000
% aaaaaaaaaaaaaaaaaab6aaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa87fffffaaaf01fffffae1fffffaaa8000ffffffaaffeaaaffffffffffaaabfffeaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000c000000075555557d555555555555555555555ff0fffffff03e03fffffd87fffffd5000007fffffffbffd557fffffffff5555ffff555555555555558000000000000000
% 222222222222222222262222222faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1fffffffffb2fffeffe1ffffffaaa20027fffff8feaaaaafffffffffeaaaaffffaaaaaaaaaaaaaae222222222222220
% 000000000000000000060000000fd55455f45554555455547fff7fff7f43fffc45ffbf9fff54587ffffffd5400003ffff874555455fffffffffc55547fff555455545554554000000000000000
% aaaaaaaaaaaaaaaaaaabaaaaaaafeaaaaaaaaaaaaaaaaaaaaafaaaaaaaa7fffaaabffffffeaae3bffffffaaa80001fffc7aaaaaaaafffffffffaaaaaffffaaaaaaaaaaaaaaeaaaaaaaaaaaaaa0
% 000000000004000000030000000ff55557d555555555557fffffffffff0ffff55557ffffff558f7ffffff55400000ffc3f91555555fffffffffd15557fffd55555555555554000000000000000
% a2a2a2a2a2bfe2a2a2a2a2a2a2afffaafaaaaaaaaaaaaaaeeeaeeaaaaaafffaaaaaaffffffeb3fbffffffaaaa0000fe3ffaaaaaaaafffffffffaaaaabfffeaaaaaaaaaaaaaa2a2a2a2a2a2a2a0
% 000000000003f000000180000007fffff7454545454557fff7f7fff7f75fff4545457ffffffc5fffffffe54400001e1fff84454545fffffffffc44447ffff54545454545456000000000000000
% aaaaaaaaaaaabeaaaaab6aaaaaafffffaaaaaaaaaaaabbeaaaaaabaaaabffaaaaaaaaffffff1ffffffffeaaaa000e07fffaaaaaaaafffffffffaaaaabffffaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000f000000c0000003ffffff5555555557fffff5557fffff7fd5555555555fffe3ffffffffd551000303ffff80015555fffffffffd01011ffffd5555555555556000000000000000
% 22222222222222a22222e2222223fffeaaaaaaaaaaaeeaaaaaaaaaeaaafeaaaaaaaaaaaaffcfffffffffaaaaa01c1fffffa2aaaaaafffffffffeaaaaaffffeaaaaaaaaaaaab222222222222220
% 00000000000001400000a00000015ffffc55545555fffc55545557fffff554555455fff55f1fffffffffd454006061ffff80045555fffffffffe04040ffffe5554555455545000000000000000
% aaaaaaaaaaaaaaeaaaaaeaaaaaaaafeaaaaaaaaaabbaaaaaaaaaaabeaabaaaaaaaae0072ae7ffffffffeaaaaab8381ffff8aaaaaabffffffffffaaaaafffffaaaaaaaaaaaabaaaaaaaaaaaaaa0
% 0000000000000030000060000000df7f755555557ffd55555555557ffff5555555700fd55cfffffffffd55550c1c01ffff80001555ffffffffff800007ffffd555555555555000000000000000
% 22a222a222a222be22a252a222a26eaaaaaaaaaaeeaaaaaaaaaaaaaeaaaaaaaaab81faaab1fffffffffaaaaab06001ffff0222aaabffffffffffa2a2a3ffffaaaaaaaaaaaaaa22a222a222a220
% 000000000000000c0000500000003ff565454547f545454545454547f7f54545461f4545677ffffffff54545c38003ffff00000445ffffffffffc00003ffffc545454545454800000000000000
% aaaaaaaaaaaaaaaaaaaabaaaaaaafaaaaaaaaaaaaaaaaaaaaaaaaaabfaaaaaaaa82aaaaacaafffffffaaaaae0c000fffff0088aaabffffffffffe888a9ffffeaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000005000030000000fff57555555f5555555555555557ffff555550d555553557ffffff55557830001fffff000007ffffffffffe0000001fffff155555555555800000000000000
% 2222222222222222a2222a222223aaaaaaaaaaaaaaaaaaaaaaaaaaaaeeaaaaabe3aaaaaa6aabfffffeaaaac0ea001fffff0003f81fffffffffe2222222fffffaaaaaaaaaaaae22222222222220
% 00000000000000014000280000077fd4555455d45554557f7fff55557fff55578554555cd5547fffd554570740001fffff01fc0fe7ffffffffe0000000fffffc55545554555400000000000000
% aaaaaaaaaaaaaaaaeaaabaaaaabeaaaaaaaaaaaaaaaaaaafbfffaaaabfeaaaaf1aaaaab1aaaaaabaaaaab81aaa800ffffffe03faafffffffffe8000060fffffeaaaaaaaaaaaeaaaaaaaaaaaaa0
% 000000000000000060001800007d7f555555555555557fffffffffd57fffd5567d5555635555555555556070000007ffff007c0007ffffffffe00001fc7fffff15555555555400000000000000
% a2a2a2a2a2a2a2a2d2a2baa2a3aaaaaaaaaaaaaaaaaaaeeaaaaaeeaaaeeaaaa8feaaaaceaaaaaaaaaaab81aaa22007fff007802227ffffffffe22001fe7fffffaaaaaaaaaaaea2a2a2a2a2a2a0
% 0000000f00000000280014000745f545454565454547ffc545454fff47fff551ff4545954545454545460644400001ff00f8000003ffffffffe00003ffbfffffc445454547c400000000000000
% aaaaaafffaaaaaaabaaaaeaaaeaaaaaaaaaaaaaaaaabfaaaaaaaaafbaafaaeb3ffaaab2aaaaaaaaaaab83aaaaa8000f80f0000008bffffffffe00003ffffffffeaaaaaaaaaaaaaaaaaaaaaaaa0
% 000000e03600000014000c001f55d5555555d555557fd5555555555ffdffff67fff55655555555555560d11100000780ff00000001ffffffffc00003ffffffffe1155555565600000000000000
% 222222222fe222222a222e222aaaaaaaaaaaaaaaaaeeaaaaaaaaaeeaeeaeabcbfffaacaaaaaaaaaaab83aaaaaa20780fff00000023ffffffffc00001ffffffffeaaaaaaaaa3a22222222222220
% 0000000001f000000a000c007c57d4555455545557f5545554ffffffffffff95fffd515554555455560d44440003807fff00000000ffffffff800001fffffffff0055455561c00000000000000
% aaaaaaaaaaaeaaaaadaaaaaaaaaaaaaaaaaaaaaaafaaaaaaafbfaaafbfbfab2affffa2aaaaaaaaaab87aaaaaaabc07bfff00000000ffffffff800001fffffffffaaaaaaaaaaeaaaaaaaaaaaaa0
% 00000000001a000003000a03755fd555555555555f555555ffffd555fffffe757fffc5555555555560d5110001c0383fff000000007fffffff000001ffffffff98011555550000000000000000
% 22a222a222a522a222a22aa2aaaaaaaaaaaaaaaaaeaaaaaeeaaaaaaaaeaeeabebfff8eeaaaaaaaab83aaaaaaae01c01fff000000003fffffff000001ffffffffc222aaaaaba222a222a222a220
% 000000000003c00001400a07c557c54545454545fd45455ff5454577fffffcff7fff7f3f454545460c444440701e001fff000000003ffffffe000001ffffffffe0004545450000000000000000
% aaaaaaaaaaaaaaaaab6aaaaeaaaaaaaaaaaaaaaafaaaaabaaaaaaafbebfbf9bfbfff81fffffaaab83aaaaaab80e0000fff800000001ffffffe000000ffffffffe002aaaaabaaaaaaaaaaaaaaa0
% 000000000000780000a0060fd57fd55555555557d55555fd55555ffd555553ffdf1c3fffffff5560d141001c0700000fff800000001ffffffe0000007ffffffef0000155550000000000000000
% 222222222222362222a2262aaaaaaaaaaaaaaaaeaaaaaaeaaaaaeeaaaaaaa6efffe3fffffffeab83aaaaaae03a200007ff800000000ffffffc0000003ffffffe30022aaaaaa222222222222220
% 0000000000000a000050061f55fd55545554555f555457d45555f5545554657fff0dfffffffe460c44444703c0000007ff800000000ffffffc0000003fffffff18000444558000000000000000
% aaaaaaaaaaaaadaaaacaadbaaaaaaaaaaaaaaaaeaaaabfaaaaaaaaaaaaaacaaffc72fffffffeb83aaaaab81ea8800007ffc000000007fffffc0000001fffffff08000aaaaaaaaaaaaaaaaaaaa0
% 00000000000002800028051f57f555555555555d55557d555575555555559557f1c47ffffffd20d11000e0600000003fffc000000007fffff80000001fffffff04000015554000000000000000
% a2a2a2a2a2a2a362a2a6a5aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9aaac78abffffffac3aaafef03a22220003fffc000000003fffff80000000fffffff020022aaaae2a2a2a2a2a2a2a0
% 00000000000000a00014053547e54545454545754545f54545c54545454525471f100fffffe70c45fff81c000000003fffc000000003fffff80000000fffffff80000005454000000000000000
% aaaaaaaaaaaaaadaaab6adaaaaaaaaaaaaaaaafaaaaaeaaaaaaaaaaaaaab2aac7e38abffffac3fffffc0eaa88880007fffc000000003fffff800000007ffffff800000aaaaeaaaaaaaaaaaaaa0
% 0000000000000028000a057d57d55555555555f55557d5555d55555555565551dc7801ffff30ffffff03fc000000007fffc000000001fffffc00000007ffffff80000000556000000000000000
% 222223ffe2222236222a23eaaaaaaaaaaaaaaaeaaaaaaaaaaaaaaaaaaaaaaaa2a87a22ffffc3fffff81ffff2220000ffffc000000000fffffc00000007ffffffc0000022aaa222222222222220
% 00000fcffe00000a000503fd5fd55455545557d554575455745554555454d4c550fc003fff8fffffe0ffffffe07807ffffc0000000007ffffe00000003ffffffc0000000546000000000000000
% aaaabeaabdeaaaadaaadabaaaaaaaaaaaaaaabaaaaaeaaaaaaaaaaaaaaadab1aa1fc0abffe3fffff07ffffffffffffffff80000000007fffff00000003ffffffe0000000aabaaaaaaaaaaaaaa0
% 0000200003300002800283fd5f55555555555555555f5555d55555555559563503fe000ff8fffffc1fffffffffffffffff80000000033fffff00000003ffffffe0000000155000000000000000
% 22a222a222ee22a362a2a6aaaaaaaaaaaaaaaaaaaaaeaaaaaaaaaaaaaab2ac6a86ff0227e3ffffe0ffffffffffffffffff800000000fffffff80000001fffffff00000002ab222a222a222a220
% 00000000001f8000a0014ff577454545454547454555454545454545455359c50d7f0003cfffff87ffffffffffffffffff8000000007ffffff80000021ffffe3f0000000055000000000000000
% aaaaaaaaaaaa6aaadaab7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a2ab1abf80831ffffc3fffffffffffffffffff0000000007ffffff80000039ffffe1f80000000abaaaaaaaaaaaaaa0
% 00000000000190004800b5f57d55555555555555557555555555555555654556355fc00c7ffff1fffffffffffffffffffe0000000007ffffffc000003cffffe0f8000000055800000000000000
% 2222222222226e222622aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac68aac6aafc031ffffc7fffffffffffffffffffe0000000003ffffffc000003effffe0780000000eaa22222222222220
% 0000001e00001b001200d5f47d545554555455545554555455545554444f1558557ffe467ffe3ffffffffffffffffffffc0000000703ffffffc000003ffffff03c0000000f5800000000000000
% aaaaabe1feaaacaaaaaaeaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa8a2ab0bf8001e83ff8fffffffffffffffffffff80000001fe1ffffffc000003ffffff00c0000000baaaaaaaaaaaaaaa0
% 00001f3ff38003600500f5f5fd55555555555555555555555555551511145121e07ffff81fc7fffffffffffffffffffff00000000ff9ffffff0000003ffffff006000000045800000000000000
% a2a2bea2af72a29aa2a3aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab18aaa707aaf8c01f1dffffffffffffffffffffe000000007ffffffff0000003ffffff80200000006aea2a2a2a2a2a2a0
% 0000600000ef00640143c5f5f5454545454545444445454545454444451144787d456300187e7fffffffffffffffffffe000000003ffffffff8000001ffffff800000000043c00000000000000
% aaaaaaaaaabceab3aaaeaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa22ab87aaaa8f00e3ff0ffffffffffffffffffff000000000ffffffff8000001ffffff80000000006baaaaaaaaaaaaaa0
% 000000000003300c8057d5f5f55555555555555101155555555141010244061901571f830fff87fffffffffffffffffff0000000007fffffff8000001ffffffc00000000020800000000000000
% 222222222222ce226236aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa8ab86aaaac6fdc73ffc3fffffffffffffffffff8000000003fffffffc000000ffffffc00000000022222222222222220
% 0000000000003b01302fd4f7f4555455545554444445545554444444051061c44471d7e181ffe0fffffffffffffffffff8000000001fffffffc000000ffffffc00000000020000000000000000
% aaaaaaaaaaaaaeeacabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae2b866aaac6ab8e00ffe03ffffffffffffffffffc000000000fffffffc0000207fffffe0000000001aaaaaaaaaaaaaaa0
% 0000000000000130241f5577f55555555555151000005555551100000c26188001891e3000fff01ffffffffffffffffffe0000000f87ffffffc00003e7fffffe00000000010000000000000000
% 22a222a222a222ce3abaaaaaaaaaaaaaaaaaaaaaaaa2aaaaaaaaaaa2a8787122ae3ab1f803fff80fffffffffffffffffff0000000fe7ffffffe00007f7fffffe0000000001a222a222a222a220
% 000000000000003305974567e545454545444440400045454444400008e1a20008c4c67c07fff807ffffe007ffffffffff8000000fffffffffe00003fffffe0000000000018000000000000000
% aaaaaaaaaaaaaaacaa6aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab186c480b3ab1abc03fffc01fffe0000ffffffffffc000000fffffffffe00003fffffc000000000000aaaaaaaaaaaaaaa0
% 000000000000000261bf1577f55555555551110000000555510000002108880fc40ce17e03f0fc00ffe000001fffffffffe0000007fffffffff00001fffff80000000000008000000000000000
% 2222222222222223924aaaaaaaaaaaaaaaaaaaaaa2222aaaaaaaaa224233fff0fa73aabf01f810007f80000007fffffffff0000007fffffffff00001fffff8000000000000a222222222222220
% 00000000000002006c3e457775545554554444400007055444440000845e1ffff99c044f81f800000400000007fffffffffc000007fffffffff80000fffff80000000000004000000000000000
% aaaaaaaaaaaffdfabbbaaaaaaaaaaaaaaaaaaaaaaaae8aaaaaaaaaa908e1e2b9ae6aaaafc0fc00000000000007fffffffffe000000fffffffff80000fffff80000000000006aaaaaaaaaaaaaa0
% 00000000007fe7f7e49e0177f555555555100000001e0155000000010f1e40225b800003c03e00000000000007ffffffffff0000003ffffffffc00007ffff80000000000004000000000000000
% a2a2a2a2a3e2a2af1f7aaaaaaaaaaaaaaaaaaaa2223e22aaaaaaa22218e8a2cffffaa2a3f01f0000000000000fffffffffff00000007fffffffc00007ffff800000000000022a2a2a2a2a2a2a0
% 00000000038fffc0f3d64067c545454544444000003800444000000463091f3fffff8000f8078000000000000fffffffffff80000001fffffffc00003ffff80000000000002000000000000000
% aaaaaaaaaeffffbaae6aaaaaaaaaaaaaaaaaaaa888f000aaaaaaa8858cb3fcfffffff8a87c03c000000000000fffffffffff800000003ffffffe00003ffffc0000000000003aaaaaaaaaaaaaa0
% 0000000018f0007701de0177c155555551000000007000110000000e3027fbc00000ff801e01e000000000001ffffffcffffc000000007ffffff00001ffffc0000000000001000000000000000
% 2222222233a2222fe23aaaaaaaaaaaaaaaaaa22222e2002aaa222218d24ff60000002fe20f007800000000001fffff807fffc000000001ffffff80001ffffc0000000000001222222222222220
% 0000000002000000dc0e0067c44554544404000001c0000400000061239ff800000001f807803e00000000001fffff003fffe0000000003fffff80001ffffe0000000000000800000000000000
% aaaaaaaaaaaaaaaabbaaaaaaaaaaaaaaaaaaaa8801c0000aaa8880c73f2ba0000000001e03e01fc0000000003fffe6000ffff0000000000fffffc0001ffffe0000000000000aaaaaaaaaaaaaa0
% 0000000001ffff8006ce00338115151500000000038000000000018a7f6000000000000781e007f0000000003ffffffffffff0000000000fffffe0000ffffe0000000000000800000000000000
% 22a222a23efff87e23baa2aaaaaaaaaaaaa2a22223800002a22222367fe0000000000020e2f203fc000000003fc00000000ff0000000001fffffe0000ffffe000000a000000622a222a222a220
% 00000000ff0007c3e06f006384444444400000000700000000000c4cf700000000000000307801ffc000003fc000000000001e000000001ffffff0000ffffe0000000000000400000000000000
% aaaaaaabeaaaaabf1fbaa8aaaaaaaaaaaaaaa8800f000000a880b18dae0000000000000008be807fffffffc000000000000001e00000001ffffff8000ffffe0000002a000006aaaaaaaaaaaaa0
% 0000000700000000e0e7002380011100000000001f0000000000231f8600000000000000001e003fffffc0000007ffffffff00180000001ffffffc0007fffe0000000000000200000000000000
% 2222222e222222223e1ea22aaaaaaaaaaa2222203e0000002222c63ff9f0000000000000002f200ffff00003ffffc0000ffff8060000001ffffffc0007fffe0000000220000222222222222220
% 000000180000000001c5002300444444018000007e00000000010c7ffffc00000000000000078007ff0003fc1fffc0000fffffe18000003ffffffe0007fffe0000000000000200000000000000
% aaaaaabaaaaaaaaaaabe80aaaaaaaaaabff88001fc000000882a14fe000f000000000000002bea03e001fffc1fff80000ffff81e6000003fffffff0007fffe00000002a80002aaaaaaaaaaaaa0
% 00000020000000000000c00380000000fffc0003fc00000000042fe000038000000000000001f07c00fffffe0fff000007fff001d800007fffffff0003fffe0000000001c00200000000000000
% a2a2a2a2a2a2a2a2a2a2a023e2aaaabffaffa00ff800000022b85ba00000c00000000001ff02ff807ffffffe0fff000007ffe0003400007fffffff8003fffe00000000a3a001a2a2a2a2a2a2a0
% 000000000003fff800020002e0005ffe4445f07ff80000000030ee00000000000000001fff00f83fbffffffe07ff000007fe00000e00007fffffffc003fffe0000000002180100000000000000
% aaaaaaaaabfc6007feaaa00afeafffeaaaaaaffff000000002e3bea000000000000000ff801f0fe81ffffffc07ff80000ffe00000300007fffffffc003fffe000000002aac01aaaaaaaaaaaaa0
% 000000000fff9fff81f300067ffffc0000000001f00000000047f0000000000000000ff003e1ff0007fffffc07ff80000ffe0000018000ffffffc7c003fffc0000000002060100000000000000
% 222222227e2222227e0e8026bfffeaaaaaaaaaabe0000000028f2200000000000000ffe07c3e3fa203fffffc03ff80001ffc0000004000ffffffc1e003fffc0000000002230122222222222220
% 00000001b000000001fc00064444444444444447e000000001360000000000000007fc0787c00fc001fffff803ff80003ffc0000000000ffffffe07003fffc000000000200c100000000000000
% aaaaaaafeaaaaaaaaaaa0006aaaaaaaaaaaaaaafe0000000ae4c2a0000000000001feaf8f802afea80407ff801ffc000fffc0000000000ffffffe03001fffc000000000aaae1aaaaaaaaaaaaa0
% 0000000e0000000000000004000000000000000fc000000005b0000000000000007f879f000003f800003ff001ffc001fff80000000001ffffffe00801fffc0000000002003180000000000000
% 22a222ba22a222a222ae0006aaaaaaaaaaaaaaaf80000002aa60a0000000000003fefbe00000a3fea0003ff001ffee03fff80000000001fffffff00001fffc000000000122b922a222a222a220
% 000000300000000003f70004444044404440445f000000001d800000000000000ffffc00000001ff00001fe000ffff8ffff80000000001fffffff00001fffc0000000001000700000000000000
% aaaaaaeaaaaaaaaabffa0006aaaaaaaaaaaaaabe0000000ab3008000000000003fff80000000aaffaa003fe000ffffdffff80000000001fffffff00001fffc0000000001aaaaaaaaaaaaaaaaa0
% 0000004000000000f8020006000000000000007c000000006600000000000001fff00000000000ffe0003fc0007ffffffff80000000003fffffff00001fffc0000000001000000000000000000
% 222222a222222223e2220002aaaaaaaaaaaaabf800000022d80000000000000ffe2000000000227ff2003f80007ffffffff80000000003fffffff80002fffc0000000001222222222222222220
% 000000000000000f0002000344444444444447f000000007a00000000000003fe00000000000007ffc003f80003ffffffffc0000000003fffffff80000fffc0000000000800000000000000000
% aaaaaaaaaaaaaabeaaaa0003aaaaaaaaaaaaaff0000000aec0000000000001ffaa80000000000abfffffffffff3ffffffffc0000000003fffffff80000fffc0000000000aaaaaaaaaaaaaaaaa0
% 0000000000000030000200030000000000000f80000000050000000000001ffc0ffffffffffffff00000000000fffffffff80000000003fffffffc0000fffc0000000000800000000000000000
% a2a2a2a2a2a2a2e2a2a20001aaaaaaaaaaabff00000000be000000000000fffff003ffffffffffffffffff0000000003fff00000000007fffffffc0000fffc0000000000e2a2a2a2a2a2a2a2a0
% 00000000000000c000010001c4444444445ff0000000002800000000001ffffffffc00000003000fff0018fffffffe00000ff000000007ffff3ffc0000fffc0000000000400000000000000000
% aaaaaaaaaaaaaaaaaaab0001eaaaaaaaafff8000000003d800000000003ffeea0000000000070aefffaa000000ffffffe0000ff800000fffff07fc0000fffc00000000006aaaaaaaaaaaaaaaa0
% 0000000000000100003f0000e00000003fc00000000003e000000000007ff00000000000000601ffff80000000fffffffffc0007f8001fffff00fc0000fffc0000000000600000000000000000
% 222222222222222223cf0000eaaaaaabfc000000000003800000000001ffe22000000000000e03ffffa2000000ffffffe003ff8007f07fffff007c0000fffe0000000000222222222222222220
% 00000000000000001df1000074544447f0000000000001000000000003ffffffffc00000001c01ffff80000001fffffff800007f800fffffff000c0000fffc0000000000200000000000000000
% aaaaaaaaaaaaaaaafeab00003aaaaaab8000000000000000000000002fffffc0007fff00003803ffffea800001fff3fffe0000007e007fffff00040000fffea0000000003aaaaaaaaaaaaaaaa0
% 0000000000000003e00080003c1400078000000000000000000000003ff6003fffc000fffe7001ffffc0000001fff1ffff80000001f803ffff80000000fffc0000000000100000000000000000
% 22a222a222a222af22a280001eaaaaaf000000000000000000000000ffa2a000003fffc001fffeffbfe2a00001fff0ffffc000000007e03fff80000000fffca20000000012a222a222a222a220
% 0000000000000078000080001f4544473fe000000000000000000001fc0000000000003ffe0003ffffe0000001fff07fffc000000007ff87ff80000000fffc0000000000180000000000000000
% aaaaaaaaaaaaaabaaaaacc000eaaaaabfffe0000000000000000000bfffa0000000000002bfe00001feaa00001fff07fffc00000000ffff0ff80000000fffc2a800000000aaaaaaaaaaaaaaaa0
% 00000000000001c000004f0007515405ffffc000000000000000001fff8ffc00000000000f01ff00003fc00001fff03fffc00000000fffff0f80000000fffc0000000000080000000000000000
% 222222222222232222222f0003aaaaaaffffe000000000000000007e727fe3fc000000003e2002ff80003f8001fff03fffc00000001fffffe180000000fffc02200000000e2222222222222220
% 00000000000006000000200001d555557fffc00000000000000003f000001ff3f80000003f0000107fc0007f00fff03fffc00000003ffffffe60000000fffc0000000000040000000000000000
% aaaaaaaaaaaaaeaaaaaaf00800eaaaaabfff80000000000000001feaa800000ffff8000abff002aaafff0000f8fff03fffc00000003fffffffd8000000fffc00aa80000006aaaaaaaaaaaaaaa0
% 00000000000018000003300e007555555fff000000000000000001ff8000000007e7f000ffffc0000ff0fc0007fff03fffc00000007fffffffb4000000fffc0000000000060000000000000000
% a2a2a2a2a2a2b2a2a2adf80f003aaaaaaffe000000000000000023fe7f000000001f8fe3bfa7fea2aff2a3f0007ff03fffc0000000ffffffff8f000000fffc0002a0000002a2a2a2a2a2a2a2a0
% 0000000000003000007e080f001d757577fe00000000000000000001fcfc000000007e1fc0001fe00ff0000f8003f07fffc0000000ffffffff83c00000fffc0000000000020000000000000000
% aaaaaaaaaaaaeaaaabbaa800000eaaaaabfc00000000000000abeaa003ffe000000aabf83e8002ffaffaa8007e001effffc0000001ffffffff80e00000fffc0002aa000003aaaaaaaaaaaaaaa0
% 000000000000400006c004000007555555fc00000000000003c3e0000003df80000001ffc1f0000ffff0000001f001ffffc0000003ffffffff80300000fffc0000000000010000000000000000
% 22222222222222222b2224000003eaaaaaf800000000000223e3de0000003c7c00222ffffc0f8222fff22000000f000fff80000003ffffffff80080000fffc0000222000012222222222222220
% 00000000000000001c0004000001f555557000000000001e03b03f00000003e3c001f8ffffc07c000f7c00000007f001ff00000007ffffffff00040000fffc0000000000018000000000000000
% aaaaaaaaaaaaaaaafaaaac000000faaaaaf0000000003f1febfea3c00000001e3aafffaa0f7c03eaaff3a8000003ff007e0000000fffffffff00020000fffc00000aa80000aaaaaaaaaaaaaaa0
% 0000000000000000a000040000003d5555600000001e3fdf100e00f000000001c78fc0fc00f7c03c0ffe78000003fff00e0000001fffffffff00000001fffc0000000000008000000000000000
% 22a222a222a222a3e2a2240000001eaaaae00000001e1ce0ec03003e00000000387fffe3c00f3c03eff3e7000001ffff018000003fffffffff00000001fffc000000a28000e222a222a222a220
% 00000000000000030000062000000f7555400000001c00381201c00d800000000707001c3c00e3e03ff01cf00001fffff07000003fffffffff00000001fffc0000000000004000000000000000
% aaaaaaaaaaaaaaaeaaaaaa3c000007aaaa800000000000140900a00360000002bfe0e003c3fffc3e03faabce0000fffffc0e00007fffffffff000000c1fffc0000002aa0006aaaaaaaaaaaaaa0
% 000000000000000c0000023c000003d5558000000000000a0480500090000000ffdc38003c1ff387e0380039e000ffffe381c000fffffffffe000001f1fffc0000000000802000000000000000
% 222222222222223a22222200000001eaab8000000000000a024048004c000003fc3f8700ffc1fe60fe0720079c007fffe0703001fffffffffe000003fdfffc0000000222601222222222222220
% 000000000000001800000100000000fd5780000000000009024028003200001fffffe0dffff03e1c1fe0e00073c07fffc00e0801fffffc0ffe000003fffffc0000000000581800000000000000
% aaaaaaaaaaaaaabaaaaaab000000007fef8000000000000501202400098000ffaa01fc3ffffe07ab83fc1c000f3c7fffc001c603fffff807fc000003fffffc00000000aa6f0aaaaaaaaaaaaaa0
% 0000000000000070000001800000007fff0000000000000501201200064007f800003f87ffffc0e07073838000e3bfff80003187fffff001f8000003fffff8000000000020fc00000000000000
% a2a2a2a2a2a2a2e2a2a2a2800000003fff0000000000000500a0110001203fffa00007f1fffff81aae1ef060001c7fff80000c4fffffe000f8000003fffff80000000022a2a2a2a2a2a2a2a2a0
% 0000000000000060000000c00000001fff8000000000000500a009000099ff6078003ffe7fffff0703c38e1c0003c7ff8e00033fffffe00040000003fffff80000000000300000000000000000
% aaaaaaaaaaaaaaeaaaaaaac00000000fff80000000000005005008800067fefff701fead9fffffc0ebf071c3800078ff7f8000cfffffc00000000001fffff800000000029aaaaaaaaaaaaaaaa0
% 00000000000000400000006000000007ffc00000000000050050048001f3fc000ef3fdd767fffff81dfe0e306007ff8ffff80037ffffc00000000001fffff80000000000100000000000000000
% 22222222222222222222223000000007ffc00000000000050050047ffff8ffc001cfeaaaf9ffffff03f3c18e10fffff3ffff80ffffff800000000001fffff80000000002122222222222222220
% 00000000000000000000001800000003ffe00000000000060050027ff8e663f00031f7777e7fffffe0703871ccfffffe7fffffffffff800000000001fffff00000000000100000000000000000
% aaaaaaaaaaaaaaaaaaaaaaac00000003ffe000000000000a1f3f0e7feafd183e003c6aaaaf9ffffffc0e860c3bffffffcfffffffffff800000000000fffff00000000000baaaaaaaaaaaaaaaa0
% 00000000000000000000000300000003fff000000000000a1e2f8f27f803880d807f1d5555efffffe383818307fffffff9ffffffffff800000000000fffff00000000000200000000000000000
% 22a222a222a222a222a222a2f0000001fff000000000000a1c2f8f26aea2c40361eac6aaaafbfffff2e06070c0ffffffff3fffffffff000000000000fffff0000000000022a222a222a222a220
% 0000000000000000000000001f000001fff800000000000c002e009005003200dff771f7777dfffff81c180c303fffffffe7ffffffff0000000000007fffe00000000000200000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaabf00000fffc00000000000c001800900280190033aaac6aaaaf5ffffaab06038e0ffffffffeffffffff0000000000007fffe000000000003aaaaaaaaaaaaaaaa0
% 000000000000000000000000000f0000fffc0000000000180018005001400c8009d5d715d5dfe7fffc00c1806183ffffffffffffffff0000000000003fffe00000000000100000000000000000
% 2222222222222222222222222222f0007ffe00000000001800180050012006401c6aaaceaaabf9fffe2238701861bffffffffffffffe0000000000003fffe00000000000122222222222222220
% 00000000000000000000000000000f007fff0000000000180018004800a00320373777737777fe7ffe00060c07187ffffffffffffffc0000000000001fffc00000000000080000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaf83fff8000000000100018002800a002906a8aaaaceaabff8fffaa01c300c61ffffffffffff9f80000000000001fffc000000000000aaaaaaaaaaaaaaaa0
% 00000000000000000000000000000047cfffc000000000300018002800a00149d5655556355dfff3ff800030c0398ffffffffffff0f00000000000001fffc00000000000080000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a23fffe0000000002001ffffec00900127aab3aaab8aaaffbcffe0000e300667fffc1ffffff0000000000000000fffc0000000000006a2a2a2a2a2a2a2a0
% 0000000000000000000000000000002003fff800000000003ff800f7f89000937778f77767777fff3fc000018c0193fff80ffffffc000000000000000fffc00000000000040000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaab8889ffc0000000007fff888948b9f0089aaae6aaab9aaffffcfe8000063007cfff007ffff878000000000000007ffc0000000000006aaaaaaaaaaaaaaa0
% 000000000000000000000000000000100000fe00000003fffff8001405f7ffccd5d515d5d4ddffffe3e000001cc00f3ff003ffff00f000000000000007ffc00000000000020000000000000000
% 2222222222222222222222222222223222227fffffffffffbffa22362aaaaacaaaaa8eaaab2abffff8e00000033003dff003ffff001e00000000020003ffc00000000000022222222222222220
% 0000000000000000000000000000000800007ffffffffffe3ff8000c07b77767f7776377779f7ffffe30000000e800fff001fffe0003c0000000000003ffc00000000000030000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa88888e7ffdffffffc1ffc888a8aaaaaa6eaaab1aaaaeebfffff880000001e007ff0007ffe000078000000008001ffc0000000000001aaaaaaaaaaaaaaa0
% 00000000000000000000000000000004000021cffffffff81ffe000a0db55553755558d55553dfffffe60000000780fff0003ffe00000f000000000f01ffe00000000000010000000000000000
% 22a222a222a222a222a222a222a222a4222230e1e7e7a7f03ffe20262aeaaab2baaaac6aaabdaffffff980000001e0fff0000ffe000001e00000002f80ffe0000000000000a222a222a222a220
% 00000000000000000000000000000002000030c041c181f01fff00060f7777797f77773777767fffffe66000000039fff00007fe000000200000001fc0ffe00000000000008000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa8880b0a0a06040701ffe80060baaaaa9aeaaaa9aaabb2fffffe1980000000ffff00001f8000000000000001ff0ffe0000000000000aaaaaaaaaaaaaaa0
% 0000000000000000000000000000000200001890b0f0a0501fff800605d5d5ddd7d5d5cdd5dddfffffe06400000000fff0000070000000000000001ff87ff00000000000004000000000000000
% 2222222222222222222222222222222322221b10baf892881ffec20207aaaaadaaaaaaa6aabaafffffc01b000000007ff0000020000000000000000ffc7ff00000000000006222222222222220
% 000000000000000000000000000000008000190c9cfc90840fff60020777777cf777777377777fffffc006800000007ff8000000000000000000000ffe3ff00000000000004000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac00016031ffb84820ffea00207aaaaaaaaaaaaa9aabaadffffc001600000003ff8000000000000000000000fff3ff00000000020006aaaaaaaaaaaaaa0
% 00000000000000000000000000000000200012001ff803030fff50020755555ed5555554d55ddfffffc000d80000003ff8000000000000000000000fff9ff80000000000004000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a02028001ff80003affea82322aaaaaaaaaaaaaa6aaaabffffc000340000003ff8000000000000000000000fffdff800000000000062a2a2a2a2a2a2a0
% 00000000000000000000000000000000100008001ff00003cfff78010377777777777777367777ffffc0000f0000003ff8000000000000000000000fffeffc0000000000004000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa80008001ff00003effeac0002aaaaab6aaaaaaa9aaaabffff8000038000007ffc000000000000000000000ffffffc0000000002802aaaaaaaaaaaaaa0
% 00000000000000000000000000000000040004001ff00003ffffd60003d5d5dd55d5d111513dfdffff800000e00000fffc0000000000000000000007fffffe0000000000002000000000000000
% 22222222222222222222222222222222220004001ff00003fffeaa0002aaaaab6aaaaaaaaaaaaafdff800000380001fffc0000000000000000000007fffffe0000000000202222222222222220
% 00000000000000000000000000000000010004001ff00003ffff77000377777cc44444445c7777ffff8000000c0007fffc00000000000000000000e7ffffff0000000000004000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa8002001fe00003fffeaa8001aaaaaaaaaaaaaaaeaaaaffff00000003000ffffc00000000000000000000fbffffff0000000000aa6aaaaaaaaaaaaaa0
% 00000000000000000000000000000000008002001fe00001ffff5580015111f1b1111111135dddffff00000000003ffffe00000000000000000001ffffffff0000000000008000000000000000
% 22a222a222a222a222a222a222a222a222e022001fc00023fffeaae021aaaaaaeaaaaaaaabeaaaffff00000000003ffffe00000000000000000001ffffffff800000000022a222a222a222a220
% 0000000000000000000000000000000000a002001fc00001ffff7760014445c46444444444f777fffe00000000007ffffe00000000000000000001ffffffff8000000000008000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9001001fc000a1fffeaaa001aaaaaaeaaaaaaaaaeaaafffe00000000003ffffe00000000000000000001ffffffffc0000000000aaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000008c01001f800001ffffd5d0015113517151115111f155fffe00000000003ffffe00000000000000000001ffffffffc000000000004000000000000000
% 22222222222222222222222222222222228203001f800201fffeaab003aaaaaaaaaaaaaaaaaaabfffe00000000003fffff000000000000003c0001ffffffffe000000000026222222222222220
% 00000000000000000000000000000000008100803f000001ffff644801444e446444444444c445fffc00000000001fffffc00000000000003f0031ffffffffe000000000004000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa8080803f02a00bfffeaaa800aaaaaaaaaaaaaaaaaaabfffc00000000001fffffe00000000000003f807dfffffffff00000000000eaaaaaaaaaaaaaa0
% 00000000000000000000000000000000010040803e000001ffff111400911d1131111111115555fffc00000000001ffffff00000000000003fc07ffffffffff000000000006000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a30020407e020021ffffaaaa20aaaaaabaaaaaaaabaaabfff800000000003ffffff00000000000007ff0ffffffffeff0000000000022a2a2a2a2a2a2a0
% 00000000000000000000000000000000010010407c000001ffff444600c4744454444444454447fff80000000000fffffff80000000000007ff8ffffffffe7f800000000002000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab0008407ca80081ffffaaab00aaaaaaaaaaaaaaabaaabfff80000000007fffffffc0000000000007ff8ffffffffebf800000000002aaaaaaaaaaaaaa0
% 0000000000000000000000000000000001000620f8300001ffff91110091711111111111135557fff80000000007fffffffe0000000000007ffcffffffffe1f800000000002000000000000000
% 22222222222222222222222222222222230001e0fa700201ffffaaaa80aaaaaaaaaaaaaaaaaaaffff00000000003fffffffe000000000000fffffffffffff2fc00000000001222222222222220
% 0000000000000000000000000000000001000020e0f00001ffffc44440c4e44444444444464447fff00000000003fffffffe000000000000fffffffffffff07c00000000001000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab000001ebf0000bfffeaaaac1aaaaaaaaaaaaaaaaaaaffff00000000003ffffffff000000000001fffffffffffff29c00000000001aaaaaaaaaaaaaa0
% 000000000000000000000000000000000100000107f00001ffff91112111d1111111111115555fffe00000000001ffffffff000000000001fffffffffffff80c00000000001000000000000000
% 22a222a222a222a222a222a222a222a223000000bff000a1fffeeaaaa1aaaaaaaaaaaaaaaeaaafffe00000000001ffffffff800000020003fffffffffffffaa000000000001222a222a222a220
% 00000000000000000000000000000000020000007fe00001fffe44445147c4444444444444445fffe00000000001ffffffff800000000003fffffffffffff8000000000001b000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa000002ffe00281fffeeaaaa9aaaaaaaaaaaaaaaeaabfffe00000000003ffffffff800000008007fffffffffffffc2a0000000000eaaaaaaaaaaaaaa0
% 0000000000000000000000000000000002e00001ffe00000fffd715115531151115111511d515fffc00000000003ffffffff80000000000ffffffffffffffc0000000000008000000000000000
% 2222222222222222222222222222222227a00007ffc02000fffeaaaaaeaaaaaaaaaaaaaabaaabfffc00000000003ffffffffc0000000200ffffffffffffffc220000000000e222222222222220
% 0000000000000000000000000000000007600007ff000000fffc6444444744444444444454447fff800000000003ffffffffc0000000001ffffffffffffffc0000000000004000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaec000079ac0a000fffaaaaaaaaaaaaaaaaaaaaabaaabfff800000000003ffffffffc0000000283ffffffffffffffe0aa0000000006aaaaaaaaaaaaaa0
% 0000000000000000000000000000000018c0000c01800000fffd5111111311111111111135557fff800000000007ffffffffc0000000003ffffffffffffffe0000000000004000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2b2800008a7828000fffaaaaaaaaaaaaaaaaaaaaaeaaaffff000000000007ffffffffc0000000027ffffffffffffffe02a000000001e2a2a2a2a2a2a2a0
% 00000000000000000000000000000000018000000f038000fffc64444447444444444444c4447fff000000000007ffffffffc000000100ffffffffffffffff0000000000020000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab00000abe2f8002fffaaaaaaaaaaaaaaaaaaaabaaaaffff000000000007ffffffffc00000030bffffffffffffffff00aa00000001aaaaaaaaaaaaaaa0
% 00000000000000000000000000000000030000003e1f8000fff5711111171111111111135555fffe00000000000fffffffffc000000383ffffffffffffffff0000000000010000000000000000
% 22222222222222222222222222222222220000223e3f8022fffaaaaaaaaaaaaaaaaaaaaeaaabfffe00000000001fffffffffc0000003c7ffffffffffffffff0022000000012222222222222220
% 00000000000000000000000000000000020000007cff8000ffe46444444444444444445c4445fffe00000000007fffffffff80000007c7ffffffffffffffff8000000000010000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac0002a07bff8280ffeaaaaaaaaaaaaaaaaaaaeaaaabfffc0000000001ffffffffff80000007efffffffffffffffff800aa0000001aaaaaaaaaaaaaaa0
% 000000000000000000000000000000000400000077ff8000fff5711111111111111111f55557fffc0000000007ffffffffff8000000fffffffffffffffffff8000000000008000000000000000
% 22a222a222a222a222a222a222a222a2240002006fffa000ffeabaaaaaaaaaaaaaaaabaaaaabfffc000000001fffffffffff8000000fffffffffffffffffffc002a0000000a222a222a222a220
% 0000000000000000000000000000000004000000dffe0000ffc4544444444444444447744447fff8000000003fffffffffff8000001fffffffffffffffffffc000000000008000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac000801e1fa8000ffeabaaaaaaaaaaaaaaaaeaaaaaffff8000000007fffffffffff8000001fffffffffffffffefffc002aa000000aaaaaaaaaaaaaaa0
% 000000000000000000000000000000000800000381f08000ffd151511151115111511ff1555ffff800000000fffffff7ffff8000003fffffffffffffffc7ffc000000000004000000000000000
% 222222222222222222222222222222222800200001e3c002ffaabaaaaaaaaaaaaaaabaaaaaaffff000000000fffffff1ffff8000003fffffffffffffffc1ffe000220000006222222222222220
% 0000000000000000000000000000000008000000000fc000ffc44c444444444444447744444ffff000000000ffffffe0ffff8000003fffffffffffffffc0ffe000000000004000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa800600000bfe02affaaaaaaaaaaaaaaaaaaeaaaaabffff800000000ffffffc07fff8000007fffffffffffffffc07fe0002aa000006aaaaaaaaaaaaaa0
% 000000000000000000000000000000001001c000003fe000ff5559111111111111117d55555fffe000000001ffffff801fff8000007fffffffffffffffc07fe000000000002000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2b006800003fff2a2ffaaaeaaaaaaaaaaaaaaeaaaaabfffe000000003ffffff000fff800000ffffffffffffffffc03ff00002a0000022a2a2a2a2a2a2a0
% 000000000000000000000000000000001019000002ffe000fe444644444444444444f444447fffc000000003fffffe0007ff800000ffffffffffffffffc01ff000000000002000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab03b00002c3faaa0feaaaaaaaaaaaaaaaaaaaaaaaaffffe80000000ffffffc0003ff800001ffffffffffffffffc00ff00002aa00003aaaaaaaaaaaaaa0
% 0000000000000000000000000000000020620000021e0000ff555711111111111111fd55557fffc00000001ffffff00001ff800001ffffffffffffffff800ff000000000001000000000000000
% 2222222222222222222222222222222220e40000020a2381feaaabaaaaaaaaaaaaabaaaaaaffffa00000003fffff800000ff800001ffffffffffffffff8007f000002200001222222222222220
% 00000000000000000000000000000000230c000002040fc1fc4457c44444447c4447644444ffff80000000fffffe0000007f000003ffffffffffffffff8003f000000000001000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6a800020203bfe1feaaaaeaaaaaaac6aaaaaaaaabffffa0000003fffff80000003f800003ffffffffffffffff8001f800002aa0000aaaaaaaaaaaaaa0
% 000000000000000000000000000000004c1000000100fff1fd557ff1111111431117d55555ffff0000000fffffe00000001f000007ffffffffffffffff0001f800000000000800000000000000
% 22a222a222a222a222a222a222a222a252b0000003207ff1faaaaaaaaaaaaae2aaaaaaaaabfffea000003fffff800000000e200007fffffffffffff7ff0000f8000022a0000a22a222a222a220
% 000000000000000000000000000000006030000001003ff3f4444774444444814457444447fffe0000003ffffc000000000000000ffffffffffffff3ff00003800000002000800000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaa000000a801ff3faaaaabaaaaaaa81aaeaaaaaaffffea000007ffff8000000000028000fffffffffffffe3fe00001800000aabe00aaaaaaaaaaaaaa0
% 0000000000000000000000000000000080200000004007fbf55155ff91517f81d7fd55515ffffc0000007fffe0000000000000001fffffffffffffe1fe00000c00000004300800000000000000
% 2222222222222222222222222222222222400000204003fbeaaaaaaaffbfab00baaaaaaaaffffe2000007fff80000000000002001fffffc0ffffffc1fe00000000000226380a22222222222220
% 00000000000000000000000000000000004000000020007fe444447777f77700f77644445ffff80000007ffe00000000000000003fffff803fffffc1fe000000000000040c0800000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac0000a8020001feaaaaaaaaaaaab00aaaaaaaabffffaa000007ffc00000000000002a03fffff000effff80fc000000000000a6ae0eaaaaaaaaaaaaa0
% 000000000000000000000000000000000080000000100007d55fffdffffffe007ffffd557ffff00000007ff800000000000000003ffffe00067fff80fc00000000000004030400000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a280002200082020faaaaaaaaaaaaa206aaaaaaabffff2a00000ffe000000000000000a07ffffe0002ffff00fc008000000000a6a286a2a2a2a2a2a2a0
% 0000000000000000000000000000000001800000000800000f74447777777600577744447fffe0000001ff8000000000000000007ffffc00003fff00fc00000000000004006c00000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab0002a00004000001eaaaaaaaaaac002aaaaaaaffffeaa00003ff0000aa8000000000aafffffc0000bffe007800000000000026aabaaaaaaaaaaaaaa0
% 000000000000000000000000000000000100000000040000001d55557ffffc0035555555ffffc0000007fe000000000000000000fffff800001ffe007800000000000004001000000000000000
% 2222222222222222222222222222222222004200000200000003aaaaaaaaac002aaaaaabffffe2200007fc000222200000000023fffff800003ffe007000000000000002222222222222222220
% 000000000000000000000000000000000200800038010000000044444776780014444445ffffc000000ff0000000000000000001fffff800000ffc007000000000000002000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01a001ec01000000002aaaaaaaa8001aaaaaabffffaaa0001fe0000aaaa8000000000bfffff000002ffa007000000000000002aaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000403000708008000000055555575f80015555557ffff0000001fc0000000000000000003ffffe0000007f0002000000000000002000000000000000000
% 22a222a222a222a222a222a222a222a2240f801e3800602020206aaaaaaab0202aaaaaaffffea2a0003f0000a2a2a28000000303ffffc0000007e280000000000000000122a222a222a222a220
% 000000000000000000000000000000000c1a0030100040000600c444444750000c44444ffffe0000003f00000000000000000787ffff80000003c0000000000000000001000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa83a00eaa000200009c0aaaaaaaaa0000aaaaabffffeaaa0007e0002aaaaaaa000001fc7ffff8000000baa800000000000000001aaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000086603006000100008315551575d60000d51557ffff80000007e00000000000000007fffffff0000000000000000000000000001000000000000000000
% 2222222222222222222222222222222230e40e22c0001a000a1aeaabaeeac2000aaaaafffffa222000fc0002222222200001fffffffe0000000222200000000000000000a22222222222222220
% 000000000000000000000000000000001184180180003c0008273566c41440000c4444fffff0000000f8000000000000000ffffffffe0000000000000000000000000000800000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab2a86aab00003e0008210e1a380e80000aaaaaffffeaaaa001f8000aaaaaaaaa80fffffffffc00000002aaa80000000200000006aaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000002c09800600007f00082102060c0300000d5555ffffe0000001f80000000000000ffffffffff80000000000000000000000000019800000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2babfa2ac00007fa0282122222423202026aaabffffe2a2a001f80022a2a0a2a3fffffffffbf800000000a2a00000000080000062e2a2a2a2a2a2a2a2a0
% 00000000000000000000000000000000701c001800007fc00421020204010000044447ffff80000001f8000001ffff7ffffffffc01f000000000000000000000000000c0400000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeabaaab3f0007ffffe718307040280000aaaafffffaaaa8003f800aaa7aaaaf1fffffc002be000000000aaaa00000000a0003faaeaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000004000007c1ef8fffd55dffdfdfe03800015557ffffe00000003f800003800000f00003e0001c00000000000000000000000002000000000000000000000
% 22222222222222222222222222222222a22222e223acfffeaaaaaaaaabcae000eaaafffffe22220003f80023e2222223e20063e023a00000000022220000000022002222222222222222222220
% 00000000000000000000000000000000000000000030ffffc444444444745e3f4444fffffc00000007f80003000000001800803001800000000000000000000000002000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae0ffeffeaaaaabffffabeaaaabfffffaaaaa8007f802aeaaaaaaaaac00aaa80ba0000000002aaa000000000a802aaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000000000c0ffe07fd557ffffffffff5557fffff000000007f800180000000004008006000000000000000000000000000fa000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a223007ffaabffffffffffffffffffffffe2a2a28007f802b222a222a2220122a302a00000000002a28000000002aae2a222a222a222a222a220
% 000000000000000000000000000000000000000006003ffe4440e45fffffffffffffffffc000000007f800c000000000030100018001ff000000000000000000000c6000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab8003fffaaaaaabfffffffffffffffffaaaaaa0007f80baaaaaaaaaaab03aaaae2a1aaf000000aaa8000000000a6aaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000300007fffffe00fffffffffffffffffe0000000007f8010000000000008600002002000f000000000000000000042000000000000000000000
% 2222222222222222222222222222222222222222400003fffffffffffffffffffffffffe2222220007f002222222222222ee222232222222f00002220000000000262222222222222222222220
% 00000000000000000000000000000000000000008000003ffffffffffffffffffffffff00000000007f006000000000000300000180200000e0000000000000000020000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab000200afffffffffffffffffffffffeaaaaaaa000ff02eaaaaaaaaaaaaaaaaaaa8a2aaaaab0002aaa0000000002aaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000000300000000ffffffffffffffffffffff80000000000ff01800000000000000000004020000018004000780000000020000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a6000002a207fffffffea2bffffffffea2a2a2a2000ff092a2a2a2a2a2a2a2a2a2a6a6a2a2a2ef86a2a6c000000002a2a2a2a2a2a2a2a2a2a2a0
% 000000000000000000000000000000000000000c000000000003ffc0000000007fff0000000000000fe030000000000000000000020400000038fa000c30000000020000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab8000002a000aa9aaaaaaaaaaaabaaaaaaaaaaaa000fc0aaaaaaaaaaaaaaaaaaaaab26aaaaaaaaabaa2ab80000000aaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000003000000000000000000000000000000000000000000f804000000000000000000001040000000001000806000000020000000000000000000000
% 2222222222222222222222222222222222222260000002000022022222202222222222002222200007806222222222222222222223a62222222223a20a23820000022222222222222222222220
% 00000000000000000000000000000000000000c0000000000000000000000000000000000000000000008000000000000000000000880000000000802800c00000020000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa8008000a0000280aaaaa800a2aaa0aaa800aaaa8000002aaaaaaaaaaaaaaaaaaaaaacaaaaaaaaaaaea7aaae0a00002aaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000100000000000000000000000000000000000000000000010000000000000000000000480000000000405800300000020000000000000000000000
% 22a222a222a222a222a222a222a222a222a2230020002000002002a2a28002002200a28002a2a000000122a222a222a222a222a222fa22a222a222e26aa23820000222a222a222a222a222a220
% 00000000000000000000000000000000000002000000000000000000000000000000000000000000000100000000000000000000003000000000002048000c0000020000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae00a000200000000a002a0000800200aa80002aa0000002aaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaa6aaaae2a0002aaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000400000000000000000000000000000000000000000000020000000000000000000000100000000000104000030000020000000000000000000000
% 2222222222222222222222222222222222222c0200000000000000000200000000002000000000000002222222222222222222222222222222222232a222230200022222222222222222222220
% 0000000000000000000000000000000000000800000000000000000000000000000000000000000000030000000000000000000000000000000000088000008000020000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa80280200000000080000a00000000002a80000000000001aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac2a002aaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000001080000000000000000000000000000000000000000000008000000000000000000000000000000000088000002000020000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2b78200200000002280000200000000000200000000001000e2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a4a2a2a2a2a002a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000001c8000000000000000000000000000000000000000001c004000000000000000000000000000000000050000001001840000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaba8a0080000802aa80000800000000000a00000000001e002aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaab8a9e6aaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000308000000000000000000000000000000000000000000b003000000000000000000000000000000000030000000801340000000000000000000000
% 2222222222222222222222222222222222222282000000200222000000000000000002000000000006c01222222222222222222222222222222222232222222c213e2222222222222222222220
% 00000000000000000000000000000000000040800000000000000000000000000000000000000000066010000000000000000000000000000000000100000004010c0000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa88020000200a8a000008000000008002800000000003b00aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaae29aeaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000800000000000000000000000000000000000000000010c0800000000000000000000000000000000000000000203040000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a002000080220000000000000002a002800000000300a606a222a222a222a222a222a222a222a222a222a222a222a622a222a222a222a222a220
% 00000000000000000000000000000000000000800000000000000000000000000000000000000003c0c30400000000000000000000000000000000000000000302000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab800000280220000000000000002a8008000000002b86a86aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab22aaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000b000000000000000000000000000000000000000030e20c200000000000000000000000000000000000000000104000000000000000000000000
% 22222222222222222222222222222222222222b00000020000000000000000000220000000000001a3b24322222222222222222222222222222222222222222386222222222222222222222220
% 00000000000000000000000000000000000000b000000000000000000000000000000000000003f880f02100000000000000000000000000000000000000000084000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae800000800800028002000000000080020000002ac6aaab1aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa86aaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000048000000000000000000000000000000000000020360001080000000000000000000000000000000000000000088000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2e80000200200002000200000028002002000000fa3f2a2a8a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a28aa2a2a2a2a2a2a2a2a2a2a2a0
% 00000000000000000000000000000000000000480000000000000000000000000000000000000b0078000cc0000000000000000000000000000000000000000058000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa8000820000000280000000002a00a000800000aaabaaaac6aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000008000000000000000000000000000000000000080004000240000000000000000000000000000000000000000050000000000000000000000000
% 2222222222222222222222222222222222222228002000000000200000000000200000000000062222222322222222222222222222222222222222222222222262222222222222222222222220
% 0000000000000000000000000000000000000008000000000000000000000000000000000000040000000120000000000000000000000000000000000000000020000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa800a800280000a00000000000a0000000000006aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000080000000000000000000000000000000000000200000000d0000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a802a000200000a0000000000020000000000002a222a222d222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000008000000000000000000000000000000000000030000000038000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa80a200820000080000080000028000000000001aaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000008038000000000000000000000000000000000018000000018000000000000000000000000000000000000000000000000000000000000000000
% 222222222222222222222222222222222222222826c00000000200000000000000000000000180a22222222e222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000008188000000000000000000000000000000001c0c00000000c000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa82a802002000a820000800000000000000001b06aaaaaaaaeaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000008410000000000000000000000000000000001182000000002000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a9a30020020002020000800000000000000001a622a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 000000000000000000000000000000000000000b010000000000000000000000000000000000831000000001000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaa00a00a00280a8000800020000020000100aadaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000008020000000000000000000000000000000100807800000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222260020220020020000000020000020000080a23a22222222222222222222222222222222222222222222222222222222222222222222222220
% 00000000000000000000000000000000000000000400000000000000000000000000000000c0800400000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac02802a00200a8002802020000020000060aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000040000000000000000000000000000000070800000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a2240280a000a002800280202000002000007062a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000040000000000000000000000000000000028400000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac0a80a80c800aa00280202800002800002c6aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000040000001400000000000000000000000026400000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222240202202400022002002020002022000023a22222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000040000004400000000000000002000000020000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac2a8aa0ec800aa80080a02a00602a00001aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000040380008800008000000000006000000010000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a4278281a80001e00002a0a200a02200000aa2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000041d1c03080006600000000000a000000008000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaacbb7e82aa000ea80202a0aa01a02a00000eaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 00000000000000000000000000000000000000000461c6060800041000000000012000000004000000000000000000000000000000000000000000000000000000000000000000000000000000
% 222222222222222222222222222222222222222224e322062a0006320202202202202a000006222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000058002080800080800000000022018000002000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaafaaac1aaa000aaa000aa0aa06a03a800002aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000060004100800080000000000042014006002000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a226a224322a000aa60022a0a20aa0a680f80122a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000004200800080000000000082020018801000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac6aa8800aaa08afa2be1aa0ea81ac01aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000004c008800802000cc034102042020401000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222224a229800a23021ae260222062022401222222222222222222222222222222222222222222222222222222222222222222222222222220
% 000000000000000000000000000000000000000000000580098010018060c0c02020c1020201800000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadaaaac01aaa88eacba86aa0ab86aa00aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000007000a401000818043084020810c0300800000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a6a2a6c012a283a2c2a8a2a3a39aa300a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000440100083004610801101100100800000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01aaac2aaceb1aab2abaaab00aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000030100042008831001c01600080800000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222230122242229222222223e22280a22222222222222222222222222222222222222222222222222222222222222222222222222220
% 000000000000000000000000000000000000000000000000001810004200b022000001800080800000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa81aaaa2aaeac6aaaaabaaaac0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 000000000000000000000000000000000000000000000000000c10002200c044000000000070800000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a612a222a2e2ca22a222a222b0a2a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000003100024008088000000000010800000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab9aaaa6aaaa9aaaaaaaaaaab1aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000d00014000190000000000009000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222522236222322222222222229222222222222222222222222222222222222222222222222222222222222222222222222222220
% 000000000000000000000000000000000000000000000000000030001c000120000000000009000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaabaaaab6aaaaaaaaaaaa9aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000008000240000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2aaa2a2a2a2a2a2a2a2a5a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000280000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaafaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 22a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a222a220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222220
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0
%%EndImage
%%EndPreview
/InitDictCount countdictstack def
gsave
save
mark
newpath
/showpage {} def
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: Adobe Illustrator(TM) 1.2d4
%%For: OpenWindows Version 2
%%Title: tiger.eps
%%CreationDate: 4/12/90 3:20 AM
%%DocumentProcSets: Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets: Adobe_Illustrator_1.2d1 0 0
%%BoundingBox: 22 171 567 738
%%EndComments

%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0

/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
% graphic state operators
/_K { 3 index add neg dup 0 lt {pop 0} if 3 1 roll } bdef
/_k /setcmybcolor where {
    /setcmybcolor get
} {
    { 1 sub 4 1 roll _K _K _K setrgbcolor pop } bind
} ifelse def
/g {/_b xdef /p {_b setgray} def} bdef
/G {/_B xdef /P {_B setgray} def} bdef
/k {/_b xdef /_y xdef /_m xdef /_c xdef /p {_c _m _y _b _k} def} bdef
/K {/_B xdef /_Y xdef /_M xdef /_C xdef /P {_C _M _Y _B _k} def} bdef
/d /setdash ldef
/_i currentflat def
/i {dup 0 eq {pop _i} if setflat} bdef
/j /setlinejoin ldef
/J /setlinecap ldef
/M /setmiterlimit ldef
/w /setlinewidth ldef
% path construction operators
/_R {.25 sub round .25 add} bdef
/_r {transform _R exch _R exch itransform} bdef
/c {_r curveto} bdef
/C /c ldef
/v {currentpoint 6 2 roll _r curveto} bdef
/V /v ldef
/y {_r 2 copy curveto} bdef
/Y /y ldef
/l {_r lineto} bdef
/L /l ldef
/m {_r moveto} bdef
% path painting operators
/n /newpath ldef
/N /n ldef
/F {p fill} bdef
/f {closepath F} bdef
/S {P stroke} bdef
/s {closepath S} bdef
/B {gsave F grestore S} bdef
/b {closepath B} bdef
end
%%EndProcSet
%%EndProlog

%%Page: 1 1

Adobe_Illustrator_1.2d1 begin

.8 setgray
%clippath fill
-110 -300 translate
1.1 dup scale

0 g
0 G
0 i
0 J
0 j
0.172 w
10 M
[]0 d
0 0 0 0 k

177.696 715.715 m
177.797 713.821 176.973 713.84 v
176.149 713.859 159.695 761.934 139.167 759.691 C
156.95 767.044 177.696 715.715 V
b
181.226 718.738 m
180.677 716.922 179.908 717.221 v
179.14 717.519 180.023 768.325 159.957 773.199 C
179.18 774.063 181.226 718.738 V
b
208.716 676.41 m
210.352 675.45 209.882 674.773 v
209.411 674.096 160.237 686.898 150.782 668.541 C
154.461 687.428 208.716 676.41 V
b
205.907 666.199 m
207.763 665.803 207.529 665.012 v
207.296 664.221 156.593 660.879 153.403 640.478 C
150.945 659.563 205.907 666.199 V
b
201.696 671.724 m
203.474 671.061 203.128 670.313 v
202.782 669.565 152.134 673.654 146.002 653.936 C
146.354 673.175 201.696 671.724 V
b
190.991 689.928 m
192.299 688.554 191.66 688.033 v
191.021 687.512 147.278 713.366 133.131 698.324 C
141.872 715.467 190.991 689.928 V
b
183.446 685.737 m
184.902 684.52 184.326 683.929 v
183.75 683.339 137.362 704.078 125.008 687.531 C
131.753 705.553 183.446 685.737 V
b
180.846 681.665 m
182.454 680.657 181.964 679.994 v
181.474 679.331 132.692 693.554 122.709 675.478 C
126.934 694.251 180.846 681.665 V
b
191.58 681.051 m
192.702 679.52 192.001 679.085 v
191.3 678.65 151.231 709.898 135.273 696.793 C
146.138 712.674 191.58 681.051 V
b
171.8 710 m
172.4 708.2 171.6 708 v
170.8 707.8 142.2 749.8 122.999 742.2 C
138.2 754 171.8 710 V
b
172.495 703.021 m
173.47 701.392 172.731 701.025 v
171.993 700.657 135.008 735.501 117.899 723.939 C
130.196 738.739 172.495 703.021 V
b
172.38 698.651 m
173.502 697.12 172.801 696.685 v
172.1 696.251 132.031 727.498 116.073 714.393 C
126.938 730.274 172.38 698.651 V
b
0 J 1 w
170.17 696.935 m
170.673 690.887 171.661 684.318 173.4 681.199 C
169.8 668.799 178.6 655.599 V
178.2 648.399 179.8 645.199 V
183.8 636.799 188.6 635.999 v
192.484 635.352 201.207 632.283 211.068 630.879 c
228.2 616.799 225 603.999 V
224.6 587.599 221 585.999 V
232.6 597.199 223 580.399 V
218.6 561.599 l
244.2 583.199 228.6 564.799 V
218.6 538.799 l
238.2 557.199 231 548.799 V
227.8 539.999 l
271 567.199 240.2 537.599 V
248.2 541.199 252.6 538.399 V
259.4 539.599 258.6 537.999 V
237.8 527.599 234.2 509.199 V
242.6 519.199 239.4 508.399 V
239.8 496.799 l
243.8 518.399 243.4 480.799 V
262.6 498.799 251 477.999 V
251 461.199 l
266.2 477.599 259.8 464.799 V
269.8 473.599 265.8 458.399 V
265 447.999 269.4 459.199 V
285.4 489.799 279.4 463.599 V
278.6 444.399 283.4 459.199 V
283.8 448.799 293 441.599 V
291.8 492.399 304.6 456.399 V
308.6 439.999 l
311.4 449.199 311 454.399 V
325.8 470.799 319 446.399 V
334.2 469.199 331 455.999 V
323.4 439.999 325 435.199 V
341.8 469.999 343 471.599 V
341 429.198 351.8 465.199 V
357.4 453.199 354.6 448.799 V
362.6 456.799 361.8 459.999 V
366.4 468.199 369.2 454.599 V
371 445.199 372.6 448.399 V
376.6 424.398 377.8 447.199 V
379.4 460.799 372.2 472.399 V
373 475.599 370.2 479.599 v
383.8 457.999 376.6 486.799 V
387.801 478.799 389.001 478.799 V
375.4 501.999 384.2 497.199 V
379 507.599 397.001 495.599 V
381 511.599 398.601 501.999 V
406.601 495.599 399.001 505.599 V
384.6 521.599 406.601 503.599 V
418.201 487.199 419.001 484.399 V
409.001 513.599 404.601 516.399 V
413.001 552.799 454.201 537.199 V
461.001 519.999 465.401 538.399 V
478.201 544.799 489.401 517.199 V
493.401 530.799 492.601 533.599 V
499.401 532.399 498.601 533.599 V
511.801 529.199 513.001 529.999 V
519.801 523.199 520.201 526.799 V
529.401 523.999 527.401 527.599 V
536.201 511.999 536.601 508.399 V
539.001 522.399 l
541.001 519.599 l
542.601 527.199 541.801 528.399 v
541.001 529.599 561.801 521.599 566.601 500.799 C
568.601 492.399 l
574.601 507.199 573.001 511.199 V
578.201 510.399 578.601 505.999 V
582.601 529.199 577.801 535.199 V
582.201 535.999 583.401 532.399 V
583.401 539.599 l
590.601 538.799 590.601 541.199 V
595.001 545.199 597.001 540.399 V
584.601 575.599 603.001 556.399 V
610.201 545.599 606.601 564.399 v
603.001 583.199 599.001 584.799 603.801 585.199 C
604.601 588.799 602.601 590.399 v
600.601 591.999 603.801 590.399 y
608.601 586.399 603.401 608.399 V
609.801 606.799 597.801 635.999 V
600.601 638.399 596.601 646.799 V
604.601 642.399 607.401 643.999 V
607.001 645.599 603.801 649.599 V
582.201 704.4 602.601 682.399 V
614.451 668.849 608.051 691.649 V
598.94 715.659 599.717 719.955 V
170.17 696.935 l
b
0.2 0.55 0.85 0 k
599.717 719.755 m
600.345 719.574 602.551 718.45 603.801 716.8 C
610.601 706 605.401 724.4 V
596.201 753.2 605.001 742 V
611.001 734.8 607.801 748.4 v
603.936 764.827 601.401 771.2 y
613.001 766.4 586.201 806 V
595.001 802.4 l
575.401 842 553.801 847.2 V
545.801 853.2 l
584.201 891.2 571.401 928 V
564.601 933.2 555.001 924 V
548.601 919.2 542.601 920.8 V
511.801 919.6 509.801 919.6 v
507.801 919.6 473.001 956.8 407.401 939.2 C
402.201 937.2 397.801 938.4 V
379.4 954.4 330.6 931.6 v
320.6 929.6 319 929.6 v
317.4 929.6 314.6 929.6 306.6 923.2 c
298.6 916.8 298.2 916 296.2 914.4 C
279.8 903.2 275 902.4 V
263.4 896 259 886 V
255.4 884.8 l
253.8 877.6 253.4 876.4 V
248.6 872.8 247.8 867.2 V
239 861.2 239.4 856.8 V
237.8 851.6 237 846.8 V
229.8 842 230.6 839.2 V
223 825.2 224.2 818.4 V
217.8 818.8 215 816.4 V
214.2 811.6 212.6 811.2 V
209.8 810 212.2 806 V
210.6 803.2 210.2 801.6 V
211 798.8 206.6 793.2 V
200.2 774.4 202.2 769.2 V
202.6 764.4 199.8 762.8 V
196.2 763.2 204.6 751.2 V
205.4 750 202.2 747.6 V
185 744 182.6 727.6 V
169 712.8 169 707.6 v
169 705.295 169.271 702.148 169.97 697.535 C
169.4 689.199 197 688.399 v
224.6 687.599 599.717 719.755 Y
b
184.4 697.4 m
159.4 736.8 173.8 680.399 Y
182.6 645.999 312.2 683.599 y
481.001 714 492.201 718 v
503.401 722 598.601 715.6 y
593.001 732.4 L
528.201 778.8 509.001 755.6 495.401 759.6 c
481.801 763.6 484.201 754 481.001 753.2 c
477.801 752.4 438.601 777.2 432.201 776.4 c
425.801 775.6 400.459 799.351 415.401 767.6 c
431.401 733.6 357 728.4 340.2 739.6 c
323.4 750.8 347.4 721.2 Y
365.8 701.2 331.4 718 y
297 730.8 273 705.2 269.8 704.4 c
266.6 703.6 261.8 700.4 261 706.8 c
260.2 713.2 252.69 729.901 221 703.6 c
201 686.999 187.2 709 Y
184.4 697.4 L
f
0.09 0.5 0.772 0 k
433.51 774.654 m
427.11 773.854 401.743 797.593 416.71 765.854 c
433.31 730.654 358.31 726.654 341.51 737.854 c
324.709 749.054 348.71 719.454 Y
367.11 699.454 332.709 716.254 y
298.309 729.054 274.309 703.454 271.109 702.654 c
267.909 701.854 263.109 698.654 262.309 705.054 c
261.509 711.454 254.13 727.988 222.309 701.854 c
201.073 684.508 187.582 705.963 Y
184.382 695.854 L
159.382 735.654 174.454 677.345 Y
183.255 642.944 313.509 681.854 y
482.31 712.254 493.51 716.254 v
504.71 720.254 599.038 713.927 y
593.51 731.236 L
528.71 777.636 510.31 753.854 496.71 757.854 c
483.11 761.854 485.51 752.254 482.31 751.454 c
479.11 750.654 439.91 775.454 433.51 774.654 c
f
0.081 0.45 0.695 0 k
434.819 772.909 m
428.419 772.109 403.685 796.138 418.019 764.109 c
434.219 727.908 359.619 724.908 342.819 736.108 c
326.019 747.308 350.019 717.708 Y
368.419 697.708 334.019 714.508 y
299.619 727.308 275.618 701.708 272.418 700.908 c
269.218 700.108 264.418 696.908 263.618 703.308 c
262.818 709.708 255.57 726.075 223.618 700.108 c
201.145 682.017 187.964 702.926 Y
184.364 694.308 L
160.564 733.308 175.109 674.29 Y
183.909 639.89 314.819 680.108 y
483.619 710.508 494.819 714.508 v
506.019 718.508 599.474 712.254 y
594.02 730.072 L
529.219 776.472 511.619 752.109 498.019 756.109 c
484.419 760.109 486.819 750.509 483.619 749.708 c
480.419 748.908 441.219 773.709 434.819 772.909 c
f
0.072 0.4 0.618 0 k
436.128 771.163 m
429.728 770.363 404.999 794.395 419.328 762.363 c
436.128 724.807 360.394 723.518 344.128 734.363 c
327.328 745.563 351.328 715.963 Y
369.728 695.963 335.328 712.763 y
300.928 725.563 276.928 699.963 273.728 699.163 c
270.528 698.363 265.728 695.163 264.928 701.563 c
264.128 707.963 257.011 724.161 224.927 698.363 c
201.218 679.526 188.345 699.89 Y
184.345 692.763 L
162.545 729.563 175.764 671.235 Y
184.564 636.835 316.128 678.363 y
484.928 708.763 496.129 712.763 v
507.329 716.763 599.911 710.581 y
594.529 728.908 L
529.729 775.309 512.929 750.363 499.329 754.363 c
485.728 758.363 488.128 748.763 484.928 747.963 c
481.728 747.163 442.528 771.963 436.128 771.163 c
f
0.063 0.35 0.54 0 k
437.438 769.417 m
431.037 768.617 406.814 792.871 420.637 760.617 c
437.438 721.417 362.237 721.417 345.437 732.617 c
328.637 743.817 352.637 714.217 Y
371.037 694.217 336.637 711.017 y
302.237 723.817 278.237 698.217 275.037 697.417 c
271.837 696.617 267.037 693.417 266.237 699.817 c
265.437 706.217 258.452 722.248 226.237 696.617 c
201.291 677.035 188.727 696.854 Y
184.327 691.217 L
164.527 726.018 176.418 668.181 Y
185.218 633.78 317.437 676.617 y
486.238 707.017 497.438 711.017 v
508.638 715.017 600.347 708.908 y
595.038 727.745 L
530.238 774.145 514.238 748.617 500.638 752.617 c
487.038 756.617 489.438 747.017 486.238 746.217 c
483.038 745.417 443.838 770.217 437.438 769.417 c
f
0.054 0.3 0.463 0 k
438.747 767.672 m
432.347 766.872 406.383 790.323 421.947 758.872 c
441.147 720.072 363.546 719.672 346.746 730.872 c
329.946 742.072 353.946 712.472 Y
372.346 692.472 337.946 709.272 y
303.546 722.072 279.546 696.472 276.346 695.672 c
273.146 694.872 268.346 691.672 267.546 698.072 c
266.746 704.472 259.892 720.335 227.546 694.872 c
201.364 674.544 189.109 693.817 Y
184.309 689.672 L
166.309 722.872 177.073 665.126 Y
185.873 630.726 318.746 674.872 y
487.547 705.272 498.747 709.272 v
509.947 713.272 600.783 707.236 y
595.547 726.581 L
530.747 772.981 515.547 746.872 501.947 750.872 c
488.347 754.872 490.747 745.272 487.547 744.472 c
484.347 743.672 445.147 768.472 438.747 767.672 c
f
0.045 0.25 0.386 0 k
440.056 765.927 m
433.655 765.127 407.313 788.387 423.255 757.127 c
443.656 717.126 364.855 717.926 348.055 729.126 c
331.255 740.326 355.255 710.726 Y
373.655 690.726 339.255 707.526 y
304.855 720.326 280.855 694.726 277.655 693.926 c
274.455 693.126 269.655 689.926 268.855 696.326 c
268.055 702.726 261.332 718.422 228.855 693.126 c
201.436 672.053 189.491 690.781 Y
184.291 688.126 L
168.291 718.326 177.727 662.071 Y
186.527 627.671 320.055 673.126 y
488.856 703.526 500.056 707.526 v
511.256 711.526 601.22 705.563 y
596.056 725.417 L
531.256 771.817 516.856 745.126 503.256 749.126 c
489.656 753.127 492.056 743.526 488.856 742.726 c
485.656 741.926 446.456 766.727 440.056 765.927 c
f
0.036 0.2 0.309 0 k
441.365 764.181 m
434.965 763.381 407.523 786.056 424.565 755.381 c
446.565 715.781 366.164 716.181 349.364 727.381 c
332.564 738.581 356.564 708.981 Y
374.964 688.981 340.564 705.781 y
306.164 718.581 282.164 692.981 278.964 692.181 c
275.764 691.381 270.964 688.181 270.164 694.581 c
269.364 700.981 262.773 716.508 230.164 691.381 c
201.509 669.562 189.873 687.744 Y
184.273 686.581 L
169.872 714.981 178.382 659.017 Y
187.182 624.616 321.364 671.381 y
490.165 701.781 501.365 705.781 v
512.565 709.781 601.656 703.89 y
596.565 724.254 L
531.765 770.654 518.165 743.381 504.565 747.381 c
490.965 751.381 493.365 741.781 490.165 740.981 c
486.965 740.181 447.765 764.981 441.365 764.181 c
f
0.027 0.15 0.231 0 k
442.674 762.435 m
436.274 761.635 408.832 784.311 425.874 753.635 c
447.874 714.035 367.474 714.435 350.674 725.635 c
333.874 736.835 357.874 707.235 Y
376.274 687.235 341.874 704.035 y
307.473 716.835 283.473 691.235 280.273 690.435 c
277.073 689.635 272.273 686.435 271.473 692.835 c
270.673 699.235 264.214 714.595 231.473 689.635 c
201.582 667.071 190.255 684.707 Y
184.255 685.035 L
170.654 711.436 179.037 655.962 Y
187.837 621.562 322.673 669.635 y
491.474 700.035 502.674 704.035 v
513.874 708.035 602.093 702.217 y
597.075 723.09 L
532.274 769.49 519.474 741.635 505.874 745.635 c
492.274 749.635 494.674 740.035 491.474 739.235 c
488.274 738.435 449.074 763.235 442.674 762.435 c
f
0.018 0.1 0.154 0 k
443.983 760.69 m
437.583 759.89 410.529 782.777 427.183 751.89 c
449.183 711.09 368.783 712.69 351.983 723.89 c
335.183 735.09 359.183 705.49 Y
377.583 685.49 343.183 702.29 y
308.783 715.09 284.783 689.49 281.583 688.69 c
278.382 687.89 273.582 684.69 272.782 691.09 c
271.982 697.49 265.654 712.682 232.782 687.89 c
201.655 664.58 190.637 681.671 Y
184.236 683.49 L
171.236 707.49 179.691 652.907 Y
188.491 618.507 323.983 667.89 y
492.783 698.29 503.983 702.29 v
515.183 706.29 602.529 700.544 y
597.583 721.926 L
532.783 768.327 520.783 739.89 507.183 743.89 c
493.583 747.89 495.983 738.29 492.783 737.49 c
489.583 736.69 450.383 761.49 443.983 760.69 c
f
0.009 0.05 0.077 0 k
445.292 758.945 m
438.892 758.145 412.917 781.589 428.492 750.145 c
449.692 707.344 370.092 710.944 353.292 722.144 c
336.492 733.344 360.492 703.744 Y
378.892 683.744 344.492 700.544 y
310.092 713.344 286.092 687.744 282.892 686.944 c
279.692 686.144 274.892 682.944 274.092 689.344 c
273.292 695.744 267.095 710.768 234.092 686.144 c
201.727 662.089 191.018 678.635 Y
184.218 681.944 L
171.418 705.144 180.346 649.853 Y
189.146 615.453 325.292 666.144 y
494.093 696.544 505.293 700.544 v
516.493 704.544 602.965 698.872 y
598.093 720.763 L
533.292 767.163 522.093 738.144 508.493 742.144 c
494.893 746.145 497.293 736.544 494.093 735.744 c
490.892 734.944 451.692 759.745 445.292 758.945 c
f
1 g
184.2 680.399 m
171.4 702.4 181 646.799 Y
189.8 612.399 326.6 664.399 y
495.401 694.8 506.601 698.8 v
517.801 702.8 603.401 697.2 y
598.601 719.6 L
533.801 766 523.401 736.4 509.801 740.4 c
496.201 744.4 498.601 734.8 495.401 734 c
492.201 733.2 453.001 758 446.601 757.2 c
440.201 756.4 414.981 780.207 429.801 748.4 c
452.028 700.693 369.041 710.773 354.6 720.4 c
337.8 731.6 361.8 702 Y
380.2 681.999 345.8 698.8 y
311.4 711.6 287.4 685.999 284.2 685.199 c
281 684.399 276.2 681.199 275.4 687.599 c
274.6 694 268.535 708.856 235.4 684.399 c
201.8 659.599 191.4 675.599 Y
184.2 680.399 L
f
0 g
225.8 650.399 m
218.6 638.799 239.4 625.599 V
240.8 624.199 222.8 628.399 V
216.6 630.399 215 640.799 V
210.2 645.199 205.4 650.799 v
200.6 656.399 225.8 650.399 y
f
0.8 g
365.8 698 m
383.498 671.179 382.9 666.399 v
381.6 655.999 381.4 646.399 384.6 642.399 c
387.801 638.399 396.601 605.199 y
396.201 603.999 408.601 641.999 V
420.201 657.999 400.201 676.399 V
365 705.2 365.8 698 v
f
0 g
1 J 0.1 w
245.8 623.599 m
257 616.399 242.6 585.199 V
249 587.599 l
248.2 576.399 245 573.999 V
252.2 577.199 l
257 569.199 253 564.399 V
269.8 556.399 269 549.999 V
275.4 557.999 271.4 564.399 v
267.4 570.799 260.2 566.799 261 585.199 C
252.2 581.999 l
257.8 590.799 257.8 597.199 V
249.8 594.799 l
265.269 621.377 254.6 622.799 v
248.6 623.599 245.8 623.599 Y
f
0.8 g
278.2 606.799 m
281 611.199 278.2 610.399 v
275.4 609.599 244.2 594.799 238.2 585.199 C
272.6 609.599 278.2 606.799 V
f
288.6 598.799 m
291.4 603.199 288.6 602.399 v
285.8 601.599 254.6 586.799 248.6 577.199 C
283 601.599 288.6 598.799 V
f
301.8 613.999 m
304.6 618.399 301.8 617.599 v
299 616.799 267.8 601.999 261.8 592.399 C
296.2 616.799 301.8 613.999 V
f
278.6 570.399 m
278.6 576.399 275.8 575.599 v
273 574.799 237 557.199 231 547.599 C
273 573.199 278.6 570.399 V
f
279.8 581.199 m
281 585.999 278.2 585.199 V
276.2 585.199 249.8 573.599 243.8 563.999 C
273.4 585.599 279.8 581.199 V
f
265.4 533.599 m
255.4 525.999 l
265.8 533.599 269.4 532.399 V
262.6 521.199 261.8 515.999 V
272.2 528.799 277.8 528.399 V
285.4 527.999 285.4 517.199 V
291 527.599 294.2 527.199 V
295.4 520.799 294.2 513.999 V
298.2 521.599 302.2 519.999 V
308.6 521.999 307.8 510.399 V
307.8 499.999 307 497.199 V
312.6 523.599 315 523.999 V
323 525.199 327.8 516.399 V
323.8 523.999 328.6 521.999 V
339.4 520.399 342.6 513.599 V
335.8 525.599 341.4 522.399 V
348.2 522.399 349.4 515.999 V
357.8 494.799 359.8 493.199 V
352.2 514.799 353.8 514.799 V
351.8 526.799 357 511.999 V
353.8 525.999 359.4 525.199 v
365 524.399 369.4 514.399 377.8 516.799 C
387.401 511.199 389.401 580.399 V
265.4 533.599 L
f
0 g
0 J 1 w
270.2 626.399 m
285 632.399 325 626.399 V
332.2 625.999 339 634.799 v
345.8 643.599 372.6 650.799 379 648.799 C
388.601 642.399 l
389.401 641.199 l
401.801 630.799 402.201 623.199 v
402.601 615.599 387.801 567.599 378.2 551.599 c
368.6 535.599 359 523.199 339.8 525.599 C
319 529.599 293.4 525.599 v
264.2 527.199 261.4 535.199 v
258.6 543.199 272.6 558.399 y
277 566.799 275.8 581.199 v
274.6 595.599 275 623.599 270.2 626.399 c
f
0.1 0.6 0.45 0 k
292.2 624.399 m
300.6 605.999 271 540.799 y
269 539.199 283.66 533.154 293.8 535.599 c
304.746 538.237 345 533.999 Y
368.6 549.599 381.4 593.999 y
391.801 617.999 374.2 621.199 v
356.6 624.399 292.2 624.399 y
f
0.1 0.6 0.45 0.2 k
290.169 593.503 m
293.495 606.293 295.079 618.094 292.2 624.399 c
354.6 617.999 365.8 638.799 v
370.041 646.674 384.801 615.999 384.4 606.399 c
321.4 591.999 306.6 603.199 V
290.169 593.503 L
f
0.1 0.6 0.45 0.25 k
294.6 577.199 m
296.6 569.999 294.2 565.999 V
292.6 565.199 291.4 564.799 V
292.6 561.199 298.6 559.599 V
300.6 555.199 303 554.799 v
305.4 554.399 310.2 548.799 314.2 549.999 c
318.2 551.199 329.4 555.199 y
335 558.399 343.8 554.799 V
346.175 555.601 346.6 559.599 v
347.1 564.299 350.2 567.999 352.2 569.999 c
354.2 571.999 363.8 584.799 362.6 585.199 c
361.4 585.599 294.6 577.199 Y
f
0 0.55 0.5 0 k
290.2 625.599 m
287.4 603.199 290.6 594.799 v
293.8 586.399 293 584.399 292.2 580.399 c
291.4 576.399 295.8 566.399 301.4 560.399 C
313.4 558.799 l
328.6 562.399 337.8 559.599 V
346.794 558.256 350.2 573.199 V
355 579.599 362.2 582.399 v
369.4 585.199 376.6 626.799 372.6 634.799 c
368.6 642.799 354.2 647.199 338.2 631.599 c
322.2 615.999 320.2 632.799 290.2 625.599 C
b
0 0 0.2 0 k
0.5 w
291.8 550.799 m
291 552.799 286.6 553.199 V
264.2 556.799 255.8 569.199 V
249 574.799 253.4 563.199 V
263.8 542.799 270.6 539.999 V
287 535.999 291.8 550.799 V
b
0 0.55 0.5 0.2 k
1 w
371.742 614.771 m
372.401 622.677 374.354 631.291 372.6 634.799 c
366.154 647.693 349.181 642.305 338.2 631.599 c
322.2 615.999 320.2 632.799 290.2 625.599 C
288.455 611.636 289.295 601.624 v
326.6 613.199 327.4 607.599 V
329 610.799 338.2 610.799 v
347.4 610.799 370.142 611.971 371.742 614.771 C
f
0 g
0 0.55 0.5 0.35 K
2 w
328.6 624.799 m
333.4 619.999 329.8 610.399 V
315.4 594.399 317.4 580.399 v
S
0 0 0.2 0 k
0 G
0.5 w
280.6 539.999 m
276.2 552.799 285 545.999 V
289.8 543.999 288.6 542.399 v
287.4 540.799 281.8 536.799 280.6 539.999 C
b
285.64 538.799 m
282.12 549.039 289.16 543.599 V
293.581 541.151 292.04 540.719 v
287.48 539.439 292.04 536.879 285.64 538.799 C
b
290.44 538.799 m
286.92 549.039 293.96 543.599 V
298.335 541.289 296.84 540.719 v
293.48 539.439 296.84 536.879 290.44 538.799 C
b
297.04 538.599 m
293.52 548.839 300.56 543.399 V
304.943 541.067 303.441 540.519 v
300.48 539.439 303.441 536.679 297.04 538.599 C
b
303.52 538.679 m
300 548.919 307.041 543.479 V
310.881 541.879 309.921 540.599 v
308.961 539.319 309.921 536.759 303.52 538.679 C
b
310.2 537.999 m
305.4 550.399 314.6 543.999 V
319.4 541.999 318.2 540.399 v
317 538.799 318.2 535.599 310.2 537.999 C
b
0 g
0.1 0.6 0.45 0.25 K
2 w
281.8 555.199 m
295 557.999 301 554.799 V
307 553.599 308.2 553.999 v
309.4 554.399 312.6 554.799 y
S
315.8 546.399 m
327.8 559.999 339.8 555.599 v
346.816 553.026 345.8 556.399 346.6 559.199 c
347.4 561.999 347.6 566.199 352.6 569.199 c
S
0 0 0.2 0 k
0 G
0.5 w
333 562.399 m
329 573.199 326.2 560.399 v
323.4 547.599 320.2 543.999 318.6 541.199 C
318.6 535.999 327 536.399 V
337.8 536.799 338.2 539.599 v
338.6 542.399 337 553.999 333 562.399 C
b
0 g
0.1 0.6 0.45 0.25 K
2 w
347 555.199 m
350.6 557.599 353 556.399 v
S
353.5 571.599 m
356.4 576.499 361.2 577.299 v
S
0.7 g
0 G
1 w
274.2 534.799 m
292.2 531.599 296.6 533.199 V
305.4 533.199 297 531.199 V
284.2 531.199 276.2 532.399 V
264.6 537.999 274.2 534.799 V
f
0 0 0.2 0 k
0.5 w
288.2 627.999 m
305.8 627.999 307.8 627.199 V
315 596.399 311.4 588.799 V
310.2 585.999 307.4 591.599 V
289 624.399 285.8 626.399 v
282.6 628.399 287 627.999 288.2 627.999 C
b
211.1 630.699 m
220 628.999 232.6 626.399 V
237.4 603.999 240.6 599.199 v
243.8 594.399 240.2 594.399 236.6 597.199 c
233 599.999 218.2 613.999 216.2 618.399 c
214.2 622.799 211.1 630.699 y
b
232.961 626.182 m
238.761 624.634 239.77 622.419 v
240.778 620.205 238.568 616.908 y
237.568 613.603 236.366 615.765 v
235.164 617.928 232.292 625.588 232.961 626.182 c
b
0 g
233 626.399 m
236.6 621.199 240.2 621.199 v
243.8 621.199 244.182 621.612 247 620.999 c
251.6 619.999 251.2 621.999 257.8 620.799 c
260.44 620.319 263 621.199 265.8 619.999 c
268.6 618.799 271.8 619.599 273 621.599 c
274.2 623.599 279 627.799 Y
266.2 625.999 263.4 625.199 V
241 623.999 233 626.399 V
f
0 0 0.2 0 k
277.6 626.199 m
271.15 622.699 270.75 620.299 v
270.35 617.899 276 614.199 y
278.75 609.599 279.35 611.999 v
279.95 614.399 278.4 625.799 277.6 626.199 c
b
240.115 620.735 m
247.122 609.547 247.339 620.758 V
247.896 622.016 246.136 622.038 v
240.061 622.114 241.582 626.216 240.115 620.735 C
b
247.293 620.486 m
255.214 609.299 254.578 620.579 V
254.585 620.911 252.832 621.064 v
248.085 621.478 248.43 625.996 247.293 620.486 C
b
254.506 620.478 m
262.466 609.85 261.797 619.516 V
261.916 620.749 260.262 621.05 v
256.37 621.756 256.159 625.005 254.506 620.478 C
b
261.382 620.398 m
269.282 608.837 269.63 618.618 V
271.274 619.996 269.528 620.218 v
263.71 620.958 264.508 625.412 261.382 620.398 C
b
0 0 0.2 0.1 k
225.208 616.868 m
217.55 618.399 l
214.95 623.399 212.85 629.549 y
219.2 628.549 231.7 625.749 V
232.576 622.431 234.048 616.636 v
225.208 616.868 l
f
290.276 621.53 m
288.61 624.036 287.293 625.794 286.643 626.2 c
283.63 628.083 287.773 627.706 288.902 627.706 C
305.473 627.706 307.356 626.953 V
307.88 624.711 308.564 621.32 V
298.476 623.33 290.276 621.53 V
f
0.2 0.55 0.85 0 k
1 w
343.88 759.679 m
371.601 755.719 397.121 791.359 398.881 801.04 c
400.641 810.72 390.521 822.6 Y
391.841 825.68 387.001 839.76 381.721 849 c
376.441 858.24 360.54 857.266 343 858.24 c
327.16 859.12 308.68 835.8 307.36 834.04 c
306.04 832.28 312.2 793.999 313.52 788.279 c
314.84 782.559 312.2 756.159 y
346.44 765.259 316.16 763.639 343.88 759.679 c
f
0.08 0.44 0.68 0 k
308.088 833.392 m
306.792 831.664 312.84 794.079 314.136 788.463 c
315.432 782.847 312.84 756.927 y
345.512 765.807 316.728 764.271 343.944 760.383 c
371.161 756.495 396.217 791.487 397.945 800.992 c
399.673 810.496 389.737 822.16 Y
391.033 825.184 386.281 839.008 381.097 848.08 c
375.913 857.152 360.302 856.195 343.08 857.152 c
327.528 858.016 309.384 835.12 308.088 833.392 c
f
0.06 0.33 0.51 0 k
308.816 832.744 m
307.544 831.048 313.48 794.159 314.752 788.647 c
316.024 783.135 313.48 757.695 y
344.884 766.855 317.296 764.903 344.008 761.087 c
370.721 757.271 395.313 791.615 397.009 800.944 c
398.705 810.272 388.953 821.72 Y
390.225 824.688 385.561 838.256 380.473 847.16 c
375.385 856.064 360.063 855.125 343.16 856.064 c
327.896 856.912 310.088 834.44 308.816 832.744 c
f
0.04 0.22 0.34 0 k
309.544 832.096 m
308.296 830.432 314.12 794.239 315.368 788.831 c
316.616 783.423 314.12 758.463 y
343.556 767.503 317.864 765.535 344.072 761.791 c
370.281 758.047 394.409 791.743 396.073 800.895 c
397.737 810.048 388.169 821.28 Y
389.417 824.192 384.841 837.504 379.849 846.24 c
374.857 854.976 359.824 854.055 343.24 854.976 c
328.264 855.808 310.792 833.76 309.544 832.096 c
f
0.02 0.11 0.17 0 k
310.272 831.448 m
309.048 829.816 314.76 794.319 315.984 789.015 c
317.208 783.711 314.76 759.231 y
342.628 768.151 318.432 766.167 344.136 762.495 c
369.841 758.823 393.505 791.871 395.137 800.848 c
396.769 809.824 387.385 820.84 Y
388.609 823.696 384.121 836.752 379.225 845.32 c
374.329 853.888 359.585 852.985 343.32 853.888 c
328.632 854.704 311.496 833.08 310.272 831.448 c
f
1 g
344.2 763.2 m
369.4 759.6 392.601 792 394.201 800.8 c
395.801 809.6 386.601 820.4 Y
387.801 823.2 383.4 836 378.6 844.4 c
373.8 852.8 359.346 851.914 343.4 852.8 c
329 853.6 312.2 832.4 311 830.8 c
309.8 829.2 315.4 794.4 316.6 789.2 c
317.8 784 315.4 760 y
340.9 768.6 319 766.8 344.2 763.2 c
f
0.8 g
390.601 797.2 m
362.8 789.6 351.2 791.2 V
335.4 797.8 326.6 776 V
323 768.8 321 766.8 v
319 764.8 390.601 797.2 Y
f
0 g
394.401 799.4 m
365.4 787.2 355.4 787.6 v
339 792.2 330.6 777.6 V
322.2 768.4 319 766.8 V
318.6 765.2 325 769.2 V
335.4 764 l
350.2 754.4 359.8 770.4 V
363.8 781.6 363.8 783.6 v
363.8 785.6 385 791.2 386.601 791.6 c
388.201 792 394.801 796.2 394.401 799.4 C
f
0.4 0.2 0.8 0 k
347 763.486 m
340.128 763.486 331.755 767.351 331.755 773.6 c
331.755 779.848 340.128 786.113 347 786.113 c
353.874 786.113 359.446 781.048 359.446 774.8 c
359.446 768.551 353.874 763.486 347 763.486 c
f
0.4 0.2 0.8 0.2 k
343.377 780.17 m
338.531 779.448 333.442 777.945 333.514 778.161 c
335.054 782.78 341.415 786.113 347 786.113 c
351.296 786.113 355.084 784.135 357.32 781.125 c
352.004 781.455 343.377 780.17 v
f
1 g
355.4 780.4 m
351 783.6 351 781.4 V
354.6 777 355.4 780.4 V
f
0 g
345.4 772.274 m
342.901 772.274 340.875 774.3 340.875 776.8 c
340.875 779.299 342.901 781.325 345.4 781.325 c
347.9 781.325 349.926 779.299 349.926 776.8 c
349.926 774.3 347.9 772.274 345.4 772.274 c
f
0.2 0.55 0.85 0 k
241.4 785.6 m
238.2 806.8 240.6 811.2 V
251.4 821.2 251 824.8 V
250.6 842.8 249.4 843.6 v
248.2 844.4 240.6 850.4 234.6 844 C
224.2 826 225 819.6 V
225 817.6 l
217.4 818 215.8 816 V
214.6 810.8 213.4 810.4 V
210.6 808 212.6 805.2 V
210.6 802.8 211 798.8 V
218.6 794.8 L
220.6 780.4 231.4 775.2 v
236.236 772.871 239.4 779.6 241.4 785.6 c
f
1 g
240.4 787.44 m
237.52 806.52 239.68 810.48 V
249.4 819.48 249.04 822.72 V
248.68 838.92 247.6 839.64 v
246.52 840.36 239.68 845.76 234.28 840 C
224.92 823.8 225.64 818.04 V
225.64 816.24 l
218.8 816.6 217.36 814.8 V
216.28 810.12 215.2 809.76 V
212.68 807.6 214.48 805.08 V
212.68 802.92 213.04 799.32 V
219.88 795.72 L
221.68 782.76 231.4 778.08 v
235.752 775.985 238.6 782.04 240.4 787.44 c
f
0.075 0.412 0.637 0 k
248.95 842.61 m
247.86 843.47 240.37 849.24 234.52 843 C
224.38 825.45 225.16 819.21 V
225.16 817.26 l
217.75 817.65 216.19 815.7 V
215.02 810.63 213.85 810.24 V
211.12 807.9 213.07 805.17 V
211.12 802.83 211.51 798.93 V
218.92 795.03 L
220.87 780.99 231.4 775.92 v
236.114 773.65 239.2 780.21 241.15 786.06 c
238.03 806.73 240.37 811.02 V
250.9 820.77 250.51 824.28 V
250.12 841.83 248.95 842.61 V
f
0.05 0.275 0.425 0 k
248.5 841.62 m
247.52 842.54 240.14 848.08 234.44 842 C
224.56 824.9 225.32 818.82 V
225.32 816.92 l
218.1 817.3 216.58 815.4 V
215.44 810.46 214.3 810.08 V
211.64 807.8 213.54 805.14 V
211.64 802.86 212.02 799.06 V
219.24 795.26 L
221.14 781.58 231.4 776.64 v
235.994 774.428 239 780.82 240.9 786.52 c
237.86 806.66 240.14 810.84 V
250.4 820.34 250.02 823.76 V
249.64 840.86 248.5 841.62 V
f
0.025 0.137 0.212 0 k
248.05 840.63 m
247.18 841.61 239.91 846.92 234.36 841 C
224.74 824.35 225.48 818.43 V
225.48 816.58 l
218.45 816.95 216.97 815.1 V
215.86 810.29 214.75 809.92 V
212.16 807.7 214.01 805.11 V
212.16 802.89 212.53 799.19 V
219.56 795.49 L
221.41 782.17 231.4 777.36 v
235.873 775.206 238.8 781.43 240.65 786.98 c
237.69 806.59 239.91 810.66 V
249.9 819.91 249.53 823.24 V
249.16 839.89 248.05 840.63 V
f
1 g
240.4 787.54 m
237.52 806.52 239.68 810.48 V
249.4 819.48 249.04 822.72 V
248.68 838.92 247.6 839.64 V
246.84 840.68 239.68 845.76 234.28 840 C
224.92 823.8 225.64 818.04 V
225.64 816.24 l
218.8 816.6 217.36 814.8 V
216.28 810.12 215.2 809.76 V
212.68 807.6 214.48 805.08 V
212.68 802.92 213.04 799.32 V
219.88 795.72 L
221.68 782.76 231.4 778.08 v
235.752 775.985 238.6 782.14 240.4 787.54 c
f
0.8 g
237.3 793.8 m
215.7 804 214.8 804.8 V
223.9 796.6 224.7 796.6 v
225.5 796.6 237.3 793.8 Y
f
0 g
220.2 800 m
238.6 796.4 238.6 792 v
238.6 789.088 238.357 775.669 233 777.2 c
224.6 779.6 228.2 794 220.2 800 c
f
0.4 0.2 0.8 0 k
228.6 796.2 m
237.578 794.726 238.6 792 v
239.2 790.4 239.863 782.092 234.4 781 c
229.848 780.089 227.618 790.31 228.6 796.2 c
f
0 g
314.595 753.651 m
314.098 755.393 315.409 755.262 317.2 755.8 c
319.2 756.4 331.4 760.2 332.2 762.8 c
333 765.4 346.2 761 Y
348 760.2 352.4 757.6 Y
357.2 756.4 363.8 756 Y
366.2 755 369.6 752.2 Y
384.2 742 396.601 749.2 Y
416.601 755.8 410.601 773 Y
407.601 782 410.801 785.4 Y
411.001 789.2 418.201 782.8 Y
420.801 778.6 421.601 773.6 Y
429.601 762.4 426.201 780.2 Y
426.401 781.2 423.601 784.8 423.601 786 c
423.601 787.2 421.801 790.6 Y
418.801 794 421.201 801 Y
423.001 814.8 420.801 813 Y
419.601 814.8 410.401 804.8 Y
408.201 801.4 402.201 799.8 Y
399.401 798 396.001 799.4 Y
393.401 799.8 387.801 792.8 Y
390.601 793 393.001 788.6 395.401 788.4 c
397.801 788.2 399.601 790.8 401.201 791.4 c
402.801 792 405.601 786.2 Y
406.001 783.6 400.401 778.8 Y
400.001 774.2 398.401 775.8 Y
395.401 776.4 394.201 772.6 393.201 768 c
392.201 763.4 388.001 763 y
386.401 755.6 385.2 758.6 Y
385 764.2 379 758.4 Y
377.8 756.4 373.2 758.6 Y
366.4 760.6 368.8 762.6 Y
370.6 764.8 381.8 762.6 Y
384 764.2 376 768.2 Y
375.4 770 376.4 774.4 Y
377.6 777.6 384.4 783.2 Y
393.801 784.4 391.001 786 Y
384.801 791.2 379 783.6 Y
376.8 777.4 359.4 762.4 Y
354.6 759 357.2 765.8 353.2 762.4 c
349.2 759 328.6 768 y
317.038 769.193 314.306 753.451 310.777 756.571 c
316.195 748.051 314.595 753.651 v
f
509.401 920 m
483.801 912 481.001 893.2 V
478.601 870.4 499.001 852.8 V
499.401 846.4 501.401 843.2 v
499.801 838.4 518.601 846 V
545.801 854.4 l
552.201 856.8 557.401 865.6 v
562.601 874.4 577.801 893.2 574.201 918.4 C
575.401 929.6 569.401 930 V
561.001 931.6 553.801 924 V
547.001 920.8 544.601 921.2 V
509.401 920 L
f
564.022 920.99 m
566.122 929.92 561.282 925.08 V
554.242 919.36 546.761 919.36 V
532.241 917.16 527.841 903.96 V
523.881 877.12 531.801 871.4 V
536.641 863.92 543.681 870.52 v
550.722 877.12 566.222 907.35 564.022 920.99 C
f
0.2 g
563.648 920.632 m
565.738 929.376 560.986 924.624 V
554.074 919.008 546.729 919.008 V
532.473 916.848 528.153 903.888 V
524.265 877.536 532.041 871.92 V
536.793 864.576 543.705 871.056 v
550.618 877.536 565.808 907.24 563.648 920.632 C
f
0.4 g
563.274 920.274 m
565.354 928.832 560.69 924.168 V
553.906 918.656 546.697 918.656 V
532.705 916.536 528.465 903.816 V
524.649 877.952 532.281 872.44 V
536.945 865.232 543.729 871.592 v
550.514 877.952 565.394 907.13 563.274 920.274 C
f
0.6 g
562.9 919.916 m
564.97 928.288 560.394 923.712 V
553.738 918.304 546.665 918.304 V
532.937 916.224 528.777 903.744 V
525.033 878.368 532.521 872.96 V
537.097 865.888 543.753 872.128 v
550.41 878.368 564.98 907.02 562.9 919.916 C
f
0.8 g
562.526 919.558 m
564.586 927.744 560.098 923.256 V
553.569 917.952 546.633 917.952 V
533.169 915.912 529.089 903.672 V
525.417 878.784 532.761 873.48 V
537.249 866.544 543.777 872.664 v
550.305 878.784 564.566 906.91 562.526 919.558 C
f
1 g
562.151 919.2 m
564.201 927.2 559.801 922.8 V
553.401 917.6 546.601 917.6 V
533.401 915.6 529.401 903.6 V
525.801 879.2 533.001 874 V
537.401 867.2 543.801 873.2 v
550.201 879.2 564.151 906.8 562.151 919.2 C
f
0.1 0.55 0.85 0.3 k
350.6 716 m
330.2 735.2 322.2 736 V
287.8 740 273 722 V
290.6 742.4 318.2 736.8 V
296.6 741.2 284.2 738 V
267.4 738 257.8 724 V
255 719.2 l
259 734 277.4 740 V
300.2 744.8 311 740 V
289.4 746.8 279.4 744.8 V
249 747.2 236.2 720.8 V
240.2 735.2 255 742.4 V
268.6 751.2 289 748.4 V
303.4 745.2 308.6 742.8 v
313.8 740.4 312.6 743.2 304.2 748 C
298.6 758 284.6 757.6 V
241.8 754 231.4 742 V
245 753.2 255.4 756 V
277.8 764 286.2 763.2 V
311 762.2 318.6 766.2 V
307.4 761.2 310.6 758 v
313.8 754.8 320.6 747.2 320.6 746 c
320.6 744.8 344.8 722.7 348.4 718.3 C
350.6 716 l
f
0.8 g
1 J 0.1 w
489 522 m
473.5 558.5 461 568 V
487 552 490.5 534 V
490.5 524 489 522 V
f
536 514.5 m
509.5 569.5 491 593.5 V
534.5 556 539.5 529.5 V
540 524 l
537 526.5 l
536.5 517.5 536 514.5 V
f
592.5 563 m
530 622.5 528.5 625 V
589 559 592 551.5 V
590 560.5 592.5 563 V
f
404 519.5 m
423.5 571.5 442.5 549 V
457.5 539 457 536 V
453 542.5 435 542 V
416 545 404 519.5 V
f
594.5 647 m
549.5 675.5 542 677 v
530.193 679.361 591.5 648 596.5 637.5 C
598.5 640 594.5 647 V
f
0 g
0 J 1 w
443.801 540.399 m
464.201 542.399 471.001 549.199 V
475.401 545.599 l
493.001 583.999 l
496.601 578.799 l
511.001 593.599 510.201 601.599 v
509.401 609.599 523.001 595.599 y
522.201 607.199 529.401 600.399 V
527.001 615.999 535.401 607.999 V
524.864 638.156 547.401 612.399 v
553.001 605.999 548.601 612.799 y
522.601 660.799 544.201 646.399 v
546.201 669.199 545.001 673.599 v
543.801 677.999 541.801 700.4 537.001 705.6 c
532.201 710.8 537.401 712.4 543.001 707.2 C
531.801 731.2 545.001 719.2 V
541.401 734.4 537.001 737.2 V
531.401 754.4 546.601 743.6 V
542.201 756 539.001 759.2 V
527.401 786.8 534.601 782 V
539.001 778.4 l
532.201 792.4 538.601 788 v
545.001 783.6 545.001 784 y
523.801 817.2 544.201 799.6 V
536.042 813.518 532.601 820.4 V
513.801 840.8 528.201 834.4 V
533.001 832.8 l
524.201 842.8 516.201 844.4 v
508.201 846 518.601 852.4 525.001 850.4 c
531.401 848.4 547.001 840.8 y
559.801 822 563.801 821.6 V
543.801 829.2 549.801 821.2 V
564.201 807.2 557.001 807.6 V
551.001 800.4 555.801 791.6 V
537.342 809.991 552.201 784.4 v
559.001 768 l
534.601 792.8 545.801 770.8 V
563.001 747.2 565.001 746.8 v
567.001 746.4 571.401 737.6 y
567.001 739.6 l
572.201 730.8 l
561.001 742.8 567.001 729.6 V
572.601 715.2 l
552.201 737.2 565.801 707.6 V
549.401 712.8 558.201 695.6 V
556.601 679.599 557.001 674.399 v
557.401 669.199 558.601 640.799 554.201 632.799 c
549.801 624.799 560.201 605.599 562.201 601.599 c
564.201 597.599 567.801 586.799 559.001 595.999 c
550.201 605.199 554.601 599.599 556.601 590.799 c
558.601 581.999 564.601 566.399 563.801 560.799 C
562.601 559.599 559.401 563.199 V
544.601 585.999 546.201 571.599 V
545.001 563.599 541.801 554.799 V
538.601 543.999 538.601 552.799 V
535.401 569.599 532.601 561.999 v
529.801 554.399 526.201 548.399 523.401 545.999 c
520.601 543.599 515.401 566.399 514.201 555.999 C
502.201 568.399 497.401 551.999 V
485.801 535.599 l
485.401 547.999 484.201 541.999 V
454.201 535.999 443.801 540.399 V
f
409.401 897.2 m
397.801 905.2 393.801 904.8 v
389.801 904.4 421.401 913.6 462.601 886 C
467.401 883.2 471.001 883.6 V
474.201 881.2 471.401 877.6 V
462.601 868 473.801 856.8 V
492.201 850 486.601 858.8 V
497.401 854.8 499.801 850.8 v
502.201 846.8 501.001 850.8 y
494.601 858 488.601 863.2 V
483.401 865.2 480.601 873.6 v
477.801 882 475.401 892 479.801 895.2 C
475.801 890.8 476.601 894.8 v
477.401 898.8 481.001 902.4 482.601 902.8 c
484.201 903.2 500.601 919 507.401 919.4 C
498.201 918 495.201 919 v
492.201 920 465.601 931.4 459.601 932.6 C
442.801 939.2 454.801 937.2 V
490.601 933.4 508.801 920.2 V
501.601 928.6 483.201 935.6 V
461.001 948.2 425.801 943.2 V
408.001 940 400.201 938.2 V
397.601 938.8 397.001 939.2 v
396.401 939.6 384.6 948.6 357 941.6 C
340 937 331.4 932.2 V
316.2 931 312.6 927.8 V
294 913.2 292 912.4 v
290 911.6 278.6 904 277.8 903.6 C
302.4 910.2 304.8 912.6 v
307.2 915 324.6 917.6 327 916.2 c
329.4 914.8 337.8 915.4 328.2 914.8 C
403.801 900 404.601 898 v
405.401 896 409.401 897.2 y
f
0.2 0.55 0.85 0 k
480.801 906.4 m
470.601 913.8 468.601 913.8 v
466.601 913.8 454.201 924 450.001 923.6 c
445.801 923.2 433.601 933.2 406.201 925 C
405.601 927 409.201 927.8 V
415.601 930 416.001 930.6 V
436.201 934.8 443.401 931.2 V
452.601 928.6 458.801 922.4 V
470.001 919.2 473.201 920.2 V
482.001 918 482.401 916.2 V
488.201 913.2 486.401 910.6 V
486.801 909 480.801 906.4 V
f
468.33 908.509 m
469.137 907.877 470.156 907.779 470.761 906.97 c
470.995 906.656 470.706 906.33 470.391 906.233 c
469.348 905.916 468.292 906.486 467.15 905.898 c
466.748 905.691 466.106 905.873 465.553 906.022 c
463.921 906.463 462.092 906.488 460.401 905.8 C
458.416 906.929 456.056 906.345 453.975 907.346 c
453.917 907.373 453.695 907.027 453.621 907.054 c
450.575 908.199 446.832 907.916 444.401 910.2 C
441.973 910.612 439.616 911.074 437.188 911.754 c
435.37 912.263 433.961 913.252 432.341 914.084 c
430.964 914.792 429.507 915.314 427.973 915.686 c
426.11 916.138 424.279 916.026 422.386 916.546 c
422.293 916.571 422.101 916.227 422.019 916.254 c
421.695 916.362 421.405 916.945 421.234 916.892 c
419.553 916.37 418.065 917.342 416.401 917 C
415.223 918.224 413.495 917.979 411.949 918.421 c
408.985 919.269 405.831 917.999 402.801 919 C
406.914 920.842 411.601 919.61 415.663 921.679 c
417.991 922.865 420.653 921.763 423.223 922.523 c
423.71 922.667 424.401 922.869 424.801 922.2 C
424.935 922.335 425.117 922.574 425.175 922.546 c
427.625 921.389 429.94 920.115 432.422 919.049 c
432.763 918.903 433.295 919.135 433.547 918.933 c
435.067 917.717 437.01 917.82 438.401 916.6 C
440.099 917.102 441.892 916.722 443.621 917.346 c
443.698 917.373 443.932 917.032 443.965 917.054 c
445.095 917.802 446.25 917.531 447.142 917.227 c
447.48 917.112 448.143 916.865 448.448 916.791 c
449.574 916.515 450.43 916.035 451.609 915.852 c
451.723 915.834 451.908 916.174 451.98 916.146 c
453.103 915.708 454.145 915.764 454.801 914.6 C
454.936 914.735 455.101 914.973 455.183 914.946 c
456.21 914.608 456.859 913.853 457.96 913.612 c
458.445 913.506 459.057 912.88 459.633 912.704 c
462.025 911.973 463.868 910.444 466.062 909.549 c
466.821 909.239 467.697 909.005 468.33 908.509 c
f
391.696 922.739 m
389.178 924.464 386.81 925.57 384.368 927.356 c
384.187 927.489 383.827 927.319 383.625 927.441 c
382.618 928.05 381.73 928.631 380.748 929.327 c
380.209 929.709 379.388 929.698 378.88 929.956 c
376.336 931.248 373.707 931.806 371.2 933 C
371.882 933.638 373.004 933.394 373.6 934.2 C
373.795 933.92 374.033 933.636 374.386 933.827 c
376.064 934.731 377.914 934.884 379.59 934.794 c
381.294 934.702 383.014 934.397 384.789 934.125 c
385.096 934.078 385.295 933.555 385.618 933.458 c
387.846 932.795 390.235 933.32 392.354 932.482 c
393.945 931.853 395.515 931.03 396.754 929.755 c
397.006 929.495 396.681 929.194 396.401 929 C
396.789 929.109 397.062 928.903 397.173 928.59 c
397.257 928.351 397.257 928.049 397.173 927.81 c
397.061 927.498 396.782 927.397 396.408 927.346 c
395.001 927.156 396.773 928.536 396.073 928.088 c
394.8 927.274 395.546 925.868 394.801 924.6 C
394.521 924.794 394.291 925.012 394.401 925.4 C
394.635 924.878 394.033 924.588 393.865 924.272 c
393.48 923.547 392.581 922.132 391.696 922.739 c
f
359.198 915.391 m
356.044 916.185 352.994 916.07 349.978 917.346 c
349.911 917.374 349.688 917.027 349.624 917.054 c
348.258 917.648 347.34 918.614 346.264 919.66 c
345.351 920.548 343.693 920.161 342.419 920.648 c
342.095 920.772 341.892 921.284 341.591 921.323 c
340.372 921.48 339.445 922.429 338.4 923 C
340.736 923.795 343.147 923.764 345.609 924.148 c
345.722 924.166 345.867 923.845 346 923.845 c
346.136 923.845 346.266 924.066 346.4 924.2 C
346.595 923.92 346.897 923.594 347.154 923.848 c
347.702 924.388 348.258 924.198 348.798 924.158 c
348.942 924.148 349.067 923.845 349.2 923.845 c
349.336 923.845 349.467 924.156 349.6 924.156 c
349.736 924.155 349.867 923.845 350 923.845 c
350.136 923.845 350.266 924.066 350.4 924.2 C
351.092 923.418 351.977 923.972 352.799 923.793 c
353.837 923.566 354.104 922.418 355.178 922.12 c
359.893 920.816 364.03 918.671 368.393 916.584 c
368.7 916.437 368.91 916.189 368.8 915.8 C
369.067 915.8 369.38 915.888 369.57 915.756 c
370.628 915.024 371.669 914.476 372.366 913.378 c
372.582 913.039 372.253 912.632 372.02 912.684 c
367.591 913.679 363.585 914.287 359.198 915.391 c
f
345.338 871.179 m
343.746 872.398 343.162 874.429 342.034 876.221 c
341.82 876.561 342.094 876.875 342.411 876.964 c
342.971 877.123 343.514 876.645 343.923 876.443 c
345.668 875.581 347.203 874.339 349.2 874.2 C
351.19 871.966 355.45 871.581 355.457 868.2 c
355.458 867.341 354.03 868.259 353.6 867.4 C
351.149 868.403 348.76 868.3 346.38 869.767 c
345.763 870.148 346.093 870.601 345.338 871.179 c
f
317.8 923.756 m
317.935 923.755 324.966 923.522 324.949 923.408 c
324.904 923.099 317.174 922.05 316.81 922.22 c
316.646 922.296 309.134 919.866 309 920 C
309.268 920.135 317.534 923.756 317.8 923.756 c
f
0 g
333.2 914 m
318.4 912.2 314 911 v
309.6 909.8 291 902.2 288 900.2 C
274.6 894.8 257.6 874.8 V
265.2 878.2 267.4 881 V
281 893.6 280.8 891 V
293 899.6 292.4 897.4 V
316.8 908.6 314.8 905.4 V
336.4 910 335.4 908 V
354.2 903.6 351.4 903.4 V
345.6 902.2 352 898.6 V
348.6 894.2 343.2 898.2 v
337.8 902.2 340.8 900 335.8 899 C
333.2 898.2 328.6 902.2 V
323 906.8 314.2 903.2 V
283.6 890.6 281.6 890 V
278 887.2 275.6 883.6 V
269.8 879.2 266.8 877.8 V
254 866.2 252.8 864.8 V
249.4 859.6 248.6 859.2 V
255 863 257 865 V
271 875 276.4 875.8 V
280.8 878.8 281.6 880.2 V
296 889.4 300.2 889.4 V
309.4 884.2 311.8 891.2 V
317.6 893 323.2 891.8 V
326.4 894.4 325.6 896.6 V
327.2 898.4 328.2 894.6 V
331.6 891 336.4 893 V
340.4 893.2 338.4 890.8 V
334 887 322.2 886.8 V
309.8 886.2 293.4 878.6 V
263.6 868.2 254.4 857.8 V
248 849 242.6 847.8 V
236.8 847 230.8 839.6 V
240.6 845.4 249.6 845.4 V
253.6 847.8 249.8 844.2 V
246.2 836.6 247.8 831.2 V
247.2 826 246.4 824.4 V
238.6 811.6 238.6 809.2 v
238.6 806.8 239.8 797 240.2 796.4 c
240.6 795.8 239.2 798 243 795.6 c
246.8 793.2 249.6 791.6 250.4 788.8 c
251.2 786 248.4 794.2 248.2 796 c
248 797.8 243.8 805 244.6 807.4 C
245.6 806.4 246.4 805 V
245.8 805.6 246.4 809.2 V
247.2 814.4 248.6 817.6 v
250 820.8 252 824.6 252.4 825.4 c
252.8 826.2 252.8 832 254.2 829.4 C
257.6 826.8 l
254.8 829.4 257 831.6 V
256 837.2 257.8 839.8 V
264.8 848.2 266.4 849.2 v
268 850.2 266.6 849.8 y
272.6 854 266.8 852.4 V
262.8 850.8 259.8 850.8 V
252.2 848.8 256.2 853 v
260.2 857.2 270.2 862.6 274 862.4 C
274.8 860.8 l
286 863.2 l
284.8 862.4 l
284.6 862.6 288.8 863 v
293 863.4 298.8 862 300.2 863.8 c
301.6 865.6 305 866.6 304.6 865.2 c
304.2 863.8 304 861.8 y
309 867.6 308.4 865.4 v
307.8 863.2 299.6 858 298.2 851.8 C
308.6 860 l
312.2 863 l
315.8 860.8 316 862.4 v
316.2 864 320.8 869.8 322 869.6 c
323.2 869.4 325.2 872.2 325 869.6 c
324.8 867 332.4 861.6 y
335.6 863.4 337 862 v
338.4 860.6 342.6 881.8 y
367.6 892.4 l
411.201 895.8 l
394.201 902.6 l
333.2 914 l
f
0.2 0.55 0.85 0.5 K
1 J 2 w
351.4 715 m
336.4 731.8 328 734.4 V
314.6 741.2 290 733.4 v
S
324.8 735.8 m
299.6 743.8 284.2 739.6 V
265.8 737.6 257.4 723.8 v
S
321.2 737 m
304.2 744.2 289.4 746.4 V
272.8 749 256.2 741.8 V
244 735.8 238.6 725.6 v
S
322.2 736.6 m
306.8 747.6 305.8 749 V
298.8 760 285.8 760.4 V
264.4 759.6 247.2 751.6 v
S
0 G
0 J 1 w
320.895 745.593 m
322.437 744.13 349.4 715.2 Y
384.6 678.599 356.6 712.8 Y
349 717.6 339.8 736.4 Y
338.6 739.2 353.8 729.2 Y
357.8 728.4 371.4 709.2 Y
364.6 711.6 369.4 704.4 Y
372.2 702.4 392.601 686.799 Y
396.201 682.799 400.201 681.199 Y
414.201 686.399 407.801 673.199 Y
410.201 666.399 415.801 677.999 Y
427.001 694.8 410.601 692.399 Y
380.6 689.599 373.8 705.6 Y
371.4 708 380.2 705.6 Y
388.601 703.6 373 718 Y
375.4 718 384.6 711.2 Y
395.001 702 397.001 704 Y
415.001 712.8 425.401 705.2 Y
427.401 703.6 421.801 696.8 423.401 691.599 c
425.001 686.399 429.801 673.999 Y
427.401 672.399 427.801 661.599 Y
444.601 638.399 435.001 640.399 Y
419.401 640.799 434.201 633.199 Y
437.401 631.199 446.201 623.999 Y
443.401 625.199 441.801 619.999 Y
446.601 615.999 443.801 611.199 Y
437.801 609.999 436.601 605.999 Y
443.401 597.999 433.401 597.599 Y
437.001 593.199 432.201 581.199 Y
427.401 581.199 421.001 575.599 Y
423.401 570.799 413.001 565.199 Y
404.601 563.599 407.401 556.799 Y
399.401 550.799 397.001 534.799 Y
396.201 524.399 393.801 521.199 399.001 523.199 c
404.201 525.199 403.401 537.599 Y
398.601 553.199 441.401 569.199 Y
445.401 570.799 446.201 575.999 Y
448.201 575.599 457.001 567.999 Y
464.601 556.799 465.001 565.999 Y
466.201 569.599 464.601 575.599 Y
470.601 597.199 456.601 603.599 Y
446.601 637.199 460.601 628.799 Y
463.401 623.199 474.201 617.999 y
477.801 620.399 L
476.201 625.199 484.601 631.199 Y
487.401 624.799 493.401 632.799 Y
497.001 657.199 509.401 642.799 Y
513.401 641.599 514.601 648.399 Y
518.201 658.799 514.601 672.399 Y
518.201 672.799 527.801 666.799 Y
530.601 670.399 521.401 687.199 525.401 684.799 c
529.401 682.399 533.801 680.799 Y
534.601 682.799 524.601 695.199 Y
520.201 698 515.001 718.4 Y
522.201 714.8 512.201 730 Y
512.201 733.2 518.201 744.4 Y
517.401 751.2 518.201 750.8 Y
521.001 749.6 529.001 748 522.201 754.4 c
515.401 760.8 523.001 765.6 Y
527.401 768.4 513.801 768 Y
508.601 772.4 509.001 776.4 Y
517.001 774.4 502.601 788.8 500.201 792.4 c
497.801 796 507.401 801.2 Y
520.601 804.8 509.001 808 Y
489.401 807.6 500.201 818.4 Y
506.201 818 504.601 820.4 Y
499.401 821.6 489.801 828 Y
485.801 831.6 489.401 830.8 Y
506.201 829.6 477.401 840.8 Y
485.401 840.8 467.401 851.2 Y
465.401 852.8 462.201 860.4 Y
456.201 865.6 451.401 872.4 Y
451.001 876.8 446.201 881.6 Y
434.601 895.2 429.001 894.8 Y
414.201 898.4 409.001 897.6 Y
356.2 893.2 l
329.8 880.4 337.6 859.4 Y
344 851 353.2 854.8 Y
357.8 861 369.4 858.8 Y
389.801 855.6 387.201 859.2 Y
384.801 863.8 368.6 870 368.4 870.6 c
368.2 871.2 359.4 874.6 Y
356.4 875.8 352 885 Y
348.8 888.4 364.6 882.6 Y
363.4 881.6 370.8 877.6 Y
388.201 878.6 398.801 867.8 Y
409.601 851.2 409.801 859.4 Y
412.601 868.8 400.801 890 Y
401.201 892 409.401 885.4 Y
410.801 887.4 411.601 881.6 Y
411.801 879.2 415.601 871.2 Y
418.401 858.2 422.001 865.6 Y
426.601 856.2 L
428.001 853.6 422.001 846 Y
421.801 843.2 422.601 843.4 417.001 835.8 c
411.401 828.2 414.801 823.8 Y
413.401 817.2 422.201 817.6 Y
424.801 815.4 428.201 815.4 Y
430.001 813.4 432.401 814 Y
434.001 817.8 440.201 815.8 Y
441.601 818.2 449.801 818.6 Y
450.801 821.2 451.201 822.8 454.601 823.4 c
458.001 824 433.401 867 Y
439.801 867.8 431.601 880.2 Y
429.401 886.8 440.801 872.2 443.001 870.8 c
445.201 869.4 446.201 867.2 444.601 867.4 c
443.001 867.6 441.201 865.4 442.601 865.2 c
444.001 865 457.001 850 460.401 839.8 c
463.801 829.6 469.801 825.6 476.001 819.6 c
482.201 813.6 481.401 789.4 Y
481.001 780.6 487.001 770 Y
489.001 766.2 484.801 748 Y
482.801 745.8 484.201 745 Y
485.201 743.8 492.001 730.6 Y
490.201 730.8 493.801 727.2 Y
499.001 721.2 492.601 724.2 Y
486.601 725.8 493.601 716 Y
494.801 714.2 485.801 718.8 Y
476.601 719.4 488.201 712.2 Y
496.801 705 485.401 709.4 Y
480.801 711.2 484.001 704.4 Y
487.201 702.8 504.401 695.8 Y
504.801 691.999 501.801 686.999 Y
502.201 682.999 500.001 679.599 Y
498.801 671.399 498.201 670.599 Y
494.001 670.399 486.601 656.599 Y
484.801 653.999 474.601 641.999 Y
472.601 634.999 454.601 642.199 Y
448.001 638.799 450.001 642.199 Y
449.601 644.399 454.401 650.399 Y
461.401 652.999 458.801 663.799 Y
462.801 665.199 451.601 667.999 451.801 669.199 c
452.001 670.399 457.801 671.799 Y
465.801 673.799 461.401 676.199 Y
460.801 680.199 463.801 685.799 Y
475.401 686.599 463.801 702.8 Y
453.001 710.4 452.001 716.2 Y
464.601 724.4 456.401 736.8 456.601 740.4 c
456.801 744 458.001 765.6 Y
456.001 771.8 453.001 785.4 Y
455.201 790.6 462.601 803.2 Y
465.401 807.4 474.201 812.2 472.001 815.2 c
469.801 818.2 462.001 816.4 Y
454.201 817.8 454.801 812.6 Y
453.201 811.6 452.401 806.6 Y
451.68 798.667 442.801 792.4 Y
431.601 786.2 440.801 782.2 Y
446.801 775.6 437.001 775.4 Y
426.001 777.2 434.201 767 Y
445.001 754.2 442.001 751.4 Y
431.801 750.4 444.401 741.2 y
443.601 743.2 443.801 741.4 v
444.001 739.6 447.001 735.4 447.801 733.4 c
448.601 731.4 444.601 731.2 Y
445.201 721.6 429.801 725.8 y
429.801 725.8 428.201 725.6 v
426.601 725.4 415.401 726.2 409.601 728.4 c
403.801 730.6 397.001 730.6 y
393.001 728.8 385.4 729 v
377.8 729.2 369.8 726.4 Y
365.4 726.8 374 731.2 374.2 731 c
374.4 730.8 380 736.4 372 735.8 c
350.203 734.165 339.4 744.4 Y
337.4 745.8 334.8 748.6 Y
324.8 750.6 336.2 736.2 Y
337.4 734.8 336 733.8 Y
335.2 735.4 327.4 740.8 Y
324.589 741.773 323.226 743.107 320.895 745.593 C
f
0.2 0.55 0.85 0.5 k
1 J 2 w
297 757.2 m
308.6 751.6 311.2 748.8 v
313.8 746 327.8 734.6 y
322.4 736.6 319.8 738.4 v
317.2 740.2 306.4 748.4 y
302.6 754.4 297 757.2 v
f
0.4 0.2 0.8 0 k
0 J 1 w
238.991 788.397 m
239.328 788.545 238.804 791.257 238.6 791.8 c
237.578 794.526 228.6 796 y
228.373 794.635 228.318 793.039 228.424 791.401 c
233.292 785.882 238.991 788.397 v
f
0.4 0.2 0.8 0.2 k
238.991 788.597 m
238.542 788.439 238.976 791.331 238.8 791.8 c
237.778 794.526 228.6 796.1 y
228.373 794.735 228.318 793.139 228.424 791.501 c
232.692 786.382 238.991 788.597 v
f
0 g
234.6 788.454 m
233.975 788.454 233.469 789.594 233.469 791 c
233.469 792.405 233.975 793.545 234.6 793.545 c
235.225 793.545 235.732 792.405 235.732 791 c
235.732 789.594 235.225 788.454 234.6 788.454 c
f
234.6 791 m
F
189 690.399 m
183.4 680.399 208.2 686.399 V
222.2 687.599 224.6 689.999 V
225.8 689.199 234.166 686.266 237 685.599 c
243.8 683.999 252.2 694 y
256.8 704.5 259.6 704.5 v
262.4 704.5 259.2 702.9 y
252.6 692.799 253 691.199 V
247.8 671.199 231.8 670.399 V
215.65 669.449 217 663.599 V
225.8 665.999 228.2 663.599 V
239 663.999 231 657.599 V
224.2 645.999 l
224.34 642.081 214.2 645.599 v
204.4 648.999 194.1 661.899 y
178.15 676.449 189 690.399 V
f
0.1 0.4 0.4 0 k
187.8 686.399 m
185.8 676.799 222.6 687.199 V
227 687.199 229.4 686.399 v
231.8 685.599 243.8 682.799 245.8 683.999 C
238.6 670.399 227 671.999 V
213.8 670.399 214.2 665.599 V
218.2 658.399 223 655.999 V
225.8 653.599 225.4 650.399 v
225 647.199 222.2 645.599 220.2 644.799 c
218.2 643.999 215 647.199 213.4 647.199 c
211.8 647.199 203.4 653.599 199 658.399 c
194.6 663.199 186.2 675.199 186.6 677.999 c
187 680.799 187.8 686.399 Y
f
0.1 0.4 0.4 0.2 k
191 668.949 m
193.6 664.999 196.8 660.799 199 658.399 c
203.4 653.599 211.8 647.199 213.4 647.199 c
215 647.199 218.2 643.999 220.2 644.799 c
222.2 645.599 225 647.199 225.4 650.399 c
225.8 653.599 223 655.999 Y
219.934 657.532 217.194 661.024 215.615 663.347 C
215.8 660.799 210.6 661.599 v
205.4 662.399 200.2 665.199 198.6 668.399 c
197 671.599 194.6 673.999 196.2 670.399 c
197.8 666.799 200.2 663.199 201.8 662.799 c
203.4 662.399 203 661.199 200.6 661.599 c
198.2 661.999 195.4 662.399 191 667.599 c
F
0.1 0.55 0.85 0.3 k
188.4 689.999 m
190.2 703.6 191.4 707.6 V
190.6 714.4 193 718.6 v
195.4 722.8 197.4 729 200.4 734.4 c
203.4 739.8 203.6 743.8 207.6 745.4 c
211.6 747 217.6 755.6 220.4 756.6 c
223.2 757.6 223 756.8 y
229.8 771.6 243.4 767.6 V
227.2 770.4 243 779.8 V
238.2 778.7 241.5 785.7 v
243.701 790.368 243.2 783.6 232.2 771.8 C
227.2 763.2 222 760.2 v
216.8 757.2 204.8 750.2 203.6 746.4 c
202.4 742.6 199.2 736.8 197.2 735.2 c
195.2 733.6 192.4 729.4 192 726 C
190.8 722 189.4 720.8 v
188 719.6 187.8 716.4 187.8 714.4 c
187.8 712.4 185.8 709.6 186 707.2 C
186.8 688.199 186.4 686.199 V
188.4 689.999 L
f
1 g
179.8 685.399 m
177.8 686.799 173.4 680.799 V
180.7 647.799 180.7 646.399 V
181.8 648.499 180.5 655.699 v
179.2 662.899 178.3 675.599 y
179.8 685.399 l
f
0.1 0.55 0.85 0.3 k
201.4 746 m
183.8 742.8 184.2 713.6 V
183.4 688.799 l
182.2 714.4 181 716 v
179.8 717.6 183.8 728.8 180.6 722.8 C
166.6 708.8 174.6 687.599 V
176.1 684.299 173.1 688.899 V
168.5 701.5 169.6 707.9 V
169.8 710.1 171.7 712.9 V
180.3 724.6 183 726.9 V
184.8 741.3 200.2 746.5 V
205.9 748.8 201.4 746 V
f
0 g
340.8 812.2 m
341.46 812.554 341.451 813.524 342.031 813.697 c
343.18 814.041 343.344 815.108 343.862 815.892 c
344.735 817.211 344.928 818.744 345.51 820.235 c
345.782 820.935 345.809 821.89 345.496 822.55 c
344.322 825.031 343.62 827.48 342.178 829.906 c
341.91 830.356 341.648 831.15 341.447 831.748 c
340.984 833.132 339.727 834.123 338.867 835.443 c
338.579 835.884 339.104 836.809 338.388 836.893 c
337.491 836.998 336.042 837.578 335.809 836.552 c
335.221 833.965 336.232 831.442 337.2 829 C
336.418 828.308 336.752 827.387 336.904 826.62 c
337.614 823.014 336.416 819.662 335.655 816.188 c
335.632 816.084 335.974 815.886 335.946 815.824 c
334.724 813.138 333.272 810.693 331.453 808.312 c
330.695 807.32 329.823 806.404 329.326 805.341 c
328.958 804.554 328.55 803.588 328.8 802.6 C
325.365 799.82 323.115 795.975 320.504 792.129 c
320.042 791.449 320.333 790.24 320.884 789.971 c
321.697 789.573 322.653 790.597 323.123 791.443 c
323.512 792.141 323.865 792.791 324.356 793.434 c
324.489 793.609 324.31 794.028 324.445 794.149 c
327.078 796.496 328.747 799.432 331.2 801.8 C
333.15 802.129 334.687 803.127 336.435 804.14 c
336.743 804.319 337.267 804.07 337.557 804.265 c
339.31 805.442 339.308 807.478 339.414 809.388 c
339.464 810.272 339.66 811.589 340.8 812.2 c
f
331.959 816.666 m
332.083 816.743 331.928 817.166 332.037 817.382 c
332.199 817.706 332.602 817.894 332.764 818.218 c
332.873 818.434 332.71 818.814 332.846 818.956 c
335.179 821.403 335.436 824.427 334.4 827.4 C
335.424 828.02 335.485 829.282 335.06 830.129 c
334.207 831.829 334.014 833.755 333.039 835.298 c
332.237 836.567 330.659 837.811 329.288 836.508 c
328.867 836.108 328.546 835.321 328.824 834.609 c
328.888 834.446 329.173 834.3 329.146 834.218 c
329.039 833.894 328.493 833.67 328.487 833.398 c
328.457 831.902 327.503 830.391 328.133 829.062 c
328.905 827.433 329.724 825.576 330.4 823.8 C
329.166 821.684 330.199 819.235 328.446 817.358 c
328.31 817.212 328.319 816.826 328.441 816.624 c
328.733 816.138 329.139 815.732 329.625 815.44 c
329.827 815.319 330.175 815.317 330.375 815.441 c
330.953 815.803 331.351 816.29 331.959 816.666 c
f
394.771 826.977 m
396.16 825.185 396.45 822.39 394.401 821 C
394.951 817.691 398.302 819.67 400.401 820.2 C
400.292 820.588 400.519 820.932 400.802 820.937 c
401.859 820.952 402.539 821.984 403.601 821.8 C
404.035 823.357 405.673 824.059 406.317 825.439 c
408.043 829.134 407.452 833.407 404.868 836.653 c
404.666 836.907 404.883 837.424 404.759 837.786 c
404.003 839.997 401.935 840.312 400.001 841 C
398.824 844.875 398.163 848.906 396.401 852.6 C
394.787 852.85 394.089 854.589 392.752 855.309 c
391.419 856.028 390.851 854.449 390.892 853.403 c
390.899 853.198 391.351 852.974 391.181 852.609 c
391.105 852.445 390.845 852.334 390.845 852.2 c
390.846 852.065 391.067 851.934 391.201 851.8 C
390.283 850.98 388.86 850.503 388.565 849.358 c
387.611 845.648 390.184 842.523 391.852 839.322 c
392.443 838.187 391.707 836.916 390.947 835.708 c
390.509 835.013 390.617 833.886 390.893 833.03 c
391.645 830.699 393.236 828.96 394.771 826.977 c
f
357.611 808.591 m
356.124 806.74 352.712 804.171 355.629 802.243 c
355.823 802.114 356.193 802.11 356.366 802.244 c
358.387 803.809 360.39 804.712 362.826 805.294 c
362.95 805.323 363.224 804.856 363.593 805.017 c
365.206 805.72 367.216 805.662 368.4 807 C
372.167 806.776 375.732 807.892 379.123 809.2 c
380.284 809.648 381.554 810.207 382.755 810.709 c
384.131 811.285 385.335 812.213 386.447 813.354 c
386.58 813.49 386.934 813.4 387.201 813.4 C
387.161 814.263 388.123 814.39 388.37 815.012 c
388.462 815.244 388.312 815.64 388.445 815.742 c
390.583 817.372 391.503 819.39 390.334 821.767 c
390.049 822.345 389.8 822.963 389.234 823.439 c
388.149 824.35 387.047 823.496 386 823.8 C
385.841 823.172 385.112 823.344 384.726 823.146 c
383.867 822.707 382.534 823.292 381.675 822.854 c
380.313 822.159 379.072 821.99 377.65 821.613 c
377.338 821.531 376.56 821.627 376.4 821 C
376.266 821.134 376.118 821.368 376.012 821.346 c
374.104 820.95 372.844 820.736 371.543 819.044 c
371.44 818.911 370.998 819.09 370.839 818.955 c
369.882 818.147 369.477 816.913 368.376 816.241 c
368.175 816.118 367.823 816.286 367.629 816.157 c
366.983 815.726 366.616 815.085 365.974 814.638 c
365.645 814.409 365.245 814.734 365.277 814.99 c
365.522 816.937 366.175 818.724 365.6 820.6 C
367.677 823.12 370.194 825.069 372 827.8 C
372.015 829.966 372.707 832.112 372.594 834.189 c
372.584 834.382 372.296 835.115 372.17 835.462 c
371.858 836.316 372.764 837.382 371.92 838.106 c
370.516 839.309 369.224 838.433 368.4 837 C
366.562 836.61 364.496 835.917 362.918 837.151 c
361.911 837.938 361.333 838.844 360.534 839.9 c
359.549 841.202 359.884 842.638 359.954 844.202 c
359.96 844.33 359.645 844.466 359.645 844.6 c
359.646 844.735 359.866 844.866 360 845 C
359.294 845.626 359.019 846.684 358 847 C
358.305 848.092 357.629 848.976 356.758 849.278 c
354.763 849.969 353.086 848.057 351.194 847.984 c
350.68 847.965 350.213 849.003 349.564 849.328 c
349.132 849.544 348.428 849.577 348.066 849.311 c
347.378 848.807 346.789 848.693 346.031 848.488 c
344.414 848.052 343.136 846.958 341.656 846.103 c
340.171 845.246 339.216 843.809 338.136 842.489 c
337.195 841.337 337.059 838.923 338.479 838.423 c
340.322 837.773 341.626 840.476 343.592 840.15 c
343.904 840.099 344.11 839.788 344 839.4 C
344.389 839.291 344.607 839.52 344.8 839.8 C
345.658 838.781 346.822 838.444 347.76 837.571 c
348.73 836.667 350.476 837.085 351.491 836.088 c
353.02 834.586 352.461 831.905 354.4 830.6 C
353.814 829.287 353.207 828.01 352.872 826.583 c
352.59 825.377 353.584 824.18 354.795 824.271 c
356.053 824.365 356.315 825.124 356.8 826.2 C
357.067 825.933 357.536 825.636 357.495 825.42 c
357.038 823.033 356.011 821.04 355.553 818.609 c
355.494 818.292 355.189 818.09 354.8 818.2 C
354.332 814.051 350.28 811.657 347.735 808.492 c
347.332 807.99 347.328 806.741 347.737 806.338 c
349.14 804.951 351.1 806.497 352.8 807 C
353.013 808.206 353.872 809.148 355.204 809.092 c
355.46 809.082 355.695 809.624 356.019 809.754 c
356.367 809.892 356.869 809.668 357.155 809.866 c
358.884 811.061 360.292 812.167 362.03 813.356 c
362.222 813.487 362.566 813.328 362.782 813.436 c
363.107 813.598 363.294 813.985 363.617 814.17 c
363.965 814.37 364.207 814.08 364.4 813.8 C
363.754 813.451 363.75 812.494 363.168 812.292 c
362.393 812.024 361.832 811.511 361.158 811.064 c
360.866 810.871 360.207 811.119 360.103 810.94 c
359.505 809.912 358.321 809.474 357.611 808.591 c
f
302.2 858 m
292.962 860.872 281.8 835.2 V
279.4 830 277 828 v
274.6 826 263.4 822.4 261.4 818.4 C
251 802.4 L
265.8 818.4 269 820.8 V
277 829.2 273.8 822.4 V
259.8 811.6 261 802.4 V
255.4 788 254.6 786 V
270.6 818 273 819.2 v
275.4 820.4 276.6 820.4 275.4 816.8 c
274.2 813.2 273.8 796.8 271 794.8 C
279 815.2 278.2 818.4 V
281.4 822 283.8 816.8 V
282.6 800.8 l
287 788.8 l
284.6 800 286.2 815.6 V
284.2 826 288.2 820.4 v
292.2 814.8 301.8 808.8 301.8 804 C
296.6 821.6 287.4 826.4 V
283.4 820.4 l
282.2 822.4 l
278.6 823.2 283 830 v
287.4 836.8 287 837.6 y
293.4 830.4 295 830.4 V
308.2 838 309.4 813.6 V
316.2 828 307 834.8 V
292.2 836.8 293.4 842 V
300.6 854.4 L
304.2 859.6 302.6 856.8 y
F
282.2 841.6 m
269.4 841.6 266.2 836.4 V
259 826.8 l
276.2 836.8 280.2 838 v
284.2 839.2 282.2 841.6 Y
f
242.2 835.2 m
240.2 834 239.8 831.2 v
239.4 828.4 237 828 237.8 825.2 c
238.6 822.4 240.6 820 240.6 824 c
240.6 828 242.2 830 243 831.2 c
243.8 832.4 245.4 836.8 242.2 835.2 c
f
233.4 774 m
225 778 221.8 781.6 v
218.6 785.2 219.052 780.034 214.2 780.4 c
208.353 780.841 209.4 796.8 y
205.4 789.2 l
204.2 774.8 212.2 777.2 v
216.107 778.372 217.4 776.8 215.8 776 c
214.2 775.2 221.4 774.8 218.6 773.2 c
215.8 771.6 230.2 776.8 227.8 766.4 C
233.4 774 L
f
220.8 759.6 m
205.4 755.2 201.8 764.8 V
197 762.4 199.2 759.4 v
201.4 756.4 202.6 756 y
208 754.8 207.4 754 v
206.8 753.2 204.4 749.8 y
214.6 755.8 220.8 759.6 v
f
1 g
449.201 681.399 m
448.774 679.265 447.103 678.464 445.201 677.799 C
443.284 678.757 440.686 681.863 438.801 679.799 C
438.327 680.279 437.548 680.339 437.204 681.001 c
436.739 681.899 437.011 682.945 436.669 683.743 c
436.124 685.015 435.415 686.381 435.601 687.799 C
437.407 688.511 438.002 690.417 437.528 692.18 c
437.459 692.437 437.03 692.634 437.23 692.983 c
437.416 693.306 437.734 693.533 438.001 693.8 C
437.866 693.665 437.721 693.432 437.61 693.452 c
437 693.558 437.124 694.195 437.254 694.582 c
437.839 696.328 439.853 696.592 441.201 695.4 C
441.457 695.965 441.966 695.771 442.401 695.8 C
442.351 696.379 442.759 696.906 442.957 697.326 c
443.475 698.424 445.104 697.318 445.901 697.93 c
446.977 698.755 448.04 699.454 449.118 698.851 c
450.927 697.838 452.636 696.626 453.835 694.885 c
454.41 694.051 454.65 692.77 454.592 691.812 c
454.554 691.165 453.173 691.517 452.83 690.588 c
452.185 688.84 454.016 688.321 454.772 686.983 c
454.97 686.634 454.706 686.33 454.391 686.232 c
453.98 686.104 453.196 686.293 453.334 685.84 c
454.306 682.647 451.55 681.969 449.201 681.399 C
f
439.6 661.799 m
439.593 663.537 437.992 665.293 439.201 666.999 C
439.336 666.865 439.467 666.644 439.601 666.644 c
439.736 666.644 439.867 666.865 440.001 666.999 C
441.496 664.783 445.148 663.855 445.006 661.009 c
444.984 660.562 443.897 659.644 444.801 658.999 C
442.988 657.651 442.933 655.281 442.001 653.399 C
440.763 653.685 439.551 654.048 438.401 654.599 C
438.753 656.085 438.636 657.769 439.456 659.089 c
439.89 659.787 439.603 660.866 439.6 661.799 c
f
0.8 g
273.4 670.799 m
256.542 660.663 270.6 675.999 v
279.4 685.599 289.4 691.199 y
299.8 695.6 303.4 696.8 v
307 698 322.2 703.2 325.4 703.6 c
328.6 704 338.2 708 345 704 c
351.8 700 359.8 695.6 y
343.4 704 339.8 701.6 v
336.2 699.2 329 699.6 323 696.4 C
308.2 691.999 305 689.999 v
301.8 687.999 291.4 676.399 289.8 677.199 c
288.2 677.999 290.2 678.399 291.4 681.199 c
292.6 683.999 290.6 685.599 282.6 679.199 c
274.6 672.799 273.4 670.799 Y
f
0 g
280.805 676.766 m
282.215 689.806 290.693 688.141 V
298.919 692.311 301.641 694.279 V
309.78 695.981 311.09 696.598 v
329.569 705.298 344.288 700.779 344.835 701.899 c
345.381 703.018 365.006 695.901 368.615 691.815 c
369.006 691.372 358.384 697.412 348.686 699.303 c
340.413 700.917 318.811 699.056 307.905 693.52 c
304.932 692.011 295.987 686.227 293.456 686.338 c
290.925 686.45 280.805 676.766 Y
f
0.8 g
277 651.199 m
261.8 653.599 278.6 655.199 V
296.6 657.199 300.6 662.399 V
314.2 671.599 317 671.999 v
319.8 672.399 349.8 679.599 350.2 681.999 c
350.6 684.399 356.2 684.399 357.8 683.599 c
359.4 682.799 358.6 681.599 355.8 680.799 c
353 679.999 321.8 663.599 315.4 662.399 c
309 661.199 297.4 653.599 292.6 652.399 c
287.8 651.199 277 651.199 Y
f
0 g
296.52 658.597 m
287.938 659.426 296.539 660.245 V
305.355 663.669 307.403 666.332 V
314.367 671.043 315.8 671.247 v
317.234 671.452 331.194 675.139 331.399 676.367 c
331.604 677.596 365.67 690.177 370.09 686.987 c
373.001 684.886 363.1 686.563 353.466 682.153 c
352.111 681.533 318.258 666.946 314.981 666.332 c
311.704 665.717 305.765 661.826 303.307 661.212 c
300.85 660.597 296.52 658.597 Y
f
288.6 656.399 m
293.8 656.799 292.6 655.199 v
291.4 653.599 289 654.399 y
288.6 656.399 l
f
281.4 654.799 m
286.6 655.199 285.4 653.599 v
284.2 651.999 281.8 652.799 y
281.4 654.799 l
f
271 653.199 m
276.2 653.599 275 651.999 v
273.8 650.399 271.4 651.199 y
271 653.199 l
f
263.4 652.399 m
268.6 652.799 267.4 651.199 v
266.2 649.599 263.8 650.399 y
263.4 652.399 l
f
301.8 691.999 m
306.2 691.999 305 690.399 v
303.8 688.799 300.6 689.199 y
301.8 691.999 l
f
291.8 686.399 m
298.306 688.54 295.8 685.199 v
294.6 683.599 292.2 684.399 y
291.8 686.399 l
f
280.6 681.599 m
285.8 681.999 284.6 680.399 v
283.4 678.799 281 679.599 y
280.6 681.599 l
f
273 675.599 m
278.2 675.999 277 674.399 v
275.8 672.799 273.4 673.599 y
273 675.599 l
f
266.2 670.799 m
271.4 671.199 270.2 669.599 v
269 667.999 266.6 668.799 y
266.2 670.799 l
f
305.282 664.402 m
312.203 664.934 310.606 662.805 v
309.009 660.675 305.814 661.74 y
305.282 664.402 l
f
315.682 669.202 m
322.603 669.734 321.006 667.605 v
319.409 665.475 316.214 666.54 y
315.682 669.202 l
f
326.482 673.602 m
333.403 674.134 331.806 672.005 v
330.209 669.875 327.014 670.94 y
326.482 673.602 l
f
336.882 678.402 m
343.803 678.934 342.206 676.805 v
340.609 674.675 337.414 675.74 y
336.882 678.402 l
f
309.282 696.402 m
316.203 696.934 314.606 694.805 v
313.009 692.675 309.014 692.94 y
309.282 696.402 l
f
319.282 699.602 m
326.203 700.134 324.606 698.005 v
323.009 695.875 318.614 696.14 y
319.282 699.602 l
f
296.6 659.599 m
301.8 659.999 300.6 658.399 v
299.4 656.799 297 657.599 y
296.6 659.599 l
f
0.1 0.55 0.85 0.3 k
223.4 758.8 m
219 750 218.6 746.8 V
219.4 755.6 220.6 757.6 v
221.8 759.6 223.4 758.8 y
f
205 744.8 m
201.8 730.4 202.2 727.6 V
201 739.2 201.4 740.4 v
201.8 741.6 205 744.8 y
f
0.8 g
225.8 819.4 m
225.6 816.2 l
223.4 816 l
237.6 803.4 238.2 795.8 V
239 804 225.8 819.4 V
f
0 g
229.784 818.135 m
229.353 818.551 229.572 819.296 229.164 819.556 c
228.355 820.072 230.462 820.129 230.234 820.845 c
229.851 822.051 230.038 822.072 229.916 823.348 c
229.859 823.946 230.447 825.486 230.832 825.926 c
232.278 827.578 230.954 830.51 232.594 832.061 c
232.898 832.35 233.274 832.902 233.559 833.32 c
234.218 834.283 235.402 834.771 236.352 835.599 c
236.67 835.875 236.469 836.702 237.038 836.61 c
237.752 836.495 238.993 836.625 238.948 835.784 c
238.835 833.664 237.506 831.944 236.226 830.276 C
236.677 829.572 236.219 828.937 235.935 828.38 c
234.6 825.76 234.789 822.919 234.615 820.079 c
234.61 819.994 234.303 819.916 234.311 819.863 c
234.664 817.528 235.248 815.329 236.127 813.1 c
236.493 812.17 236.964 811.275 237.114 810.348 c
237.225 809.662 237.328 808.829 236.92 808.124 C
238.955 805.234 237.646 802.583 238.815 799.052 c
239.022 798.427 240.714 796.513 240.251 796.674 c
237.738 797.545 237.626 797.943 237.449 798.696 c
237.303 799.319 236.973 800.696 236.736 801.298 c
236.672 801.462 236.501 803.346 236.423 803.468 c
234.91 805.85 236.268 805.674 234.898 808.032 C
233.47 808.712 232.504 809.816 231.381 810.978 c
231.183 811.182 232.326 811.906 232.145 812.119 c
231.053 813.408 229.9 814.175 230.236 815.668 c
230.391 816.358 230.528 817.415 229.784 818.135 c
f
226.2 816.4 m
226.6 809.6 229 808 v
231.4 806.4 230.2 807.2 227 808.4 c
223.8 809.6 225 810.4 y
222.2 810 224.6 808 v
227 806 230.6 803.6 229 803.6 c
227.4 803.6 219.8 807.6 219.8 810.4 c
219.8 813.2 218.8 817.3 y
219.9 818.1 224.7 818 V
226.1 817.3 226.2 816.4 V
f
1 g
1 J 0.1 w
225.4 797.8 m
216.88 800.591 198.4 797.2 V
207.431 799.278 226.2 797 v
236.5 795.75 225.4 797.8 Y
b
227.498 797.871 m
219.252 801.389 200.547 799.608 V
209.725 800.897 228.226 797.005 v
238.38 794.869 227.498 797.871 Y
b
229.286 797.778 m
221.324 801.899 202.539 801.514 V
211.787 802.118 229.948 796.86 v
239.914 793.975 229.286 797.778 Y
b
230.556 797.555 m
223.732 801.862 206.858 802.96 V
215.197 802.79 231.078 796.681 v
239.794 793.328 230.556 797.555 Y
b
345.84 787.039 m
344.91 786.395 345.124 787.576 v
345.339 788.757 373.547 801.927 377.161 801.677 C
346.913 788.471 345.84 787.039 V
b
342.446 786.4 m
341.57 785.685 341.691 786.879 v
341.812 788.073 368.899 803.418 372.521 803.452 C
343.404 787.911 342.446 786.4 V
b
339.16 785.025 m
338.332 784.253 338.374 785.453 v
338.416 786.652 358.233 802.149 368.045 804.023 C
350.015 795.896 339.16 785.025 V
b
336.284 783.162 m
335.539 782.468 335.577 783.547 v
335.615 784.627 353.449 798.574 362.28 800.26 C
346.054 792.946 336.284 783.162 V
b
0.8 g
0 J 1 w
304.6 635.199 m
289.4 637.599 306.2 639.199 V
324.2 641.199 328.2 646.399 V
341.8 655.599 344.6 655.999 v
347.4 656.399 363.8 659.999 364.2 662.399 c
364.6 664.799 370.6 667.199 372.2 666.399 c
373.8 665.599 373.8 656.399 371 655.599 c
368.2 654.799 349.4 647.599 343 646.399 c
336.6 645.199 325 637.599 320.2 636.399 c
315.4 635.199 304.6 635.199 Y
f
0 g
377.6 672.599 m
374.6 670.999 373.4 668.399 V
367 657.799 352.8 654.599 V
329.8 645.599 322 643.599 V
308.6 638.599 301.2 639.399 V
294.2 639.199 300.4 637.599 V
320.6 639.599 324 641.399 V
339.6 646.599 342.6 649.199 v
345.6 651.799 363.8 656.799 366 658.799 c
368.2 660.799 378 669.199 377.6 672.599 C
f
318.882 641.089 m
324.111 641.315 322.958 639.766 v
321.805 638.216 319.357 639.09 y
318.882 641.089 l
f
311.68 639.737 m
316.908 639.963 315.756 638.414 v
314.603 636.864 312.155 637.737 y
311.68 639.737 l
f
301.251 638.489 m
306.48 638.716 305.327 637.166 v
304.174 635.617 301.726 636.49 y
301.251 638.489 l
f
293.617 637.945 m
298.846 638.171 297.693 636.622 v
296.54 635.072 294.092 635.946 y
293.617 637.945 l
f
335.415 648.487 m
342.375 648.788 340.84 646.726 v
339.306 644.664 336.047 645.826 y
335.415 648.487 l
f
345.73 652.912 m
351.689 656.213 351.155 651.151 v
350.885 648.595 346.362 650.251 y
345.73 652.912 l
f
354.862 655.726 m
362.021 659.427 360.287 653.965 v
359.509 651.515 355.493 653.065 y
354.862 655.726 l
f
364.376 660.551 m
368.735 665.452 369.801 658.79 v
370.207 656.252 365.008 657.89 y
364.376 660.551 l
f
326.834 644.003 m
332.062 644.23 330.91 642.68 v
329.757 641.131 327.308 642.004 y
326.834 644.003 l
f
1 g
1 J 0.1 w
362.434 765.397 m
361.708 764.732 361.707 765.803 v
361.707 766.873 379.191 780.137 388.034 781.521 C
371.935 774.792 362.434 765.397 V
b
0 g
0 J 1 w
365.4 701.6 m
387.401 679.199 396.601 675.599 V
405.801 664.399 401.801 638.399 V
398.601 630.799 395.401 651.599 V
398.601 676.799 387.401 660.799 V
379 670.699 385.4 670.399 V
388.601 668.399 389.001 669.999 v
389.401 671.599 381.4 685.199 364.2 699.6 c
347 714 365.4 701.6 Y
f
1 g
1 J 0.1 w
307 662.799 m
306.8 664.599 308.6 663.799 v
310.4 662.999 404.601 656.799 436.201 632.799 C
391.001 655.999 307 662.799 V
b
317.4 667.199 m
317.2 668.999 319 668.199 v
320.8 667.399 457.401 668.399 481.001 635.999 C
459.001 661.199 317.4 667.199 V
b
329 671.199 m
328.8 672.999 330.6 672.199 v
332.4 671.399 505.801 684.399 529.401 651.999 C
519.801 677.599 329 671.199 V
b
339 675.999 m
338.8 677.799 340.6 676.999 v
342.4 676.199 464.601 714.8 488.201 682.399 C
474.801 707 339 675.999 V
b
281 653.199 m
280.8 654.999 282.6 654.199 v
284.4 653.399 302.2 651.199 304.2 612.399 C
297 654.399 281 653.199 V
b
272.2 651.599 m
272 653.399 273.8 652.599 v
275.6 651.799 289.8 656.399 287 617.599 C
288.2 652.799 272.2 651.599 V
b
264.2 651.199 m
264 652.999 265.8 652.199 v
267.6 651.399 283 650.799 270.6 628.399 C
280.2 652.399 264.2 651.199 V
b
311.526 695.535 m
311.082 693.536 312.631 694.753 v
328.699 707.378 361.141 766.28 416.826 771.914 C
378.518 784.024 311.526 695.535 V
b
322.726 697.335 m
321.363 698.528 323.231 699.153 v
325.099 699.778 437.541 772.28 476.826 764.314 C
449.719 771.824 322.726 697.335 V
b
301.885 691.233 m
301.376 689.634 303.087 690.61 v
312.062 695.73 315.677 752.941 359.254 754.196 C
326.843 768.91 301.885 691.233 V
b
281.962 680.207 m
280.885 678.921 282.838 679.175 v
293.084 680.507 314.489 721.778 358.928 716.699 C
326.962 731.045 281.962 680.207 V
b
293.2 686.333 m
292.389 684.864 294.258 685.489 v
304.057 688.763 317.141 733.375 361.729 736.922 C
327.603 744.865 293.2 686.333 V
b
274.922 675.088 m
274.049 674.046 275.631 674.252 v
283.93 675.331 301.268 708.76 337.264 704.646 C
311.371 716.266 274.922 675.088 V
b
267.323 669.179 m
266.318 668.134 267.909 668.252 v
272.077 668.561 302.715 701.64 321.183 686.138 C
309.168 704.861 267.323 669.179 V
b
336.855 701.102 m
335.654 702.457 337.586 702.842 v
339.518 703.226 460.221 760.939 498.184 748.073 C
472.243 758.947 336.855 701.102 V
b
303.4 636.799 m
303.2 638.599 305 637.799 v
306.8 636.999 322.2 636.399 309.8 613.999 C
319.4 637.999 303.4 636.799 V
b
313.8 638.399 m
313.6 640.199 315.4 639.399 v
317.2 638.599 335 636.399 337 597.599 C
329.8 639.599 313.8 638.399 V
b
320.6 639.999 m
320.4 641.799 322.2 640.999 v
324 640.199 348.6 636.799 372.2 604.399 C
336.6 641.199 320.6 639.999 V
b
328.225 642.028 m
327.788 643.786 329.678 643.232 v
331.568 642.678 352.002 644.577 390.099 610.401 C
343.924 645.344 328.225 642.028 V
b
338.625 646.428 m
338.188 648.186 340.078 647.632 v
341.968 647.078 376.802 642.577 428.499 607.601 C
354.324 649.744 338.625 646.428 V
b
298.2 657.999 m
298 659.799 299.8 658.999 v
301.6 658.199 355 655.599 385.4 628.799 C
350.499 653.574 298.2 657.999 V
b
288.2 653.999 m
288 655.799 289.8 654.999 v
291.6 654.199 316.2 650.799 339.8 618.399 C
304.2 655.199 288.2 653.999 V
b
349.503 651.038 m
348.938 652.759 350.864 652.345 v
352.79 651.932 387.86 649.996 441.981 618.902 C
364.317 653.296 349.503 651.038 V
b
357.903 653.438 m
357.338 655.159 359.264 654.745 v
361.19 654.332 396.26 652.396 450.381 621.302 C
373.317 656.096 357.903 653.438 V
b
367.503 658.438 m
366.938 660.159 368.864 659.745 v
370.79 659.332 413.86 654.996 503.582 620.702 C
382.917 661.096 367.503 658.438 V
b
0 g
0 J 1 w
256.2 651.599 m
261.4 651.999 260.2 650.399 v
259 648.799 256.6 649.599 y
256.2 651.599 l
f
287 637.599 m
292.2 637.999 291 636.399 v
289.8 634.799 287.4 635.599 y
287 637.599 l
f
278.2 637.999 m
283.4 638.399 282.2 636.799 v
281 635.199 278.6 635.999 y
278.2 637.999 l
f
182.831 649.818 m
187.876 648.495 186.218 647.376 v
184.561 646.256 182.554 647.798 y
182.831 649.818 l
f
184.831 659.418 m
189.876 658.095 188.218 656.976 v
186.561 655.856 184.554 657.398 y
184.831 659.418 l
f
177.631 663.818 m
182.676 662.495 181.018 661.376 v
179.361 660.256 177.354 661.798 y
177.631 663.818 l
f
0.8 g
1 J 0.1 w
257.4 588.799 m
255.8 588.799 251.8 586.799 V
249.8 586.799 238.6 583.199 233 573.199 C
245.4 582.799 257.4 588.799 V
f
345.116 496.153 m
345.257 495.895 345.312 495.475 345.604 495.458 c
346.262 495.418 347.495 495.117 347.37 495.753 c
346.522 500.059 345.648 504.996 341.515 506.803 c
340.876 507.082 339.434 506.669 339.36 505.785 c
339.233 504.261 339.116 502.912 339.425 501.446 c
339.725 500.025 341.883 500.015 342.8 501.399 C
343.736 499.727 344.168 497.884 345.116 496.153 c
f
334.038 491.419 m
334.786 490.006 334.659 488.147 336.074 487.584 c
336.814 487.29 338.664 488.265 338.246 489.339 c
337.444 491.4 337.056 493.639 335.667 495.45 c
335.467 495.712 335.707 496.245 335.547 496.573 c
334.953 497.793 333.808 498.528 332.4 498.199 C
331.285 495.996 332.433 493.867 333.955 492.158 c
334.091 492.006 333.925 491.63 334.038 491.419 c
f
294.436 496.609 m
294.328 496.986 294.29 497.449 294.455 497.77 c
294.986 498.803 295.779 499.925 295.442 500.947 c
295.094 502.003 293.978 501.821 293.328 501.252 c
292.193 500.258 292.144 498.432 291.453 497.073 c
291.257 496.687 291.308 496.114 290.867 495.723 c
290.393 495.302 289.953 493.778 290.049 493.207 c
290.102 492.894 289.919 482.986 290.141 483.249 c
290.76 483.982 293.81 493.716 293.879 494.608 c
293.936 495.339 294.668 495.804 294.436 496.609 c
f
268.798 503.401 m
271.432 505.9 274.222 508.861 273.78 512.573 c
273.664 513.549 271.889 513.022 271.702 512.176 c
270.9 508.551 268.861 505.89 266.293 503.498 c
264.097 501.451 262.235 495.107 262 494.599 C
265.697 499.855 267.954 502.601 268.798 503.401 c
f
255.224 509.365 m
255.747 509.735 255.445 510.226 255.662 510.558 c
256.615 512.016 257.916 513.262 257.934 515 c
257.937 515.277 257.559 515.586 257.224 515.362 c
256.947 515.178 256.605 515.048 256.497 514.918 c
254.467 512.469 253.067 509.798 251.624 506.986 c
251.441 506.629 250.297 502.138 250.61 502.027 c
250.849 501.942 252.569 506.123 252.779 506.237 c
254.042 506.923 254.054 508.538 255.224 509.365 c
f
271.957 489.821 m
272.401 490.69 273.977 491.892 273.864 492.781 c
273.746 493.709 274.214 495.152 273.302 494.464 c
272.045 493.516 268.596 492.167 268.326 486.359 c
268.3 485.788 271.274 488.481 271.957 489.821 c
f
286.4 506.999 m
286.8 507.667 287.508 507.194 287.967 507.457 c
288.615 507.829 289.226 508.387 289.518 509.036 c
290.488 511.185 292.257 513.005 292.4 515.399 C
290.909 516.804 290.23 514.764 289.6 513.799 C
288.277 515.446 287.278 513.572 285.978 513.053 c
285.908 513.025 285.695 513.372 285.62 513.345 c
284.443 512.905 283.763 511.824 282.765 511.043 c
282.594 510.909 282.189 511.089 282.042 510.953 c
281.39 510.35 280.417 510.025 280.137 509.343 c
279.027 506.636 275.887 504.541 274 496.999 C
274.381 496.09 278.512 503.641 278.999 504.339 c
279.835 505.535 279.953 502.678 281.229 503.344 c
281.28 503.371 281.466 503.133 281.6 502.999 C
281.794 503.279 282.012 503.508 282.4 503.399 C
282.4 503.799 282.266 504.355 282.467 504.514 c
283.704 505.491 283.62 506.559 284.4 507.799 C
284.858 507.01 285.919 507.729 286.4 506.999 C
f
346.2 452.599 m
353.6 472.999 349.2 484.199 V
360.6 462.599 356 451.399 V
355.6 461.799 351.6 466.799 V
347.6 453.999 346.2 452.599 V
f
331.4 455.199 m
336.8 463.999 328.8 482.399 V
328 461.999 321.2 450.999 V
335.4 471.199 331.4 455.199 V
f
321.4 457.199 m
321.2 477.199 321.6 480.199 V
317.8 463.599 307.6 453.999 V
322 465.999 321.4 457.199 V
f
311.8 489.199 m
317.8 475.599 307.8 457.199 V
314.2 469.399 309.4 476.399 V
312 479.799 311.8 489.199 V
f
292.6 457.599 m
291.6 473.199 293.4 475.399 V
293.6 481.799 293.2 482.799 V
297.2 488.999 297.4 481.599 V
298.8 473.799 301.6 469.199 V
305.2 463.799 305 457.399 V
295 487.599 292.6 457.599 V
f
289 485.199 m
282.4 474.399 280.6 455.399 V
279.2 461.599 283 475.999 V
287.2 491.399 289 485.199 V
f
267.2 465.399 m
272.2 470.799 273.6 475.799 V
277.2 491.599 270.8 482.999 V
271 474.999 262.8 467.599 V
267.6 469.999 267.2 465.399 V
f
261.4 470.399 m
264.8 487.799 265.6 488.599 V
267.4 491.999 264.6 488.799 V
255.8 469.599 251.8 462.999 V
259.8 472.199 261.4 470.399 V
f
255.6 486.999 m
267.2 509.399 245.4 483.599 V
256.4 493.399 255.6 486.999 V
f
240.2 501.599 m
245 520.399 247.6 520.199 V
255.8 529.199 249.2 518.599 V
243.2 508.999 243.8 499.199 V
243.2 508.799 240.2 501.599 V
f
570.5 513 m
558.5 523 556 526.5 V
569.5 508 569.5 501 V
572 508.5 570.5 513 V
f
576 535 m
555 550 551.5 557.5 V
578 528 578 523.5 V
578.5 532.5 576 535 V
f
593 689 m
581 697 579.5 695 V
590 688.5 592.5 680 V
591 689 593 689 V
f
601.5 608.5 m
584 620.5 l
603 603.5 603.5 599.5 V
601.5 608.5 L
f
0 g
1 w
210.75 631 m
232.75 626.25 l
S
261 469 m
260.5 472.5 251.5 462 v
S
266.5 464 m
268.5 470.5 262 466 v
S
320.5 455.5 m
322 466.5 310.5 453.5 v
S

showpage

% Modification Denis GIROU (CNRS/IDRIS - France) <Denis.Girou@idris.fr> - 18 Dec. 1997
%% %%Trailer
countdictstack InitDictCount sub { end } repeat
cleartomark
restore
grestore

%%EndDocument
 @endspecial 0.17 0.31 0.44 TeXcolorrgb 0.17 0.31 0.44
TeXcolorrgb 0.17 0.31 0.44 TeXcolorrgb eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
